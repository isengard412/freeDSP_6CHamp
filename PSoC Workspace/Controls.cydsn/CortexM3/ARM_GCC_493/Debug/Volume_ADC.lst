ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Volume_ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Volume_ADC_GainCompensation,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	Volume_ADC_GainCompensation, %function
  23              	Volume_ADC_GainCompensation:
  24              	.LFB21:
  25              		.file 1 "Generated_Source\\PSoC5\\Volume_ADC.c"
   1:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Volume_ADC.c **** * File Name: Volume_ADC.c
   3:Generated_Source\PSoC5/Volume_ADC.c **** * Version 3.20
   4:Generated_Source\PSoC5/Volume_ADC.c **** *
   5:Generated_Source\PSoC5/Volume_ADC.c **** * Description:
   6:Generated_Source\PSoC5/Volume_ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/Volume_ADC.c **** *  Component.
   8:Generated_Source\PSoC5/Volume_ADC.c **** *
   9:Generated_Source\PSoC5/Volume_ADC.c **** * Note:
  10:Generated_Source\PSoC5/Volume_ADC.c **** *
  11:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/Volume_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/Volume_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/Volume_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/Volume_ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/Volume_ADC.c **** 
  18:Generated_Source\PSoC5/Volume_ADC.c **** #include "Volume_ADC.h"
  19:Generated_Source\PSoC5/Volume_ADC.c **** 
  20:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/Volume_ADC.c ****     #include "Volume_ADC_theACLK.h"
  22:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/Volume_ADC.c **** 
  24:Generated_Source\PSoC5/Volume_ADC.c **** #include "Volume_ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/Volume_ADC.c **** 
  26:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/Volume_ADC.c ****     #include "Volume_ADC_AMux.h"
  28:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/Volume_ADC.c **** 
  30:Generated_Source\PSoC5/Volume_ADC.c **** 
  31:Generated_Source\PSoC5/Volume_ADC.c **** /***************************************
  32:Generated_Source\PSoC5/Volume_ADC.c **** * Global data allocation
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 2


  33:Generated_Source\PSoC5/Volume_ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/Volume_ADC.c **** 
  35:Generated_Source\PSoC5/Volume_ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_convDone = 0u;
  37:Generated_Source\PSoC5/Volume_ADC.c **** 
  38:Generated_Source\PSoC5/Volume_ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/Volume_ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/Volume_ADC.c **** */
  41:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/Volume_ADC.c **** 
  43:Generated_Source\PSoC5/Volume_ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/Volume_ADC.c **** uint8 Volume_ADC_initVar = 0u;
  45:Generated_Source\PSoC5/Volume_ADC.c **** 
  46:Generated_Source\PSoC5/Volume_ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_started = 0u;
  48:Generated_Source\PSoC5/Volume_ADC.c **** 
  49:Generated_Source\PSoC5/Volume_ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_Config = 1u;
  51:Generated_Source\PSoC5/Volume_ADC.c **** 
  52:Generated_Source\PSoC5/Volume_ADC.c **** volatile int32 Volume_ADC_Offset;
  53:Generated_Source\PSoC5/Volume_ADC.c **** volatile int32 Volume_ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/Volume_ADC.c **** 
  55:Generated_Source\PSoC5/Volume_ADC.c **** 
  56:Generated_Source\PSoC5/Volume_ADC.c **** /***************************************
  57:Generated_Source\PSoC5/Volume_ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/Volume_ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/Volume_ADC.c **** 
  60:Generated_Source\PSoC5/Volume_ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/Volume_ADC.c **** static Volume_ADC_GCOR_STRUCT Volume_ADC_gcor[Volume_ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/Volume_ADC.c **** 
  63:Generated_Source\PSoC5/Volume_ADC.c **** 
  64:Generated_Source\PSoC5/Volume_ADC.c **** 
  65:Generated_Source\PSoC5/Volume_ADC.c **** /***************************************
  66:Generated_Source\PSoC5/Volume_ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/Volume_ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGa
  70:Generated_Source\PSoC5/Volume_ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/Volume_ADC.c **** 
  73:Generated_Source\PSoC5/Volume_ADC.c **** 
  74:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Init
  76:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/Volume_ADC.c **** *
  78:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
  79:Generated_Source\PSoC5/Volume_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/Volume_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/Volume_ADC.c **** * Volume_ADC_Start().
  82:Generated_Source\PSoC5/Volume_ADC.c **** *
  83:Generated_Source\PSoC5/Volume_ADC.c **** *
  84:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/Volume_ADC.c **** *  None
  86:Generated_Source\PSoC5/Volume_ADC.c **** *
  87:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
  88:Generated_Source\PSoC5/Volume_ADC.c **** *  None
  89:Generated_Source\PSoC5/Volume_ADC.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 3


  90:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Init(void) 
  92:Generated_Source\PSoC5/Volume_ADC.c **** {
  93:Generated_Source\PSoC5/Volume_ADC.c **** 
  94:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Config = 1u;
  95:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_convDone = 0u;
  96:Generated_Source\PSoC5/Volume_ADC.c **** 
  97:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  98:Generated_Source\PSoC5/Volume_ADC.c **** 
  99:Generated_Source\PSoC5/Volume_ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_theACLK_SetMode(CYCLK_DUTY);
 102:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/Volume_ADC.c **** 
 104:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/Volume_ADC.c ****         CyIntSetPriority(Volume_ADC_INTC_NUMBER, Volume_ADC_INTC_PRIOR_NUMBER);
 107:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/Volume_ADC.c **** 
 109:Generated_Source\PSoC5/Volume_ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_DEM0_REG    = Volume_ADC_CFG1_DSM_DEM0;
 111:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_DEM1_REG    = Volume_ADC_CFG1_DSM_DEM1;
 112:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_MISC_REG    = Volume_ADC_CFG1_DSM_MISC;
 113:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CLK_REG    |= Volume_ADC_CFG1_DSM_CLK;
 114:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF1_REG    = Volume_ADC_CFG1_DSM_REF1;
 115:Generated_Source\PSoC5/Volume_ADC.c **** 
 116:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_OUT0_REG    = Volume_ADC_CFG1_DSM_OUT0;
 117:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_OUT1_REG    = Volume_ADC_CFG1_DSM_OUT1;
 118:Generated_Source\PSoC5/Volume_ADC.c **** 
 119:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR0_REG     = Volume_ADC_CFG1_DSM_CR0;
 120:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR1_REG     = Volume_ADC_CFG1_DSM_CR1;
 121:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR3_REG     |= Volume_ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/Volume_ADC.c **** #else
 124:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR3_REG     = Volume_ADC_CFG1_DSM_CR3;
 125:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR8_REG     = Volume_ADC_CFG1_DSM_CR8;
 127:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR9_REG     = Volume_ADC_CFG1_DSM_CR9;
 128:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR13_REG    = Volume_ADC_CFG1_DSM_CR13;
 129:Generated_Source\PSoC5/Volume_ADC.c **** 
 130:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG      = Volume_ADC_CFG1_DEC_SR;
 131:Generated_Source\PSoC5/Volume_ADC.c **** 
 132:Generated_Source\PSoC5/Volume_ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_GainCompensation(Volume_ADC_CFG1_INPUT_RANGE,
 134:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1);
 138:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_GainCompensation(Volume_ADC_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2);
 144:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_GainCompensation(Volume_ADC_CFG3_INPUT_RANGE,
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 4


 147:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3);
 151:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_GainCompensation(Volume_ADC_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4);
 158:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/Volume_ADC.c **** 
 160:Generated_Source\PSoC5/Volume_ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_GVAL_REG = Volume_ADC_gcor[Volume_ADC_Config - 1u].gval;
 162:Generated_Source\PSoC5/Volume_ADC.c ****     CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor);
 163:Generated_Source\PSoC5/Volume_ADC.c **** 
 164:Generated_Source\PSoC5/Volume_ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_InitConfig(Volume_ADC_Config);
 166:Generated_Source\PSoC5/Volume_ADC.c **** }
 167:Generated_Source\PSoC5/Volume_ADC.c **** 
 168:Generated_Source\PSoC5/Volume_ADC.c **** 
 169:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Enable
 171:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/Volume_ADC.c **** *
 173:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 174:Generated_Source\PSoC5/Volume_ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/Volume_ADC.c **** *
 176:Generated_Source\PSoC5/Volume_ADC.c **** *
 177:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 178:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 179:Generated_Source\PSoC5/Volume_ADC.c **** *
 180:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 181:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 182:Generated_Source\PSoC5/Volume_ADC.c **** *
 183:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 184:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Enable(void) 
 185:Generated_Source\PSoC5/Volume_ADC.c **** {
 186:Generated_Source\PSoC5/Volume_ADC.c **** 	uint8 config;
 187:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
 188:Generated_Source\PSoC5/Volume_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 189:Generated_Source\PSoC5/Volume_ADC.c **** 
 190:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read volatile variable to the local variable */
 191:Generated_Source\PSoC5/Volume_ADC.c ****     config = Volume_ADC_Config;
 192:Generated_Source\PSoC5/Volume_ADC.c ****     
 193:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable active mode power for ADC */
 194:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DEC_REG |= Volume_ADC_ACT_PWR_DEC_EN;
 195:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DSM_REG |= Volume_ADC_ACT_PWR_DSM_EN;
 196:Generated_Source\PSoC5/Volume_ADC.c **** 
 197:Generated_Source\PSoC5/Volume_ADC.c ****      /* Enable alternative active mode power for ADC */
 198:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DEC_REG |= Volume_ADC_STBY_PWR_DEC_EN;
 199:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG |= Volume_ADC_STBY_PWR_DSM_EN;
 200:Generated_Source\PSoC5/Volume_ADC.c **** 
 201:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG |= Volume_ADC_IGNORE_PRESA1;
 203:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 5


 204:Generated_Source\PSoC5/Volume_ADC.c **** 
 205:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR17_REG |= (Volume_ADC_DSM_EN_BUF_VREF | Volume_ADC_DSM_EN_BUF_VCM);
 206:Generated_Source\PSoC5/Volume_ADC.c **** 
 207:Generated_Source\PSoC5/Volume_ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:Generated_Source\PSoC5/Volume_ADC.c ****     #if (((Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P03) || \
 209:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P32)) || \
 210:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:Generated_Source\PSoC5/Volume_ADC.c ****           ((Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||  \
 212:Generated_Source\PSoC5/Volume_ADC.c ****            (Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) || \
 213:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:Generated_Source\PSoC5/Volume_ADC.c ****           ((Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||  \
 215:Generated_Source\PSoC5/Volume_ADC.c ****            (Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) || \
 216:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 3) && \
 217:Generated_Source\PSoC5/Volume_ADC.c ****           ((Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P03) || \
 218:Generated_Source\PSoC5/Volume_ADC.c ****            (Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P32))))
 219:Generated_Source\PSoC5/Volume_ADC.c ****         if (((config == 1u) &&
 220:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 221:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) ||
 222:Generated_Source\PSoC5/Volume_ADC.c ****             ((config == 2u) &&
 223:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 224:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) ||
 225:Generated_Source\PSoC5/Volume_ADC.c ****             ((config == 3u) &&
 226:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 227:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) ||
 228:Generated_Source\PSoC5/Volume_ADC.c ****             ((config == 4u) &&
 229:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 230:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P32))))
 231:Generated_Source\PSoC5/Volume_ADC.c ****         {
 232:Generated_Source\PSoC5/Volume_ADC.c ****             /* Disable the REFBUF0 */
 233:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG &= (uint8)~Volume_ADC_DSM_EN_BUF_VREF;
 234:Generated_Source\PSoC5/Volume_ADC.c ****         }
 235:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* External ref */
 236:Generated_Source\PSoC5/Volume_ADC.c **** 
 237:Generated_Source\PSoC5/Volume_ADC.c ****     #if (((Volume_ADC_CFG1_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) || \
 238:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG2_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)) || \
 240:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG3_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG4_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF))))
 244:Generated_Source\PSoC5/Volume_ADC.c ****         if(((config == 1u) &&
 245:Generated_Source\PSoC5/Volume_ADC.c ****             (Volume_ADC_CFG1_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 246:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG1_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 247:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG1_REFERENCE != Volume_ADC_EXT_REF_ON_P32))) ||
 248:Generated_Source\PSoC5/Volume_ADC.c ****              ((config == 2u) &&
 249:Generated_Source\PSoC5/Volume_ADC.c ****               (Volume_ADC_CFG2_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 250:Generated_Source\PSoC5/Volume_ADC.c ****              ((Volume_ADC_CFG2_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 251:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_REFERENCE != Volume_ADC_EXT_REF_ON_P32))) ||
 252:Generated_Source\PSoC5/Volume_ADC.c ****              ((config == 3u) &&
 253:Generated_Source\PSoC5/Volume_ADC.c ****               (Volume_ADC_CFG3_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 254:Generated_Source\PSoC5/Volume_ADC.c ****              ((Volume_ADC_CFG3_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 255:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_REFERENCE != Volume_ADC_EXT_REF_ON_P32))) ||
 256:Generated_Source\PSoC5/Volume_ADC.c ****              ((config == 4u) &&
 257:Generated_Source\PSoC5/Volume_ADC.c ****               (Volume_ADC_CFG4_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 258:Generated_Source\PSoC5/Volume_ADC.c ****              ((Volume_ADC_CFG4_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 259:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_REFERENCE != Volume_ADC_EXT_REF_ON_P32))))
 260:Generated_Source\PSoC5/Volume_ADC.c ****         {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 6


 261:Generated_Source\PSoC5/Volume_ADC.c ****             /* Enable the REFBUF1 */
 262:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF0_REG |= Volume_ADC_DSM_EN_BUF_VREF_INN;
 263:Generated_Source\PSoC5/Volume_ADC.c ****         }
 264:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:Generated_Source\PSoC5/Volume_ADC.c ****     if(config != 0u)
 266:Generated_Source\PSoC5/Volume_ADC.c ****     {
 267:Generated_Source\PSoC5/Volume_ADC.c ****         /* Suppress compiler warning */
 268:Generated_Source\PSoC5/Volume_ADC.c ****     }
 269:Generated_Source\PSoC5/Volume_ADC.c **** 
 270:Generated_Source\PSoC5/Volume_ADC.c ****     /* Wait for 3 microseconds */
 271:Generated_Source\PSoC5/Volume_ADC.c ****     CyDelayUs(Volume_ADC_PRES_DELAY_TIME);
 272:Generated_Source\PSoC5/Volume_ADC.c **** 
 273:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the press circuit */
 274:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG &= (uint8)~Volume_ADC_IGNORE_PRESA1;
 275:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 276:Generated_Source\PSoC5/Volume_ADC.c **** 
 277:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable negative pumps for DSM  */
 278:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PUMP_CR1_REG  |= ( Volume_ADC_PUMP_CR1_CLKSEL | Volume_ADC_PUMP_CR1_FORCE );
 279:Generated_Source\PSoC5/Volume_ADC.c **** 
 280:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable Modulator Chopping if required */
 281:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR2_REG = Volume_ADC_CFG1_DSM_CR2;
 282:Generated_Source\PSoC5/Volume_ADC.c **** 
 283:Generated_Source\PSoC5/Volume_ADC.c ****     /* This is only valid if there is an internal clock */
 284:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
 285:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_PWRMGR_CLK_REG |= Volume_ADC_ACT_PWR_CLK_EN;
 286:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG |= Volume_ADC_STBY_PWR_CLK_EN;
 287:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 288:Generated_Source\PSoC5/Volume_ADC.c **** 
 289:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= Volume_ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 291:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 292:Generated_Source\PSoC5/Volume_ADC.c **** 
 293:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_IRQ_REMOVE == 0u)
 294:Generated_Source\PSoC5/Volume_ADC.c ****         /* Clear a pending interrupt */
 295:Generated_Source\PSoC5/Volume_ADC.c ****         CyIntClearPending(Volume_ADC_INTC_NUMBER);
 296:Generated_Source\PSoC5/Volume_ADC.c ****         /* Enable interrupt */
 297:Generated_Source\PSoC5/Volume_ADC.c ****         CyIntEnable(Volume_ADC_INTC_NUMBER);
 298:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 299:Generated_Source\PSoC5/Volume_ADC.c **** 
 300:Generated_Source\PSoC5/Volume_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 301:Generated_Source\PSoC5/Volume_ADC.c **** 
 302:Generated_Source\PSoC5/Volume_ADC.c **** }
 303:Generated_Source\PSoC5/Volume_ADC.c **** 
 304:Generated_Source\PSoC5/Volume_ADC.c **** 
 305:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Start
 307:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 308:Generated_Source\PSoC5/Volume_ADC.c **** *
 309:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 310:Generated_Source\PSoC5/Volume_ADC.c **** *  Performs all required initialization for this component and enables
 311:Generated_Source\PSoC5/Volume_ADC.c **** *  the power. It configure all the register the first time it is called.
 312:Generated_Source\PSoC5/Volume_ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:Generated_Source\PSoC5/Volume_ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:Generated_Source\PSoC5/Volume_ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_SelectConfiguration( ) function has been called to change
 316:Generated_Source\PSoC5/Volume_ADC.c **** *  the default setting.
 317:Generated_Source\PSoC5/Volume_ADC.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 7


 318:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 319:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 320:Generated_Source\PSoC5/Volume_ADC.c **** *
 321:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 322:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 323:Generated_Source\PSoC5/Volume_ADC.c **** *
 324:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 325:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_initVar:  Used to check the initial configuration,
 326:Generated_Source\PSoC5/Volume_ADC.c **** *  modified when this function is called for the first time.
 327:Generated_Source\PSoC5/Volume_ADC.c **** *
 328:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Start(void) 
 330:Generated_Source\PSoC5/Volume_ADC.c **** {
 331:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_initVar == 0u)
 332:Generated_Source\PSoC5/Volume_ADC.c ****     {
 333:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_started == 0u)
 334:Generated_Source\PSoC5/Volume_ADC.c ****         {
 335:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Init();
 336:Generated_Source\PSoC5/Volume_ADC.c ****         }
 337:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_initVar = 1u;
 338:Generated_Source\PSoC5/Volume_ADC.c ****     }
 339:Generated_Source\PSoC5/Volume_ADC.c **** 
 340:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the ADC */
 341:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Enable();
 342:Generated_Source\PSoC5/Volume_ADC.c **** }
 343:Generated_Source\PSoC5/Volume_ADC.c **** 
 344:Generated_Source\PSoC5/Volume_ADC.c **** 
 345:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 346:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Stop
 347:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 348:Generated_Source\PSoC5/Volume_ADC.c **** *
 349:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 350:Generated_Source\PSoC5/Volume_ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:Generated_Source\PSoC5/Volume_ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:Generated_Source\PSoC5/Volume_ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:Generated_Source\PSoC5/Volume_ADC.c **** *  required.
 354:Generated_Source\PSoC5/Volume_ADC.c **** *
 355:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 356:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 357:Generated_Source\PSoC5/Volume_ADC.c **** *
 358:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 359:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 360:Generated_Source\PSoC5/Volume_ADC.c **** *
 361:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 362:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Stop(void) 
 363:Generated_Source\PSoC5/Volume_ADC.c **** {
 364:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
 365:Generated_Source\PSoC5/Volume_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 366:Generated_Source\PSoC5/Volume_ADC.c **** 
 367:Generated_Source\PSoC5/Volume_ADC.c ****     /* Stop conversions */
 368:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_CR_REG &= (uint8)~Volume_ADC_DEC_START_CONV;
 369:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |=  Volume_ADC_DEC_INTR_CLEAR;
 370:Generated_Source\PSoC5/Volume_ADC.c **** 
 371:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:Generated_Source\PSoC5/Volume_ADC.c ****        enable PRES */
 373:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG |= Volume_ADC_IGNORE_PRESA1;
 374:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 8


 375:Generated_Source\PSoC5/Volume_ADC.c **** 
 376:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR17_REG &= (uint8)~(Volume_ADC_DSM_EN_BUF_VREF | Volume_ADC_DSM_EN_BUF_VCM);
 377:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF0_REG &= (uint8)~Volume_ADC_DSM_EN_BUF_VREF_INN;
 378:Generated_Source\PSoC5/Volume_ADC.c **** 
 379:Generated_Source\PSoC5/Volume_ADC.c ****     /* Wait for 3 microseconds. */
 380:Generated_Source\PSoC5/Volume_ADC.c ****     CyDelayUs(Volume_ADC_PRES_DELAY_TIME);
 381:Generated_Source\PSoC5/Volume_ADC.c **** 
 382:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the press circuit */
 383:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG &= (uint8)~Volume_ADC_IGNORE_PRESA1;
 384:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 385:Generated_Source\PSoC5/Volume_ADC.c **** 
 386:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to the ADC */
 387:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DSM_REG &= (uint8)~Volume_ADC_ACT_PWR_DSM_EN;
 388:Generated_Source\PSoC5/Volume_ADC.c **** 
 389:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to Decimator block */
 390:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DEC_REG &= (uint8)~Volume_ADC_ACT_PWR_DEC_EN;
 391:Generated_Source\PSoC5/Volume_ADC.c **** 
 392:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable alternative active power to the ADC */
 393:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DEC_REG &= (uint8)~Volume_ADC_STBY_PWR_DEC_EN;
 394:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG &= (uint8)~Volume_ADC_STBY_PWR_DSM_EN;
 395:Generated_Source\PSoC5/Volume_ADC.c **** 
 396:Generated_Source\PSoC5/Volume_ADC.c ****    /* Disable negative pumps for DSM  */
 397:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PUMP_CR1_REG &= (uint8)~(Volume_ADC_PUMP_CR1_CLKSEL | Volume_ADC_PUMP_CR1_FORCE );
 398:Generated_Source\PSoC5/Volume_ADC.c **** 
 399:Generated_Source\PSoC5/Volume_ADC.c ****     /* This is only valid if there is an internal clock */
 400:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
 401:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_PWRMGR_CLK_REG &= (uint8)~Volume_ADC_ACT_PWR_CLK_EN;
 402:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CLK_EN;
 403:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 404:Generated_Source\PSoC5/Volume_ADC.c **** 
 405:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable Modulator Chopping */
 406:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR2_REG &= (uint8)~Volume_ADC_DSM_MOD_CHOP_EN;
 407:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to charge pump clock */
 408:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~Volume_ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 409:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 410:Generated_Source\PSoC5/Volume_ADC.c ****     
 411:Generated_Source\PSoC5/Volume_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 412:Generated_Source\PSoC5/Volume_ADC.c **** }
 413:Generated_Source\PSoC5/Volume_ADC.c **** 
 414:Generated_Source\PSoC5/Volume_ADC.c **** 
 415:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetBufferGain
 417:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Volume_ADC.c **** *
 419:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 420:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets input buffer gain.
 421:Generated_Source\PSoC5/Volume_ADC.c **** *
 422:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 423:Generated_Source\PSoC5/Volume_ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:Generated_Source\PSoC5/Volume_ADC.c **** *
 425:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 426:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 427:Generated_Source\PSoC5/Volume_ADC.c **** *
 428:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 429:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetBufferGain(uint8 gain) 
 430:Generated_Source\PSoC5/Volume_ADC.c **** {
 431:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 9


 432:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg = Volume_ADC_DSM_BUF1_REG & (uint8)~Volume_ADC_DSM_GAIN_MASK;
 433:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= (uint8)(gain << Volume_ADC_DSM_GAIN_SHIFT) & Volume_ADC_DSM_GAIN_MASK;
 434:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_BUF1_REG = tmpReg;
 435:Generated_Source\PSoC5/Volume_ADC.c **** }
 436:Generated_Source\PSoC5/Volume_ADC.c **** 
 437:Generated_Source\PSoC5/Volume_ADC.c **** 
 438:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 439:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetCoherency
 440:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 441:Generated_Source\PSoC5/Volume_ADC.c **** *
 442:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 443:Generated_Source\PSoC5/Volume_ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:Generated_Source\PSoC5/Volume_ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:Generated_Source\PSoC5/Volume_ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:Generated_Source\PSoC5/Volume_ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:Generated_Source\PSoC5/Volume_ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:Generated_Source\PSoC5/Volume_ADC.c **** *  configuration for DMA data transfer.
 449:Generated_Source\PSoC5/Volume_ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:Generated_Source\PSoC5/Volume_ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:Generated_Source\PSoC5/Volume_ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:Generated_Source\PSoC5/Volume_ADC.c **** *  coherency can be set to any byte in the last word read.
 453:Generated_Source\PSoC5/Volume_ADC.c **** *
 454:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 455:Generated_Source\PSoC5/Volume_ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:Generated_Source\PSoC5/Volume_ADC.c **** *           00-Coherency checking off
 457:Generated_Source\PSoC5/Volume_ADC.c **** *           01-low byte is key byte
 458:Generated_Source\PSoC5/Volume_ADC.c **** *           02-middle byte is the key byte
 459:Generated_Source\PSoC5/Volume_ADC.c **** *           03-high byte is the key byte
 460:Generated_Source\PSoC5/Volume_ADC.c **** *
 461:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 462:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 463:Generated_Source\PSoC5/Volume_ADC.c **** *
 464:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetCoherency(uint8 coherency) 
 466:Generated_Source\PSoC5/Volume_ADC.c **** {
 467:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
 468:Generated_Source\PSoC5/Volume_ADC.c **** 
 469:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg = Volume_ADC_DEC_COHER_REG & (uint8)~Volume_ADC_DEC_SAMP_KEY_MASK;
 470:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= coherency & Volume_ADC_DEC_SAMP_KEY_MASK;
 471:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_COHER_REG = tmpReg;
 472:Generated_Source\PSoC5/Volume_ADC.c **** }
 473:Generated_Source\PSoC5/Volume_ADC.c **** 
 474:Generated_Source\PSoC5/Volume_ADC.c **** 
 475:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 476:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetGCOR
 477:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 478:Generated_Source\PSoC5/Volume_ADC.c **** *
 479:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 480:Generated_Source\PSoC5/Volume_ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:Generated_Source\PSoC5/Volume_ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:Generated_Source\PSoC5/Volume_ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:Generated_Source\PSoC5/Volume_ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:Generated_Source\PSoC5/Volume_ADC.c **** *  0x0000 -> 0.000
 485:Generated_Source\PSoC5/Volume_ADC.c **** *  0x8000 -> 1.000
 486:Generated_Source\PSoC5/Volume_ADC.c **** *  0xFFFF -> 1.99997
 487:Generated_Source\PSoC5/Volume_ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:Generated_Source\PSoC5/Volume_ADC.c **** *  gainAdjust and reloaded into the GCOR register.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 10


 489:Generated_Source\PSoC5/Volume_ADC.c **** *
 490:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 491:Generated_Source\PSoC5/Volume_ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:Generated_Source\PSoC5/Volume_ADC.c **** *
 493:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 494:Generated_Source\PSoC5/Volume_ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:Generated_Source\PSoC5/Volume_ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:Generated_Source\PSoC5/Volume_ADC.c **** *             0.00 to 1.9999.
 497:Generated_Source\PSoC5/Volume_ADC.c **** *
 498:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:Generated_Source\PSoC5/Volume_ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:Generated_Source\PSoC5/Volume_ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:Generated_Source\PSoC5/Volume_ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:Generated_Source\PSoC5/Volume_ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:Generated_Source\PSoC5/Volume_ADC.c **** *
 504:Generated_Source\PSoC5/Volume_ADC.c **** ******************************************************************************/
 505:Generated_Source\PSoC5/Volume_ADC.c **** uint8 Volume_ADC_SetGCOR(float32 gainAdjust) 
 506:Generated_Source\PSoC5/Volume_ADC.c **** {
 507:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 tmpReg;
 508:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 status;
 509:Generated_Source\PSoC5/Volume_ADC.c ****     float32 tmpValue;
 510:Generated_Source\PSoC5/Volume_ADC.c **** 
 511:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg = Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor;
 512:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = ((float32)tmpReg / (float32)Volume_ADC_IDEAL_GAIN_CONST);
 513:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = tmpValue * gainAdjust;
 514:Generated_Source\PSoC5/Volume_ADC.c **** 
 515:Generated_Source\PSoC5/Volume_ADC.c ****     if (tmpValue > 1.9999)
 516:Generated_Source\PSoC5/Volume_ADC.c ****     {
 517:Generated_Source\PSoC5/Volume_ADC.c ****         status = 1u;
 518:Generated_Source\PSoC5/Volume_ADC.c ****     }
 519:Generated_Source\PSoC5/Volume_ADC.c ****     else
 520:Generated_Source\PSoC5/Volume_ADC.c ****     {
 521:Generated_Source\PSoC5/Volume_ADC.c ****         tmpValue *= (float32)Volume_ADC_IDEAL_GAIN_CONST;
 522:Generated_Source\PSoC5/Volume_ADC.c **** 		tmpReg = (uint16)tmpValue;
 523:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, tmpReg);
 524:Generated_Source\PSoC5/Volume_ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:Generated_Source\PSoC5/Volume_ADC.c ****        Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor = tmpReg;
 526:Generated_Source\PSoC5/Volume_ADC.c **** 
 527:Generated_Source\PSoC5/Volume_ADC.c ****         status = 0u;
 528:Generated_Source\PSoC5/Volume_ADC.c **** 
 529:Generated_Source\PSoC5/Volume_ADC.c ****     }
 530:Generated_Source\PSoC5/Volume_ADC.c ****     return(status);
 531:Generated_Source\PSoC5/Volume_ADC.c **** }
 532:Generated_Source\PSoC5/Volume_ADC.c **** 
 533:Generated_Source\PSoC5/Volume_ADC.c **** 
 534:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
 535:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_ReadGCOR
 536:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************
 537:Generated_Source\PSoC5/Volume_ADC.c **** *
 538:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 539:Generated_Source\PSoC5/Volume_ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:Generated_Source\PSoC5/Volume_ADC.c **** *  GVAL register settings.
 541:Generated_Source\PSoC5/Volume_ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:Generated_Source\PSoC5/Volume_ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:Generated_Source\PSoC5/Volume_ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:Generated_Source\PSoC5/Volume_ADC.c **** *
 545:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 11


 546:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 547:Generated_Source\PSoC5/Volume_ADC.c **** *
 548:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 549:Generated_Source\PSoC5/Volume_ADC.c **** *  uint16:  Normalized GCOR value.
 550:Generated_Source\PSoC5/Volume_ADC.c **** *
 551:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 552:Generated_Source\PSoC5/Volume_ADC.c **** uint16 Volume_ADC_ReadGCOR(void) 
 553:Generated_Source\PSoC5/Volume_ADC.c **** {
 554:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 gValue;
 555:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 gcorValue;
 556:Generated_Source\PSoC5/Volume_ADC.c **** 
 557:Generated_Source\PSoC5/Volume_ADC.c ****     gValue = Volume_ADC_DEC_GVAL_REG;
 558:Generated_Source\PSoC5/Volume_ADC.c ****     gcorValue = CY_GET_REG16(Volume_ADC_DEC_GCOR_16B_PTR);
 559:Generated_Source\PSoC5/Volume_ADC.c **** 
 560:Generated_Source\PSoC5/Volume_ADC.c ****     if (gValue < Volume_ADC_MAX_GVAL)
 561:Generated_Source\PSoC5/Volume_ADC.c ****     {
 562:Generated_Source\PSoC5/Volume_ADC.c ****         gcorValue <<= Volume_ADC_MAX_GVAL - gValue;
 563:Generated_Source\PSoC5/Volume_ADC.c ****     }
 564:Generated_Source\PSoC5/Volume_ADC.c **** 
 565:Generated_Source\PSoC5/Volume_ADC.c ****     return gcorValue;
 566:Generated_Source\PSoC5/Volume_ADC.c **** }
 567:Generated_Source\PSoC5/Volume_ADC.c **** 
 568:Generated_Source\PSoC5/Volume_ADC.c **** 
 569:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 570:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_StartConvert
 571:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 572:Generated_Source\PSoC5/Volume_ADC.c **** *
 573:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 574:Generated_Source\PSoC5/Volume_ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:Generated_Source\PSoC5/Volume_ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:Generated_Source\PSoC5/Volume_ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:Generated_Source\PSoC5/Volume_ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:Generated_Source\PSoC5/Volume_ADC.c **** *
 579:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 580:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 581:Generated_Source\PSoC5/Volume_ADC.c **** *
 582:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 583:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 584:Generated_Source\PSoC5/Volume_ADC.c **** *
 585:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 586:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_StartConvert(void) 
 587:Generated_Source\PSoC5/Volume_ADC.c **** {
 588:Generated_Source\PSoC5/Volume_ADC.c ****     /* Start the conversion */
 589:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_CR_REG |= Volume_ADC_DEC_START_CONV;
 590:Generated_Source\PSoC5/Volume_ADC.c **** }
 591:Generated_Source\PSoC5/Volume_ADC.c **** 
 592:Generated_Source\PSoC5/Volume_ADC.c **** 
 593:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 594:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_StopConvert
 595:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 596:Generated_Source\PSoC5/Volume_ADC.c **** *
 597:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 598:Generated_Source\PSoC5/Volume_ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion.
 601:Generated_Source\PSoC5/Volume_ADC.c **** *
 602:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 12


 603:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 604:Generated_Source\PSoC5/Volume_ADC.c **** *
 605:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 606:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 607:Generated_Source\PSoC5/Volume_ADC.c **** *
 608:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 609:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_StopConvert(void) 
 610:Generated_Source\PSoC5/Volume_ADC.c **** {
 611:Generated_Source\PSoC5/Volume_ADC.c ****     /* Stop all conversions */
 612:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_CR_REG &= (uint8)~Volume_ADC_DEC_START_CONV;
 613:Generated_Source\PSoC5/Volume_ADC.c **** }
 614:Generated_Source\PSoC5/Volume_ADC.c **** 
 615:Generated_Source\PSoC5/Volume_ADC.c **** 
 616:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 617:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_IsEndConversion
 618:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 619:Generated_Source\PSoC5/Volume_ADC.c **** *
 620:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 621:Generated_Source\PSoC5/Volume_ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:Generated_Source\PSoC5/Volume_ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 623:Generated_Source\PSoC5/Volume_ADC.c **** *  ADC_GetResult32() API.
 624:Generated_Source\PSoC5/Volume_ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:Generated_Source\PSoC5/Volume_ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:Generated_Source\PSoC5/Volume_ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:Generated_Source\PSoC5/Volume_ADC.c **** *
 628:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 629:Generated_Source\PSoC5/Volume_ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:Generated_Source\PSoC5/Volume_ADC.c **** *   Volume_ADC_RETURN_STATUS -   Immediately returns conversion result
 631:Generated_Source\PSoC5/Volume_ADC.c **** *                                      status.
 632:Generated_Source\PSoC5/Volume_ADC.c **** *   Volume_ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:Generated_Source\PSoC5/Volume_ADC.c **** *                                      is complete.
 634:Generated_Source\PSoC5/Volume_ADC.c **** *
 635:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 636:Generated_Source\PSoC5/Volume_ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:Generated_Source\PSoC5/Volume_ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:Generated_Source\PSoC5/Volume_ADC.c **** *
 639:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 640:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Used to check whether conversion is complete
 641:Generated_Source\PSoC5/Volume_ADC.c **** *  or not for single sample mode with resolution is above 16
 642:Generated_Source\PSoC5/Volume_ADC.c **** *
 643:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 644:Generated_Source\PSoC5/Volume_ADC.c **** uint8 Volume_ADC_IsEndConversion(uint8 retMode) 
 645:Generated_Source\PSoC5/Volume_ADC.c **** {
 646:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 status;
 647:Generated_Source\PSoC5/Volume_ADC.c **** 
 648:Generated_Source\PSoC5/Volume_ADC.c ****     do
 649:Generated_Source\PSoC5/Volume_ADC.c ****     {
 650:Generated_Source\PSoC5/Volume_ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:Generated_Source\PSoC5/Volume_ADC.c ****         *   resolution above 16 bit
 652:Generated_Source\PSoC5/Volume_ADC.c ****         */
 653:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_stopConversion != 0u)
 654:Generated_Source\PSoC5/Volume_ADC.c ****         {
 655:Generated_Source\PSoC5/Volume_ADC.c ****             status = Volume_ADC_convDone;
 656:Generated_Source\PSoC5/Volume_ADC.c ****         }
 657:Generated_Source\PSoC5/Volume_ADC.c ****         else
 658:Generated_Source\PSoC5/Volume_ADC.c ****         {
 659:Generated_Source\PSoC5/Volume_ADC.c ****             status = Volume_ADC_DEC_SR_REG & Volume_ADC_DEC_CONV_DONE;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 13


 660:Generated_Source\PSoC5/Volume_ADC.c ****         }
 661:Generated_Source\PSoC5/Volume_ADC.c ****     }while((status != Volume_ADC_DEC_CONV_DONE) && (retMode == Volume_ADC_WAIT_FOR_RESULT));
 662:Generated_Source\PSoC5/Volume_ADC.c **** 
 663:Generated_Source\PSoC5/Volume_ADC.c ****     return(status);
 664:Generated_Source\PSoC5/Volume_ADC.c **** }
 665:Generated_Source\PSoC5/Volume_ADC.c **** 
 666:Generated_Source\PSoC5/Volume_ADC.c **** 
 667:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GetResult8
 669:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC5/Volume_ADC.c **** *
 671:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 672:Generated_Source\PSoC5/Volume_ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:Generated_Source\PSoC5/Volume_ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:Generated_Source\PSoC5/Volume_ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:Generated_Source\PSoC5/Volume_ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:Generated_Source\PSoC5/Volume_ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:Generated_Source\PSoC5/Volume_ADC.c **** *  maximum positive value is 255.
 679:Generated_Source\PSoC5/Volume_ADC.c **** *
 680:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 681:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 682:Generated_Source\PSoC5/Volume_ADC.c **** *
 683:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 684:Generated_Source\PSoC5/Volume_ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:Generated_Source\PSoC5/Volume_ADC.c **** *
 686:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 687:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Cleared in single sample mode with resolution
 688:Generated_Source\PSoC5/Volume_ADC.c **** *                              above 16 bits
 689:Generated_Source\PSoC5/Volume_ADC.c **** *
 690:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 691:Generated_Source\PSoC5/Volume_ADC.c **** int8 Volume_ADC_GetResult8( void ) 
 692:Generated_Source\PSoC5/Volume_ADC.c **** {
 693:Generated_Source\PSoC5/Volume_ADC.c ****     int8 result;
 694:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 coherency;
 695:Generated_Source\PSoC5/Volume_ADC.c **** 
 696:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read active coherency configuration */
 697:Generated_Source\PSoC5/Volume_ADC.c ****     coherency = Volume_ADC_DEC_COHER_REG & Volume_ADC_DEC_SAMP_KEY_MASK;
 698:Generated_Source\PSoC5/Volume_ADC.c **** 
 699:Generated_Source\PSoC5/Volume_ADC.c ****     result = (int8)Volume_ADC_DEC_SAMP_REG;
 700:Generated_Source\PSoC5/Volume_ADC.c **** 
 701:Generated_Source\PSoC5/Volume_ADC.c ****     if(coherency == Volume_ADC_DEC_SAMP_KEY_MID)
 702:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:Generated_Source\PSoC5/Volume_ADC.c ****         (void)Volume_ADC_DEC_SAMPM_REG;
 704:Generated_Source\PSoC5/Volume_ADC.c ****     }
 705:Generated_Source\PSoC5/Volume_ADC.c ****     else  if(coherency == Volume_ADC_DEC_SAMP_KEY_HIGH)
 706:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:Generated_Source\PSoC5/Volume_ADC.c ****         (void)Volume_ADC_DEC_SAMPH_REG;
 708:Generated_Source\PSoC5/Volume_ADC.c ****     }
 709:Generated_Source\PSoC5/Volume_ADC.c ****     else /*No action required for other coherency */
 710:Generated_Source\PSoC5/Volume_ADC.c ****     {
 711:Generated_Source\PSoC5/Volume_ADC.c ****     }
 712:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_stopConversion != 0u)
 714:Generated_Source\PSoC5/Volume_ADC.c ****     {
 715:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_convDone = 0u;
 716:Generated_Source\PSoC5/Volume_ADC.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 14


 717:Generated_Source\PSoC5/Volume_ADC.c ****     return (result);
 718:Generated_Source\PSoC5/Volume_ADC.c **** }
 719:Generated_Source\PSoC5/Volume_ADC.c **** 
 720:Generated_Source\PSoC5/Volume_ADC.c **** 
 721:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GetResult16
 723:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 724:Generated_Source\PSoC5/Volume_ADC.c **** *
 725:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 726:Generated_Source\PSoC5/Volume_ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:Generated_Source\PSoC5/Volume_ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:Generated_Source\PSoC5/Volume_ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:Generated_Source\PSoC5/Volume_ADC.c **** *  function should be used instead. This function returns only signed
 731:Generated_Source\PSoC5/Volume_ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:Generated_Source\PSoC5/Volume_ADC.c **** *  This function supports different coherency settings.
 733:Generated_Source\PSoC5/Volume_ADC.c **** *
 734:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 735:Generated_Source\PSoC5/Volume_ADC.c **** *   void
 736:Generated_Source\PSoC5/Volume_ADC.c **** *
 737:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 738:Generated_Source\PSoC5/Volume_ADC.c **** *  int16:  ADC result.
 739:Generated_Source\PSoC5/Volume_ADC.c **** *
 740:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 741:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Cleared in single sample mode with resolution
 742:Generated_Source\PSoC5/Volume_ADC.c **** *                              above 16 bits
 743:Generated_Source\PSoC5/Volume_ADC.c **** *
 744:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/Volume_ADC.c **** int16 Volume_ADC_GetResult16(void) 
 746:Generated_Source\PSoC5/Volume_ADC.c **** {
 747:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 result;
 748:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 coherency;
 749:Generated_Source\PSoC5/Volume_ADC.c **** 
 750:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read active coherency configuration */
 751:Generated_Source\PSoC5/Volume_ADC.c ****     coherency = Volume_ADC_DEC_COHER_REG & Volume_ADC_DEC_SAMP_KEY_MASK;
 752:Generated_Source\PSoC5/Volume_ADC.c **** 
 753:Generated_Source\PSoC5/Volume_ADC.c ****     if(coherency <= Volume_ADC_DEC_SAMP_KEY_LOW)
 754:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 756:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMPM_REG;
 757:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 8u) | Volume_ADC_DEC_SAMP_REG;
 758:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 759:Generated_Source\PSoC5/Volume_ADC.c ****             result = (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 760:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 761:Generated_Source\PSoC5/Volume_ADC.c ****     }
 762:Generated_Source\PSoC5/Volume_ADC.c ****     else /* MID or HIGH */
 763:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Read middle byte at the end */
 764:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 765:Generated_Source\PSoC5/Volume_ADC.c ****             result = (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 766:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 767:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMP_REG;
 768:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint16)((uint16)Volume_ADC_DEC_SAMPM_REG << 8u);
 769:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 770:Generated_Source\PSoC5/Volume_ADC.c ****         if(coherency == Volume_ADC_DEC_SAMP_KEY_HIGH)
 771:Generated_Source\PSoC5/Volume_ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:Generated_Source\PSoC5/Volume_ADC.c ****             (void)Volume_ADC_DEC_SAMPH_REG;
 773:Generated_Source\PSoC5/Volume_ADC.c ****         }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 15


 774:Generated_Source\PSoC5/Volume_ADC.c ****     }
 775:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_stopConversion != 0u)
 777:Generated_Source\PSoC5/Volume_ADC.c ****     {
 778:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_convDone = 0u;
 779:Generated_Source\PSoC5/Volume_ADC.c ****     }
 780:Generated_Source\PSoC5/Volume_ADC.c **** 
 781:Generated_Source\PSoC5/Volume_ADC.c ****     return ((int16)result);
 782:Generated_Source\PSoC5/Volume_ADC.c **** }
 783:Generated_Source\PSoC5/Volume_ADC.c **** 
 784:Generated_Source\PSoC5/Volume_ADC.c **** 
 785:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 786:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GetResult32
 787:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 788:Generated_Source\PSoC5/Volume_ADC.c **** *
 789:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 790:Generated_Source\PSoC5/Volume_ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution of 8 to 20 bits.
 792:Generated_Source\PSoC5/Volume_ADC.c **** *  This function supports different coherency settings.
 793:Generated_Source\PSoC5/Volume_ADC.c **** *
 794:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 795:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 796:Generated_Source\PSoC5/Volume_ADC.c **** *
 797:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 798:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: Result of the last ADC conversion.
 799:Generated_Source\PSoC5/Volume_ADC.c **** *
 800:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 801:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Cleared in single sample mode with resolution
 802:Generated_Source\PSoC5/Volume_ADC.c **** *                              above 16 bits
 803:Generated_Source\PSoC5/Volume_ADC.c **** *
 804:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 805:Generated_Source\PSoC5/Volume_ADC.c **** int32 Volume_ADC_GetResult32(void) 
 806:Generated_Source\PSoC5/Volume_ADC.c **** {
 807:Generated_Source\PSoC5/Volume_ADC.c ****     uint32 result;
 808:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 coherency;
 809:Generated_Source\PSoC5/Volume_ADC.c ****     #if (CY_PSOC3)
 810:Generated_Source\PSoC5/Volume_ADC.c **** 	    uint16 tmp;
 811:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* CY_PSOC3 */
 812:Generated_Source\PSoC5/Volume_ADC.c **** 
 813:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read active coherency configuration */
 814:Generated_Source\PSoC5/Volume_ADC.c ****     coherency = Volume_ADC_DEC_COHER_REG & Volume_ADC_DEC_SAMP_KEY_MASK;
 815:Generated_Source\PSoC5/Volume_ADC.c **** 
 816:Generated_Source\PSoC5/Volume_ADC.c ****     if(coherency <= Volume_ADC_DEC_SAMP_KEY_LOW)
 817:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 819:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMPH_REG;
 820:Generated_Source\PSoC5/Volume_ADC.c ****             if((result & 0x80u) != 0u)
 821:Generated_Source\PSoC5/Volume_ADC.c ****             {   /* Sign extend */
 822:Generated_Source\PSoC5/Volume_ADC.c ****                 result |= 0xFF00u;
 823:Generated_Source\PSoC5/Volume_ADC.c ****             }
 824:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 8u) | Volume_ADC_DEC_SAMPM_REG;
 825:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 8u) | Volume_ADC_DEC_SAMP_REG;
 826:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 827:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR);
 828:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 829:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 830:Generated_Source\PSoC5/Volume_ADC.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 16


 831:Generated_Source\PSoC5/Volume_ADC.c ****     else if(coherency == Volume_ADC_DEC_SAMP_KEY_MID)
 832:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Read middle byte at the end */
 833:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 834:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMPH_REG;
 835:Generated_Source\PSoC5/Volume_ADC.c ****             if((result & 0x80u) != 0u)
 836:Generated_Source\PSoC5/Volume_ADC.c ****             {   /* Sign extend */
 837:Generated_Source\PSoC5/Volume_ADC.c ****                 result |= 0xFF00u;
 838:Generated_Source\PSoC5/Volume_ADC.c ****             }
 839:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 840:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 841:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR);
 842:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | Volume_ADC_DEC_SAMP_REG;
 843:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint32)((uint32)Volume_ADC_DEC_SAMPM_REG << 8u);
 844:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 845:Generated_Source\PSoC5/Volume_ADC.c ****     }
 846:Generated_Source\PSoC5/Volume_ADC.c ****     else /*Volume_ADC_DEC_SAMP_KEY_HIGH */
 847:Generated_Source\PSoC5/Volume_ADC.c ****     {
 848:Generated_Source\PSoC5/Volume_ADC.c ****         /* Read MSB byte at the end */
 849:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 850:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR);
 851:Generated_Source\PSoC5/Volume_ADC.c **** 			tmp = Volume_ADC_DEC_SAMPH_REG;
 852:Generated_Source\PSoC5/Volume_ADC.c ****             if((tmp & 0x80u) != 0u)
 853:Generated_Source\PSoC5/Volume_ADC.c ****             {   /* Sign extend */
 854:Generated_Source\PSoC5/Volume_ADC.c ****                 tmp |= 0xFF00u;
 855:Generated_Source\PSoC5/Volume_ADC.c ****             }
 856:Generated_Source\PSoC5/Volume_ADC.c ****             result |= (uint32)tmp << 16u;
 857:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 858:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR);
 859:Generated_Source\PSoC5/Volume_ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR) << 16u);
 860:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 861:Generated_Source\PSoC5/Volume_ADC.c ****     }
 862:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_stopConversion != 0u)
 864:Generated_Source\PSoC5/Volume_ADC.c ****     {
 865:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_convDone = 0u;
 866:Generated_Source\PSoC5/Volume_ADC.c ****     }
 867:Generated_Source\PSoC5/Volume_ADC.c **** 
 868:Generated_Source\PSoC5/Volume_ADC.c ****     return ((int32)result);
 869:Generated_Source\PSoC5/Volume_ADC.c **** }
 870:Generated_Source\PSoC5/Volume_ADC.c **** 
 871:Generated_Source\PSoC5/Volume_ADC.c **** 
 872:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 873:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetOffset
 874:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 875:Generated_Source\PSoC5/Volume_ADC.c **** *
 876:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 877:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:Generated_Source\PSoC5/Volume_ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:Generated_Source\PSoC5/Volume_ADC.c **** *  given reading before calculating the voltage conversion.
 880:Generated_Source\PSoC5/Volume_ADC.c **** *
 881:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 882:Generated_Source\PSoC5/Volume_ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:Generated_Source\PSoC5/Volume_ADC.c **** *          connected to the same input voltage.
 884:Generated_Source\PSoC5/Volume_ADC.c **** *
 885:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 886:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 887:Generated_Source\PSoC5/Volume_ADC.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 17


 888:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 889:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Modified to set the user provided offset. This
 890:Generated_Source\PSoC5/Volume_ADC.c **** *  variable is used for offset calibration purpose.
 891:Generated_Source\PSoC5/Volume_ADC.c **** *
 892:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects:
 893:Generated_Source\PSoC5/Volume_ADC.c **** *  Affects the Volume_ADC_CountsTo_Volts,
 894:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsTo_mVolts, Volume_ADC_CountsTo_uVolts functions
 895:Generated_Source\PSoC5/Volume_ADC.c **** *  by subtracting the given offset.
 896:Generated_Source\PSoC5/Volume_ADC.c **** *
 897:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetOffset(int32 offset) 
 899:Generated_Source\PSoC5/Volume_ADC.c **** {
 900:Generated_Source\PSoC5/Volume_ADC.c **** 
 901:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Offset = offset;
 902:Generated_Source\PSoC5/Volume_ADC.c **** }
 903:Generated_Source\PSoC5/Volume_ADC.c **** 
 904:Generated_Source\PSoC5/Volume_ADC.c **** 
 905:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 906:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetGain
 907:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 908:Generated_Source\PSoC5/Volume_ADC.c **** *
 909:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 910:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:Generated_Source\PSoC5/Volume_ADC.c **** *  functions below. This value is set by default by the reference and
 912:Generated_Source\PSoC5/Volume_ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:Generated_Source\PSoC5/Volume_ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:Generated_Source\PSoC5/Volume_ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 915:Generated_Source\PSoC5/Volume_ADC.c **** *  just the ADC.
 916:Generated_Source\PSoC5/Volume_ADC.c **** *
 917:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 918:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: ADC gain in counts per volt.
 919:Generated_Source\PSoC5/Volume_ADC.c **** *
 920:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 921:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 922:Generated_Source\PSoC5/Volume_ADC.c **** *
 923:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 924:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:Generated_Source\PSoC5/Volume_ADC.c **** *   per volt.
 926:Generated_Source\PSoC5/Volume_ADC.c **** *
 927:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects:
 928:Generated_Source\PSoC5/Volume_ADC.c **** *  Affects the Volume_ADC_CountsTo_Volts,
 929:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsTo_mVolts, Volume_ADC_CountsTo_uVolts functions
 930:Generated_Source\PSoC5/Volume_ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:Generated_Source\PSoC5/Volume_ADC.c **** *
 932:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 933:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetGain(int32 adcGain) 
 934:Generated_Source\PSoC5/Volume_ADC.c **** {
 935:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_CountsPerVolt = adcGain;
 936:Generated_Source\PSoC5/Volume_ADC.c **** }
 937:Generated_Source\PSoC5/Volume_ADC.c **** 
 938:Generated_Source\PSoC5/Volume_ADC.c **** 
 939:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 940:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_CountsTo_mVolts
 941:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 942:Generated_Source\PSoC5/Volume_ADC.c **** *
 943:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 944:Generated_Source\PSoC5/Volume_ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 18


 945:Generated_Source\PSoC5/Volume_ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:Generated_Source\PSoC5/Volume_ADC.c **** *  be 534 mVolts.
 947:Generated_Source\PSoC5/Volume_ADC.c **** *
 948:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 949:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:Generated_Source\PSoC5/Volume_ADC.c **** *
 951:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 952:Generated_Source\PSoC5/Volume_ADC.c **** *  int16:  Result in mVolts
 953:Generated_Source\PSoC5/Volume_ADC.c **** *
 954:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 955:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Used as the offset while converting ADC counts
 957:Generated_Source\PSoC5/Volume_ADC.c **** *   to mVolts.
 958:Generated_Source\PSoC5/Volume_ADC.c **** *
 959:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 960:Generated_Source\PSoC5/Volume_ADC.c **** int16 Volume_ADC_CountsTo_mVolts(int32 adcCounts) 
 961:Generated_Source\PSoC5/Volume_ADC.c **** {
 962:Generated_Source\PSoC5/Volume_ADC.c **** 
 963:Generated_Source\PSoC5/Volume_ADC.c ****     int16 mVolts;
 964:Generated_Source\PSoC5/Volume_ADC.c **** 
 965:Generated_Source\PSoC5/Volume_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_CFG1_DEC_DIV != 0)
 967:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG1)
 968:Generated_Source\PSoC5/Volume_ADC.c ****         {
 969:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG1_DEC_DIV;
 970:Generated_Source\PSoC5/Volume_ADC.c ****         }
 971:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG1_DEC_DIV */
 972:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG2_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 1))
 973:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG2)
 974:Generated_Source\PSoC5/Volume_ADC.c ****         {
 975:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG2_DEC_DIV;
 976:Generated_Source\PSoC5/Volume_ADC.c ****         }
 977:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
 978:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG3_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 2))
 979:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG3)
 980:Generated_Source\PSoC5/Volume_ADC.c ****         {
 981:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG3_DEC_DIV;
 982:Generated_Source\PSoC5/Volume_ADC.c ****         }
 983:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
 984:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG4_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 3))
 985:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG4)
 986:Generated_Source\PSoC5/Volume_ADC.c ****         {
 987:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG4_DEC_DIV;
 988:Generated_Source\PSoC5/Volume_ADC.c ****         }
 989:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
 990:Generated_Source\PSoC5/Volume_ADC.c **** 
 991:Generated_Source\PSoC5/Volume_ADC.c ****     /* Subtract ADC offset */
 992:Generated_Source\PSoC5/Volume_ADC.c ****     adcCounts -= Volume_ADC_Offset;
 993:Generated_Source\PSoC5/Volume_ADC.c **** 
 994:Generated_Source\PSoC5/Volume_ADC.c ****     mVolts = (int16)(( adcCounts * Volume_ADC_1MV_COUNTS ) / Volume_ADC_CountsPerVolt) ;
 995:Generated_Source\PSoC5/Volume_ADC.c **** 
 996:Generated_Source\PSoC5/Volume_ADC.c ****     return(mVolts);
 997:Generated_Source\PSoC5/Volume_ADC.c **** }
 998:Generated_Source\PSoC5/Volume_ADC.c **** 
 999:Generated_Source\PSoC5/Volume_ADC.c **** 
1000:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1001:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_CountsTo_Volts
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 19


1002:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1003:Generated_Source\PSoC5/Volume_ADC.c **** *
1004:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1005:Generated_Source\PSoC5/Volume_ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:Generated_Source\PSoC5/Volume_ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:Generated_Source\PSoC5/Volume_ADC.c **** *  returned result would be +1.2345 Volts.
1008:Generated_Source\PSoC5/Volume_ADC.c **** *
1009:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1010:Generated_Source\PSoC5/Volume_ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:Generated_Source\PSoC5/Volume_ADC.c **** *
1012:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1013:Generated_Source\PSoC5/Volume_ADC.c **** *  float32: Result in Volts
1014:Generated_Source\PSoC5/Volume_ADC.c **** *
1015:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
1016:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  used to convert to Volts.
1017:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Used as the offset while converting ADC counts
1018:Generated_Source\PSoC5/Volume_ADC.c **** *   to Volts.
1019:Generated_Source\PSoC5/Volume_ADC.c **** *
1020:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1021:Generated_Source\PSoC5/Volume_ADC.c **** float32 Volume_ADC_CountsTo_Volts(int32 adcCounts) 
1022:Generated_Source\PSoC5/Volume_ADC.c **** {
1023:Generated_Source\PSoC5/Volume_ADC.c **** 
1024:Generated_Source\PSoC5/Volume_ADC.c ****     float32 Volts;
1025:Generated_Source\PSoC5/Volume_ADC.c **** 
1026:Generated_Source\PSoC5/Volume_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_CFG1_DEC_DIV != 0)
1028:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG1)
1029:Generated_Source\PSoC5/Volume_ADC.c ****         {
1030:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG1_DEC_DIV;
1031:Generated_Source\PSoC5/Volume_ADC.c ****         }
1032:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG1_DEC_DIV */
1033:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG2_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 1))
1034:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG2)
1035:Generated_Source\PSoC5/Volume_ADC.c ****         {
1036:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG2_DEC_DIV;
1037:Generated_Source\PSoC5/Volume_ADC.c ****         }
1038:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
1039:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG3_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 2))
1040:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG3)
1041:Generated_Source\PSoC5/Volume_ADC.c ****         {
1042:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG3_DEC_DIV;
1043:Generated_Source\PSoC5/Volume_ADC.c ****         }
1044:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
1045:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG4_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 3))
1046:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG4)
1047:Generated_Source\PSoC5/Volume_ADC.c ****         {
1048:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG4_DEC_DIV;
1049:Generated_Source\PSoC5/Volume_ADC.c ****         }
1050:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
1051:Generated_Source\PSoC5/Volume_ADC.c **** 
1052:Generated_Source\PSoC5/Volume_ADC.c ****     /* Subtract ADC offset */
1053:Generated_Source\PSoC5/Volume_ADC.c ****     adcCounts -= Volume_ADC_Offset;
1054:Generated_Source\PSoC5/Volume_ADC.c **** 
1055:Generated_Source\PSoC5/Volume_ADC.c ****     Volts = (float32)adcCounts / (float32)Volume_ADC_CountsPerVolt;
1056:Generated_Source\PSoC5/Volume_ADC.c **** 
1057:Generated_Source\PSoC5/Volume_ADC.c ****     return( Volts );
1058:Generated_Source\PSoC5/Volume_ADC.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 20


1059:Generated_Source\PSoC5/Volume_ADC.c **** 
1060:Generated_Source\PSoC5/Volume_ADC.c **** 
1061:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1062:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_CountsTo_uVolts
1063:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1064:Generated_Source\PSoC5/Volume_ADC.c **** *
1065:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1066:Generated_Source\PSoC5/Volume_ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:Generated_Source\PSoC5/Volume_ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:Generated_Source\PSoC5/Volume_ADC.c **** *
1069:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1070:Generated_Source\PSoC5/Volume_ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1071:Generated_Source\PSoC5/Volume_ADC.c **** *
1072:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1073:Generated_Source\PSoC5/Volume_ADC.c **** *  int32:  Result in uVolts
1074:Generated_Source\PSoC5/Volume_ADC.c **** *
1075:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
1076:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Used as the offset while converting ADC counts
1078:Generated_Source\PSoC5/Volume_ADC.c **** *   to mVolts.
1079:Generated_Source\PSoC5/Volume_ADC.c **** *
1080:Generated_Source\PSoC5/Volume_ADC.c **** * Theory:
1081:Generated_Source\PSoC5/Volume_ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:Generated_Source\PSoC5/Volume_ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:Generated_Source\PSoC5/Volume_ADC.c **** *
1084:Generated_Source\PSoC5/Volume_ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)Volume_ADC_CountsPerVolt / B));
1085:Generated_Source\PSoC5/Volume_ADC.c **** *
1086:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1087:Generated_Source\PSoC5/Volume_ADC.c **** int32 Volume_ADC_CountsTo_uVolts(int32 adcCounts) 
1088:Generated_Source\PSoC5/Volume_ADC.c **** {
1089:Generated_Source\PSoC5/Volume_ADC.c **** 
1090:Generated_Source\PSoC5/Volume_ADC.c ****     int32 uVolts;
1091:Generated_Source\PSoC5/Volume_ADC.c ****     int32 coefA;
1092:Generated_Source\PSoC5/Volume_ADC.c ****     int32 coefB;
1093:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 resolution;
1094:Generated_Source\PSoC5/Volume_ADC.c **** 
1095:Generated_Source\PSoC5/Volume_ADC.c ****     /* Set the resolution based on the configuration */
1096:Generated_Source\PSoC5/Volume_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:Generated_Source\PSoC5/Volume_ADC.c ****     if (Volume_ADC_Config == Volume_ADC_CFG1)
1098:Generated_Source\PSoC5/Volume_ADC.c ****     {
1099:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG1_RESOLUTION;
1100:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG1_DEC_DIV != 0)
1101:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG1_DEC_DIV;
1102:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG1_DEC_DIV */
1103:Generated_Source\PSoC5/Volume_ADC.c ****     }
1104:Generated_Source\PSoC5/Volume_ADC.c ****     else if (Volume_ADC_Config == Volume_ADC_CFG2)
1105:Generated_Source\PSoC5/Volume_ADC.c ****     {
1106:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG2_RESOLUTION;
1107:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG2_DEC_DIV != 0)
1108:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG2_DEC_DIV;
1109:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG2_DEC_DIV */
1110:Generated_Source\PSoC5/Volume_ADC.c ****     }
1111:Generated_Source\PSoC5/Volume_ADC.c ****     else if (Volume_ADC_Config == Volume_ADC_CFG3)
1112:Generated_Source\PSoC5/Volume_ADC.c ****     {
1113:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG3_RESOLUTION;
1114:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG3_DEC_DIV != 0)
1115:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG3_DEC_DIV;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 21


1116:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG3_DEC_DIV */
1117:Generated_Source\PSoC5/Volume_ADC.c ****     }
1118:Generated_Source\PSoC5/Volume_ADC.c ****     else
1119:Generated_Source\PSoC5/Volume_ADC.c ****     {
1120:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG4_RESOLUTION;
1121:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG4_DEC_DIV != 0)
1122:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG4_DEC_DIV;
1123:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG4_DEC_DIV */
1124:Generated_Source\PSoC5/Volume_ADC.c ****     }
1125:Generated_Source\PSoC5/Volume_ADC.c **** 
1126:Generated_Source\PSoC5/Volume_ADC.c ****     switch (resolution)
1127:Generated_Source\PSoC5/Volume_ADC.c ****     {
1128:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_12) || \
1129:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_12) || \
1130:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_12) || \
1131:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_12) )
1132:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_12:
1133:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_2;
1134:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_2;
1135:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1136:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_12 */    
1137:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_13) || \
1138:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_13) || \
1139:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_13) || \
1140:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_13) )
1141:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_13:
1142:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_4;
1143:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_4;
1144:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1145:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_13 */    
1146:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_14) || \
1147:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_14) || \
1148:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_14) || \
1149:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_14) )
1150:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_14:
1151:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_8;
1152:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_8;
1153:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1154:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_14 */    
1155:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_15) || \
1156:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_15) || \
1157:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_15) || \
1158:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_15) )
1159:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_15:
1160:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_16;
1161:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_16;
1162:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1163:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_15 */    
1164:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_16) || \
1165:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_16) || \
1166:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_16) || \
1167:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_16) )
1168:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_16:
1169:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_32;
1170:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_32;
1171:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1172:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_16 */    
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 22


1173:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_17) || \
1174:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_17) || \
1175:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_17) || \
1176:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_17) )
1177:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_17:
1178:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_64;
1179:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_64;
1180:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1181:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_17 */    
1182:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_18) || \
1183:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_18) || \
1184:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_18) || \
1185:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_18) )
1186:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_18:
1187:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_125;
1188:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_125;
1189:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1190:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_18 */    
1191:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_19) || \
1192:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_19) || \
1193:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_19) || \
1194:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_19) )
1195:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_19:
1196:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_250;
1197:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_250;
1198:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1199:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_19 */    
1200:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_20) || \
1201:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_20) || \
1202:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_20) || \
1203:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_20) )
1204:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_20:
1205:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_500;
1206:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_500;
1207:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1208:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_20 */    
1209:Generated_Source\PSoC5/Volume_ADC.c ****         default:    /* resolution < 12 */
1210:Generated_Source\PSoC5/Volume_ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:Generated_Source\PSoC5/Volume_ADC.c ****             coefA = Volume_ADC_1UV_COUNTS;
1212:Generated_Source\PSoC5/Volume_ADC.c ****             coefB = Volume_ADC_DIVISOR_1;
1213:Generated_Source\PSoC5/Volume_ADC.c ****             break;
1214:Generated_Source\PSoC5/Volume_ADC.c ****     }
1215:Generated_Source\PSoC5/Volume_ADC.c ****     coefB = Volume_ADC_CountsPerVolt / coefB;
1216:Generated_Source\PSoC5/Volume_ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * Volume_ADC_Offset) / coefB);
1217:Generated_Source\PSoC5/Volume_ADC.c **** 
1218:Generated_Source\PSoC5/Volume_ADC.c ****     return( uVolts );
1219:Generated_Source\PSoC5/Volume_ADC.c **** }
1220:Generated_Source\PSoC5/Volume_ADC.c **** 
1221:Generated_Source\PSoC5/Volume_ADC.c **** 
1222:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1223:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_InitConfig(uint8 config)
1224:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1225:Generated_Source\PSoC5/Volume_ADC.c **** *
1226:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1227:Generated_Source\PSoC5/Volume_ADC.c **** *  Initializes all registers based on customizer settings
1228:Generated_Source\PSoC5/Volume_ADC.c **** *
1229:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 23


1230:Generated_Source\PSoC5/Volume_ADC.c **** *   void
1231:Generated_Source\PSoC5/Volume_ADC.c **** *
1232:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1233:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1234:Generated_Source\PSoC5/Volume_ADC.c **** *
1235:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
1236:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:Generated_Source\PSoC5/Volume_ADC.c **** *
1238:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects: Rewrites the coherency set by Volume_ADC_SetCoherency()
1239:Generated_Source\PSoC5/Volume_ADC.c **** *   API to the default value.
1240:Generated_Source\PSoC5/Volume_ADC.c **** *
1241:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1242:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_InitConfig(uint8 config) 
1243:Generated_Source\PSoC5/Volume_ADC.c **** {
1244:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_stopConversion = 0u;
1245:Generated_Source\PSoC5/Volume_ADC.c **** 
1246:Generated_Source\PSoC5/Volume_ADC.c ****     if (config == 1u)
1247:Generated_Source\PSoC5/Volume_ADC.c ****     {
1248:Generated_Source\PSoC5/Volume_ADC.c ****         /* Default Config */
1249:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG1_DEC_CR;
1250:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG1_DEC_SHIFT1;
1251:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG1_DEC_SHIFT2;
1252:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG1_DEC_DR2;
1253:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG1_DEC_DR2H;
1254:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG1_DEC_DR1;
1255:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG1_DEC_OCOR;
1256:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG1_DEC_OCORM;
1257:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG1_DEC_OCORH;
1258:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG1_DEC_COHER;
1259:Generated_Source\PSoC5/Volume_ADC.c **** 
1260:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG1_DSM_CR4;
1261:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG1_DSM_CR5;
1262:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG1_DSM_CR6;
1263:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG1_DSM_CR7;
1264:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG1_DSM_CR10;
1265:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG1_DSM_CR11;
1266:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG1_DSM_CR12;
1267:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG1_DSM_CR14;
1268:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG1_DSM_CR15;
1269:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG1_DSM_CR16;
1270:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG1_DSM_CR17;
1271:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG1_DSM_REF0);
1273:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG1_DSM_REF2;
1274:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG1_DSM_REF3;
1275:Generated_Source\PSoC5/Volume_ADC.c **** 
1276:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG1_DSM_BUF0;
1277:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG1_DSM_BUF1;
1278:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG1_DSM_BUF2;
1279:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG1_DSM_BUF3;
1280:Generated_Source\PSoC5/Volume_ADC.c **** 
1281:Generated_Source\PSoC5/Volume_ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:Generated_Source\PSoC5/Volume_ADC.c ****         *  the input  range selected.
1283:Generated_Source\PSoC5/Volume_ADC.c ****         */
1284:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_DEFAULT_INPUT_MODE)
1285:Generated_Source\PSoC5/Volume_ADC.c ****             #if (Volume_ADC_CFG1_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1286:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_AMux_Select(1u);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 24


1287:Generated_Source\PSoC5/Volume_ADC.c ****             #else
1288:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_AMux_Select(0u);
1289:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1290:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1291:Generated_Source\PSoC5/Volume_ADC.c **** 
1292:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:Generated_Source\PSoC5/Volume_ADC.c ****         *   mode is Single sample
1294:Generated_Source\PSoC5/Volume_ADC.c ****         */
1295:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG1_RESOLUTION > 16 && \
1296:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CFG1_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1297:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_stopConversion = 1u;
1298:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:Generated_Source\PSoC5/Volume_ADC.c **** 
1300:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG1_COUNTS_PER_VOLT;
1301:Generated_Source\PSoC5/Volume_ADC.c **** 
1302:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG1_CP_CLK_DIVIDER, 1u);
1303:Generated_Source\PSoC5/Volume_ADC.c **** 
1304:Generated_Source\PSoC5/Volume_ADC.c ****         /* This is only valid if there is an internal clock */
1305:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1306:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG1_ADC_CLK_DIVIDER, 1u);
1307:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1308:Generated_Source\PSoC5/Volume_ADC.c **** 
1309:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_IRQ_REMOVE == 0u)
1310:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set interrupt vector */
1311:Generated_Source\PSoC5/Volume_ADC.c ****             (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR1);
1312:Generated_Source\PSoC5/Volume_ADC.c ****         #endif   /* End Volume_ADC_IRQ_REMOVE */
1313:Generated_Source\PSoC5/Volume_ADC.c ****     }
1314:Generated_Source\PSoC5/Volume_ADC.c **** 
1315:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 1)
1316:Generated_Source\PSoC5/Volume_ADC.c ****         if(config == 2u)
1317:Generated_Source\PSoC5/Volume_ADC.c ****         {
1318:Generated_Source\PSoC5/Volume_ADC.c ****             /* Second Config */
1319:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG2_DEC_CR;
1320:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG2_DEC_SHIFT1;
1321:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG2_DEC_SHIFT2;
1322:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG2_DEC_DR2;
1323:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG2_DEC_DR2H;
1324:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG2_DEC_DR1;
1325:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG2_DEC_OCOR;
1326:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG2_DEC_OCORM;
1327:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG2_DEC_OCORH;
1328:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG2_DEC_COHER;
1329:Generated_Source\PSoC5/Volume_ADC.c **** 
1330:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG2_DSM_CR4;
1331:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG2_DSM_CR5;
1332:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG2_DSM_CR6;
1333:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG2_DSM_CR7;
1334:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG2_DSM_CR10;
1335:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG2_DSM_CR11;
1336:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG2_DSM_CR12;
1337:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG2_DSM_CR14;
1338:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG2_DSM_CR15;
1339:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG2_DSM_CR16;
1340:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG2_DSM_CR17;
1341:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG2_DSM_REF0);
1343:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG2_DSM_REF2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 25


1344:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG2_DSM_REF3;
1345:Generated_Source\PSoC5/Volume_ADC.c **** 
1346:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG2_DSM_BUF0;
1347:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG2_DSM_BUF1;
1348:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG2_DSM_BUF2;
1349:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG2_DSM_BUF3;
1350:Generated_Source\PSoC5/Volume_ADC.c **** 
1351:Generated_Source\PSoC5/Volume_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:Generated_Source\PSoC5/Volume_ADC.c ****             *  the input range selected.
1353:Generated_Source\PSoC5/Volume_ADC.c ****             */
1354:Generated_Source\PSoC5/Volume_ADC.c **** 
1355:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INPUT_MODE)
1356:Generated_Source\PSoC5/Volume_ADC.c ****                 #if (Volume_ADC_CFG2_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1357:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(1u);
1358:Generated_Source\PSoC5/Volume_ADC.c ****                 #else
1359:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(0u);
1360:Generated_Source\PSoC5/Volume_ADC.c ****                 #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1361:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1362:Generated_Source\PSoC5/Volume_ADC.c **** 
1363:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:Generated_Source\PSoC5/Volume_ADC.c ****             *   conversion mode is Single sample
1365:Generated_Source\PSoC5/Volume_ADC.c ****             */
1366:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_CFG2_RESOLUTION > 16 && \
1367:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_CFG2_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1368:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_stopConversion = 1u;
1369:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:Generated_Source\PSoC5/Volume_ADC.c **** 
1371:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG2_COUNTS_PER_VOLT;
1372:Generated_Source\PSoC5/Volume_ADC.c **** 
1373:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG2_CP_CLK_DIVIDER, 1u);
1374:Generated_Source\PSoC5/Volume_ADC.c **** 
1375:Generated_Source\PSoC5/Volume_ADC.c ****             /* This is only valid if there is an internal clock */
1376:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1377:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1378:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1379:Generated_Source\PSoC5/Volume_ADC.c **** 
1380:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_IRQ_REMOVE == 0u)
1381:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Set interrupt vector */
1382:Generated_Source\PSoC5/Volume_ADC.c ****                 (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR2);
1383:Generated_Source\PSoC5/Volume_ADC.c ****             #endif   /* End Volume_ADC_IRQ_REMOVE */
1384:Generated_Source\PSoC5/Volume_ADC.c ****         }
1385:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:Generated_Source\PSoC5/Volume_ADC.c **** 
1387:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 2)
1388:Generated_Source\PSoC5/Volume_ADC.c ****         if(config == 3u)
1389:Generated_Source\PSoC5/Volume_ADC.c ****         {
1390:Generated_Source\PSoC5/Volume_ADC.c ****             /* Third Config */
1391:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG3_DEC_CR;
1392:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG3_DEC_SHIFT1;
1393:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG3_DEC_SHIFT2;
1394:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG3_DEC_DR2;
1395:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG3_DEC_DR2H;
1396:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG3_DEC_DR1;
1397:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG3_DEC_OCOR;
1398:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG3_DEC_OCORM;
1399:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG3_DEC_OCORH;
1400:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG3_DEC_COHER;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 26


1401:Generated_Source\PSoC5/Volume_ADC.c **** 
1402:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG3_DSM_CR4;
1403:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG3_DSM_CR5;
1404:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG3_DSM_CR6;
1405:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG3_DSM_CR7;
1406:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG3_DSM_CR10;
1407:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG3_DSM_CR11;
1408:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG3_DSM_CR12;
1409:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG3_DSM_CR14;
1410:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG3_DSM_CR15;
1411:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG3_DSM_CR16;
1412:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG3_DSM_CR17;
1413:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG3_DSM_REF0);
1415:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG3_DSM_REF2;
1416:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG3_DSM_REF3;
1417:Generated_Source\PSoC5/Volume_ADC.c **** 
1418:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG3_DSM_BUF0;
1419:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG3_DSM_BUF1;
1420:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG3_DSM_BUF2;
1421:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG3_DSM_BUF3;
1422:Generated_Source\PSoC5/Volume_ADC.c **** 
1423:Generated_Source\PSoC5/Volume_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:Generated_Source\PSoC5/Volume_ADC.c ****             *  the input range selected.
1425:Generated_Source\PSoC5/Volume_ADC.c ****             */
1426:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INPUT_MODE)
1427:Generated_Source\PSoC5/Volume_ADC.c ****                 #if (Volume_ADC_CFG3_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1428:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(1u);
1429:Generated_Source\PSoC5/Volume_ADC.c ****                 #else
1430:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(0u);
1431:Generated_Source\PSoC5/Volume_ADC.c ****                 #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1432:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1433:Generated_Source\PSoC5/Volume_ADC.c **** 
1434:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:Generated_Source\PSoC5/Volume_ADC.c ****                conversion  mode is Single sample */
1436:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_CFG3_RESOLUTION > 16 && \
1437:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_CFG3_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1438:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_stopConversion = 1u;
1439:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:Generated_Source\PSoC5/Volume_ADC.c **** 
1441:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG3_COUNTS_PER_VOLT;
1442:Generated_Source\PSoC5/Volume_ADC.c **** 
1443:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG3_CP_CLK_DIVIDER, 1u);
1444:Generated_Source\PSoC5/Volume_ADC.c **** 
1445:Generated_Source\PSoC5/Volume_ADC.c ****             /* This is only valid if there is an internal clock */
1446:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1447:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1448:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1449:Generated_Source\PSoC5/Volume_ADC.c **** 
1450:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_IRQ_REMOVE == 0u)
1451:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Set interrupt vector */
1452:Generated_Source\PSoC5/Volume_ADC.c ****                 (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR3);
1453:Generated_Source\PSoC5/Volume_ADC.c ****             #endif   /* End Volume_ADC_IRQ_REMOVE */
1454:Generated_Source\PSoC5/Volume_ADC.c ****         }
1455:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:Generated_Source\PSoC5/Volume_ADC.c **** 
1457:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 3)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 27


1458:Generated_Source\PSoC5/Volume_ADC.c ****         if (config == 4u)
1459:Generated_Source\PSoC5/Volume_ADC.c ****         {
1460:Generated_Source\PSoC5/Volume_ADC.c ****             /* Fourth Config */
1461:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG4_DEC_CR;
1462:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG4_DEC_SHIFT1;
1463:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG4_DEC_SHIFT2;
1464:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG4_DEC_DR2;
1465:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG4_DEC_DR2H;
1466:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG4_DEC_DR1;
1467:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG4_DEC_OCOR;
1468:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG4_DEC_OCORM;
1469:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG4_DEC_OCORH;
1470:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG4_DEC_COHER;
1471:Generated_Source\PSoC5/Volume_ADC.c **** 
1472:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG4_DSM_CR4;
1473:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG4_DSM_CR5;
1474:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG4_DSM_CR6;
1475:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG4_DSM_CR7;
1476:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG4_DSM_CR10;
1477:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG4_DSM_CR11;
1478:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG4_DSM_CR12;
1479:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG4_DSM_CR14;
1480:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG4_DSM_CR15;
1481:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG4_DSM_CR16;
1482:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG4_DSM_CR17;
1483:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG4_DSM_REF0);
1485:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG4_DSM_REF2;
1486:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG4_DSM_REF3;
1487:Generated_Source\PSoC5/Volume_ADC.c **** 
1488:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG4_DSM_BUF0;
1489:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG4_DSM_BUF1;
1490:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG4_DSM_BUF2;
1491:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG4_DSM_BUF3;
1492:Generated_Source\PSoC5/Volume_ADC.c **** 
1493:Generated_Source\PSoC5/Volume_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:Generated_Source\PSoC5/Volume_ADC.c ****             *  the input range selected.
1495:Generated_Source\PSoC5/Volume_ADC.c ****             */
1496:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INPUT_MODE)
1497:Generated_Source\PSoC5/Volume_ADC.c ****                 #if (Volume_ADC_CFG4_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1498:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(1u);
1499:Generated_Source\PSoC5/Volume_ADC.c ****                 #else
1500:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(0u);
1501:Generated_Source\PSoC5/Volume_ADC.c ****                 #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1502:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1503:Generated_Source\PSoC5/Volume_ADC.c **** 
1504:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:Generated_Source\PSoC5/Volume_ADC.c ****                conversion mode is Single sample */
1506:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_CFG4_RESOLUTION > 16 && \
1507:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_CFG4_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1508:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_stopConversion = 1u;
1509:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:Generated_Source\PSoC5/Volume_ADC.c **** 
1511:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG4_COUNTS_PER_VOLT;
1512:Generated_Source\PSoC5/Volume_ADC.c **** 
1513:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG4_CP_CLK_DIVIDER, 1u);
1514:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 28


1515:Generated_Source\PSoC5/Volume_ADC.c ****             /* This is only valid if there is an internal clock */
1516:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1517:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1518:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1519:Generated_Source\PSoC5/Volume_ADC.c **** 
1520:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_IRQ_REMOVE == 0u)
1521:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Set interrupt vector */
1522:Generated_Source\PSoC5/Volume_ADC.c ****                 (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR4);
1523:Generated_Source\PSoC5/Volume_ADC.c ****             #endif   /* End Volume_ADC_IRQ_REMOVE */
1524:Generated_Source\PSoC5/Volume_ADC.c ****         }
1525:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:Generated_Source\PSoC5/Volume_ADC.c **** }
1527:Generated_Source\PSoC5/Volume_ADC.c **** 
1528:Generated_Source\PSoC5/Volume_ADC.c **** 
1529:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1530:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SelectCofiguration
1531:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1532:Generated_Source\PSoC5/Volume_ADC.c **** *
1533:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1534:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:Generated_Source\PSoC5/Volume_ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:Generated_Source\PSoC5/Volume_ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:Generated_Source\PSoC5/Volume_ADC.c **** *  can be restarted depending up on the value of second parameter
1538:Generated_Source\PSoC5/Volume_ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:Generated_Source\PSoC5/Volume_ADC.c **** *  restarted. If this value is zero, then user must call Volume_ADC_Start
1540:Generated_Source\PSoC5/Volume_ADC.c **** *  and Volume_ADC_StartConvert() to restart the conversion.
1541:Generated_Source\PSoC5/Volume_ADC.c **** *
1542:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1543:Generated_Source\PSoC5/Volume_ADC.c **** *  config:  configuration user wants to select.
1544:Generated_Source\PSoC5/Volume_ADC.c **** *           Valid range: 1..4
1545:Generated_Source\PSoC5/Volume_ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:Generated_Source\PSoC5/Volume_ADC.c **** *                            0 means do not start the ADC and conversion.
1547:Generated_Source\PSoC5/Volume_ADC.c **** *
1548:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1549:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1550:Generated_Source\PSoC5/Volume_ADC.c **** *
1551:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1552:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:Generated_Source\PSoC5/Volume_ADC.c ****                                               
1554:Generated_Source\PSoC5/Volume_ADC.c **** {
1555:Generated_Source\PSoC5/Volume_ADC.c ****     /* Check whether the configuration number is valid or not */
1556:Generated_Source\PSoC5/Volume_ADC.c ****     if((config > 0u) && (config <= Volume_ADC_DEFAULT_NUM_CONFIGS))
1557:Generated_Source\PSoC5/Volume_ADC.c ****     {
1558:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:Generated_Source\PSoC5/Volume_ADC.c **** 		*  selected configuration
1560:Generated_Source\PSoC5/Volume_ADC.c **** 		*/
1561:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_initVar == 0u)
1562:Generated_Source\PSoC5/Volume_ADC.c ****         {
1563:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_started = 1u;
1564:Generated_Source\PSoC5/Volume_ADC.c ****         }
1565:Generated_Source\PSoC5/Volume_ADC.c **** 
1566:Generated_Source\PSoC5/Volume_ADC.c ****         /* Update the config flag */
1567:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_Config = config;
1568:Generated_Source\PSoC5/Volume_ADC.c **** 
1569:Generated_Source\PSoC5/Volume_ADC.c ****         /* Stop the ADC  */
1570:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_Stop();
1571:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 29


1572:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_InitConfig(config);
1574:Generated_Source\PSoC5/Volume_ADC.c **** 
1575:Generated_Source\PSoC5/Volume_ADC.c ****         /* Compensate the gain */
1576:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_GVAL_REG = Volume_ADC_gcor[config - 1u].gval;
1577:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[config - 1u].gcor);
1578:Generated_Source\PSoC5/Volume_ADC.c **** 
1579:Generated_Source\PSoC5/Volume_ADC.c ****         if(restart == 1u)
1580:Generated_Source\PSoC5/Volume_ADC.c ****         {
1581:Generated_Source\PSoC5/Volume_ADC.c ****             /* Restart the ADC */
1582:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Start();
1583:Generated_Source\PSoC5/Volume_ADC.c **** 
1584:Generated_Source\PSoC5/Volume_ADC.c ****             /* Restart the ADC conversion */
1585:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_StartConvert();
1586:Generated_Source\PSoC5/Volume_ADC.c ****         }
1587:Generated_Source\PSoC5/Volume_ADC.c ****     }
1588:Generated_Source\PSoC5/Volume_ADC.c ****     else
1589:Generated_Source\PSoC5/Volume_ADC.c ****     {
1590:Generated_Source\PSoC5/Volume_ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:Generated_Source\PSoC5/Volume_ADC.c ****         CYASSERT(0u != 0u);
1592:Generated_Source\PSoC5/Volume_ADC.c ****     }
1593:Generated_Source\PSoC5/Volume_ADC.c **** }
1594:Generated_Source\PSoC5/Volume_ADC.c **** 
1595:Generated_Source\PSoC5/Volume_ADC.c **** 
1596:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1597:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GainCompensation
1598:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1599:Generated_Source\PSoC5/Volume_ADC.c **** *
1600:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1601:Generated_Source\PSoC5/Volume_ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:Generated_Source\PSoC5/Volume_ADC.c **** *
1603:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1604:Generated_Source\PSoC5/Volume_ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:Generated_Source\PSoC5/Volume_ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:Generated_Source\PSoC5/Volume_ADC.c **** *                 conversion  mode.
1607:Generated_Source\PSoC5/Volume_ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:Generated_Source\PSoC5/Volume_ADC.c ****                      conversion mode.
1609:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:Generated_Source\PSoC5/Volume_ADC.c **** *  config:      Specifies the configuration number
1611:Generated_Source\PSoC5/Volume_ADC.c **** *               Valid range: 1..4
1612:Generated_Source\PSoC5/Volume_ADC.c **** *
1613:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1614:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1615:Generated_Source\PSoC5/Volume_ADC.c **** *
1616:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1617:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGa
1618:Generated_Source\PSoC5/Volume_ADC.c ****                               uint8 resolution, uint8 config) 
1619:Generated_Source\PSoC5/Volume_ADC.c **** {
  26              		.loc 1 1619 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 30


  35 0002 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
1620:Generated_Source\PSoC5/Volume_ADC.c ****     int8 flash;
1621:Generated_Source\PSoC5/Volume_ADC.c **** 	int32 normalised;
1622:Generated_Source\PSoC5/Volume_ADC.c **** 	uint16 gcorValue;
1623:Generated_Source\PSoC5/Volume_ADC.c ****     uint32 gcorTmp;
1624:Generated_Source\PSoC5/Volume_ADC.c **** 
1625:Generated_Source\PSoC5/Volume_ADC.c ****     if((config > 0u) && (config <= Volume_ADC_DEFAULT_NUM_CONFIGS))
  36              		.loc 1 1625 0
  37 0006 012C     		cmp	r4, #1
  38 0008 4AD1     		bne	.L2
1626:Generated_Source\PSoC5/Volume_ADC.c ****     {
1627:Generated_Source\PSoC5/Volume_ADC.c ****         switch(inputRange)
  39              		.loc 1 1627 0
  40 000a 0138     		subs	r0, r0, #1
  41              	.LVL1:
  42 000c 0928     		cmp	r0, #9
  43 000e 26D8     		bhi	.L16
  44 0010 DFE800F0 		tbb	[pc, r0]
  45              	.L5:
  46 0014 05       		.byte	(.L4-.L5)/2
  47 0015 25       		.byte	(.L16-.L5)/2
  48 0016 25       		.byte	(.L16-.L5)/2
  49 0017 05       		.byte	(.L4-.L5)/2
  50 0018 25       		.byte	(.L16-.L5)/2
  51 0019 25       		.byte	(.L16-.L5)/2
  52 001a 0D       		.byte	(.L6-.L5)/2
  53 001b 15       		.byte	(.L7-.L5)/2
  54 001c 25       		.byte	(.L16-.L5)/2
  55 001d 1D       		.byte	(.L8-.L5)/2
  56              		.p2align 1
  57              	.L4:
1628:Generated_Source\PSoC5/Volume_ADC.c ****         {
1629:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_DIFF:
1630:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VSSA_TO_2VREF:
1631:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1632:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
  58              		.loc 1 1632 0
  59 001e 0F2B     		cmp	r3, #15
  60 0020 02D9     		bls	.L9
1633:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1634:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_DIFF_16_20;
  61              		.loc 1 1634 0
  62 0022 2148     		ldr	r0, .L18
  63 0024 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  64              	.LVL2:
  65 0026 1BE0     		b	.L3
  66              	.LVL3:
  67              	.L9:
1635:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1636:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1637:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1638:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_DIFF_8_15;
  68              		.loc 1 1638 0
  69 0028 2048     		ldr	r0, .L18+4
  70 002a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  71              	.LVL4:
  72 002c 18E0     		b	.L3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 31


  73              	.LVL5:
  74              	.L6:
1639:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1640:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1641:Generated_Source\PSoC5/Volume_ADC.c **** 
1642:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_2_DIFF:
1643:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1644:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
  75              		.loc 1 1644 0
  76 002e 0F2B     		cmp	r3, #15
  77 0030 02D9     		bls	.L10
1645:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1646:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_2_DIFF_16_20;
  78              		.loc 1 1646 0
  79 0032 1F48     		ldr	r0, .L18+8
  80 0034 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  81              	.LVL6:
  82 0036 13E0     		b	.L3
  83              	.LVL7:
  84              	.L10:
1647:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1648:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1649:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1650:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_2_DIFF_8_15;
  85              		.loc 1 1650 0
  86 0038 1E48     		ldr	r0, .L18+12
  87 003a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  88              	.LVL8:
  89 003c 10E0     		b	.L3
  90              	.LVL9:
  91              	.L7:
1651:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1652:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1653:Generated_Source\PSoC5/Volume_ADC.c **** 
1654:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_4_DIFF:
1655:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1656:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
  92              		.loc 1 1656 0
  93 003e 0F2B     		cmp	r3, #15
  94 0040 02D9     		bls	.L11
1657:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1658:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_4_DIFF_16_20;
  95              		.loc 1 1658 0
  96 0042 1D48     		ldr	r0, .L18+16
  97 0044 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  98              	.LVL10:
  99 0046 0BE0     		b	.L3
 100              	.LVL11:
 101              	.L11:
1659:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1660:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1661:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1662:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_4_DIFF_8_15;
 102              		.loc 1 1662 0
 103 0048 1C48     		ldr	r0, .L18+20
 104 004a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 105              	.LVL12:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 32


 106 004c 08E0     		b	.L3
 107              	.LVL13:
 108              	.L8:
1663:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1664:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1665:Generated_Source\PSoC5/Volume_ADC.c **** 
1666:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_16_DIFF:
1667:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1668:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
 109              		.loc 1 1668 0
 110 004e 0F2B     		cmp	r3, #15
 111 0050 02D9     		bls	.L12
1669:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1670:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 112              		.loc 1 1670 0
 113 0052 1B48     		ldr	r0, .L18+24
 114 0054 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 115              	.LVL14:
 116 0056 03E0     		b	.L3
 117              	.LVL15:
 118              	.L12:
1671:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1672:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1673:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1674:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_16_DIFF_8_15;
 119              		.loc 1 1674 0
 120 0058 1A48     		ldr	r0, .L18+28
 121 005a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 122              	.LVL16:
 123 005c 00E0     		b	.L3
 124              	.LVL17:
 125              	.L16:
1675:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1676:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1677:Generated_Source\PSoC5/Volume_ADC.c **** 
1678:Generated_Source\PSoC5/Volume_ADC.c ****             default:
1679:Generated_Source\PSoC5/Volume_ADC.c ****                 flash = 0;
 126              		.loc 1 1679 0
 127 005e 0020     		movs	r0, #0
 128              	.L3:
 129              	.LVL18:
1680:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1681:Generated_Source\PSoC5/Volume_ADC.c ****         }
1682:Generated_Source\PSoC5/Volume_ADC.c **** 
1683:Generated_Source\PSoC5/Volume_ADC.c ****         /* Add two values */
1684:Generated_Source\PSoC5/Volume_ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 130              		.loc 1 1684 0
 131 0060 40B2     		sxtb	r0, r0
 132 0062 01EB4011 		add	r1, r1, r0, lsl #5
 133              	.LVL19:
1685:Generated_Source\PSoC5/Volume_ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 134              		.loc 1 1685 0
 135 0066 01FB02F1 		mul	r1, r1, r2
 136              	.LVL20:
1686:Generated_Source\PSoC5/Volume_ADC.c ****         gcorValue = (uint16)(gcorTmp / Volume_ADC_IDEAL_GAIN_CONST);
 137              		.loc 1 1686 0
 138 006a C90B     		lsrs	r1, r1, #15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 33


 139              	.LVL21:
 140 006c 8AB2     		uxth	r2, r1
 141              	.LVL22:
1687:Generated_Source\PSoC5/Volume_ADC.c **** 
1688:Generated_Source\PSoC5/Volume_ADC.c ****         if (resolution < (Volume_ADC_MAX_GVAL - 1u))
 142              		.loc 1 1688 0
 143 006e 0D2B     		cmp	r3, #13
 144 0070 0BD8     		bhi	.L13
1689:Generated_Source\PSoC5/Volume_ADC.c ****         {
1690:Generated_Source\PSoC5/Volume_ADC.c ****             gcorValue = (gcorValue >> (Volume_ADC_MAX_GVAL - (resolution + 1u)));
 145              		.loc 1 1690 0
 146 0072 C3F10E02 		rsb	r2, r3, #14
 147              	.LVL23:
 148 0076 89B2     		uxth	r1, r1
 149 0078 1141     		asrs	r1, r1, r2
 150              	.LVL24:
 151 007a 8AB2     		uxth	r2, r1
 152              	.LVL25:
1691:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_gcor[config - 1u].gval = (resolution + 1u);
 153              		.loc 1 1691 0
 154 007c 1249     		ldr	r1, .L18+32
 155 007e 01EB8401 		add	r1, r1, r4, lsl #2
 156 0082 0133     		adds	r3, r3, #1
 157              	.LVL26:
 158 0084 01F8023C 		strb	r3, [r1, #-2]
 159 0088 05E0     		b	.L14
 160              	.LVL27:
 161              	.L13:
1692:Generated_Source\PSoC5/Volume_ADC.c ****         }
1693:Generated_Source\PSoC5/Volume_ADC.c ****         else
1694:Generated_Source\PSoC5/Volume_ADC.c ****         {
1695:Generated_Source\PSoC5/Volume_ADC.c ****             /* Use all 16 bits */
1696:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_gcor[config - 1u].gval = Volume_ADC_MAX_GVAL;
 162              		.loc 1 1696 0
 163 008a 0F4B     		ldr	r3, .L18+32
 164              	.LVL28:
 165 008c 03EB8403 		add	r3, r3, r4, lsl #2
 166 0090 0F21     		movs	r1, #15
 167 0092 03F8021C 		strb	r1, [r3, #-2]
 168              	.L14:
1697:Generated_Source\PSoC5/Volume_ADC.c ****         }
1698:Generated_Source\PSoC5/Volume_ADC.c **** 
1699:Generated_Source\PSoC5/Volume_ADC.c ****         /* Save the gain correction register value */
1700:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_gcor[config - 1u].gcor = gcorValue;
 169              		.loc 1 1700 0
 170 0096 013C     		subs	r4, r4, #1
 171 0098 0B4B     		ldr	r3, .L18+32
 172 009a 23F82420 		strh	r2, [r3, r4, lsl #2]	@ movhi
 173 009e 10BD     		pop	{r4, pc}
 174              	.LVL29:
 175              	.L2:
1701:Generated_Source\PSoC5/Volume_ADC.c ****     }
1702:Generated_Source\PSoC5/Volume_ADC.c ****     else
1703:Generated_Source\PSoC5/Volume_ADC.c ****     {
1704:Generated_Source\PSoC5/Volume_ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:Generated_Source\PSoC5/Volume_ADC.c ****         CYASSERT(0u != 0u);
 176              		.loc 1 1705 0 discriminator 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 34


 177 00a0 0020     		movs	r0, #0
 178              	.LVL30:
 179 00a2 FFF7FEFF 		bl	CyHalt
 180              	.LVL31:
 181 00a6 10BD     		pop	{r4, pc}
 182              	.LVL32:
 183              	.L19:
 184              		.align	2
 185              	.L18:
 186 00a8 18010049 		.word	1224737048
 187 00ac 1C010049 		.word	1224737052
 188 00b0 19010049 		.word	1224737049
 189 00b4 1D010049 		.word	1224737053
 190 00b8 1A010049 		.word	1224737050
 191 00bc 1E010049 		.word	1224737054
 192 00c0 1B010049 		.word	1224737051
 193 00c4 1F010049 		.word	1224737055
 194 00c8 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE21:
 197              		.size	Volume_ADC_GainCompensation, .-Volume_ADC_GainCompensation
 198              		.section	.text.Volume_ADC_SetDSMRef0Reg,"ax",%progbits
 199              		.align	2
 200              		.thumb
 201              		.thumb_func
 202              		.type	Volume_ADC_SetDSMRef0Reg, %function
 203              	Volume_ADC_SetDSMRef0Reg:
 204              	.LFB22:
1706:Generated_Source\PSoC5/Volume_ADC.c ****     }
1707:Generated_Source\PSoC5/Volume_ADC.c **** }
1708:Generated_Source\PSoC5/Volume_ADC.c **** 
1709:Generated_Source\PSoC5/Volume_ADC.c **** 
1710:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
1711:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetDSMRef0Reg(uint8)
1712:Generated_Source\PSoC5/Volume_ADC.c **** ******************************************************************************
1713:Generated_Source\PSoC5/Volume_ADC.c **** *
1714:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1715:Generated_Source\PSoC5/Volume_ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:Generated_Source\PSoC5/Volume_ADC.c **** *
1717:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1718:Generated_Source\PSoC5/Volume_ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:Generated_Source\PSoC5/Volume_ADC.c **** *
1720:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1721:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1722:Generated_Source\PSoC5/Volume_ADC.c **** *
1723:Generated_Source\PSoC5/Volume_ADC.c **** ******************************************************************************/
1724:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_SetDSMRef0Reg(uint8 value) 
1725:Generated_Source\PSoC5/Volume_ADC.c **** {
 205              		.loc 1 1725 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL33:
 210 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 211              		.cfi_def_cfa_offset 24
 212              		.cfi_offset 3, -24
 213              		.cfi_offset 4, -20
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 35


 214              		.cfi_offset 5, -16
 215              		.cfi_offset 6, -12
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 0746     		mov	r7, r0
1726:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
1727:Generated_Source\PSoC5/Volume_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 219              		.loc 1 1727 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL34:
 222 0008 0646     		mov	r6, r0
 223              	.LVL35:
1728:Generated_Source\PSoC5/Volume_ADC.c **** 
1729:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG |= (Volume_ADC_IGNORE_PRESA1 | Volume_ADC_IGNORE_PRESD1);
 224              		.loc 1 1730 0
 225 000a 0D4D     		ldr	r5, .L22
 226 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 227 000e 43F00303 		orr	r3, r3, #3
 228 0012 2B70     		strb	r3, [r5]
1731:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= (Volume_ADC_IGNORE_PRESA2 | Volume_ADC_IGNORE_PRESD2);
 229              		.loc 1 1731 0
 230 0014 0B4C     		ldr	r4, .L22+4
 231 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 232 0018 43F00303 		orr	r3, r3, #3
 233 001c 2370     		strb	r3, [r4]
1732:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF0_REG = value;
 234              		.loc 1 1732 0
 235 001e 0A4B     		ldr	r3, .L22+8
 236 0020 1F70     		strb	r7, [r3]
1733:Generated_Source\PSoC5/Volume_ADC.c **** 
1734:Generated_Source\PSoC5/Volume_ADC.c ****     /* Wait for 3 microseconds */
1735:Generated_Source\PSoC5/Volume_ADC.c ****     CyDelayUs(Volume_ADC_PRES_DELAY_TIME);
 237              		.loc 1 1735 0
 238 0022 0320     		movs	r0, #3
 239 0024 FFF7FEFF 		bl	CyDelayUs
 240              	.LVL36:
1736:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the press circuit */
1737:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG &= (uint8)~(Volume_ADC_IGNORE_PRESA1 | Volume_ADC_IGNORE_PRESD1);
 241              		.loc 1 1737 0
 242 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 243 002a 03F0FC03 		and	r3, r3, #252
 244 002e 2B70     		strb	r3, [r5]
1738:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~(Volume_ADC_IGNORE_PRESA2 | Volume_ADC_IGNORE_PRESD2);
 245              		.loc 1 1738 0
 246 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 247 0032 03F0FC03 		and	r3, r3, #252
 248 0036 2370     		strb	r3, [r4]
1739:Generated_Source\PSoC5/Volume_ADC.c **** 
1740:Generated_Source\PSoC5/Volume_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 249              		.loc 1 1740 0
 250 0038 3046     		mov	r0, r6
 251 003a FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL37:
 253 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 254              	.LVL38:
 255              	.L23:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 36


 256              		.align	2
 257              	.L22:
 258 0040 F8460040 		.word	1073759992
 259 0044 F9460040 		.word	1073759993
 260 0048 92580040 		.word	1073764498
 261              		.cfi_endproc
 262              	.LFE22:
 263              		.size	Volume_ADC_SetDSMRef0Reg, .-Volume_ADC_SetDSMRef0Reg
 264              		.section	.text.Volume_ADC_InitConfig,"ax",%progbits
 265              		.align	2
 266              		.thumb
 267              		.thumb_func
 268              		.type	Volume_ADC_InitConfig, %function
 269              	Volume_ADC_InitConfig:
 270              	.LFB19:
1243:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_stopConversion = 0u;
 271              		.loc 1 1243 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL39:
1244:Generated_Source\PSoC5/Volume_ADC.c **** 
 276              		.loc 1 1244 0
 277 0000 0022     		movs	r2, #0
 278 0002 324B     		ldr	r3, .L28
 279 0004 1A71     		strb	r2, [r3, #4]
1246:Generated_Source\PSoC5/Volume_ADC.c ****     {
 280              		.loc 1 1246 0
 281 0006 0128     		cmp	r0, #1
 282 0008 5FD1     		bne	.L27
1243:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_stopConversion = 0u;
 283              		.loc 1 1243 0
 284 000a 70B5     		push	{r4, r5, r6, lr}
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
1249:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG1_DEC_SHIFT1;
 290              		.loc 1 1249 0
 291 000c 3822     		movs	r2, #56
 292 000e 304B     		ldr	r3, .L28+4
 293 0010 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG1_DEC_SHIFT2;
 294              		.loc 1 1250 0
 295 0012 0422     		movs	r2, #4
 296 0014 0233     		adds	r3, r3, #2
 297 0016 1A70     		strb	r2, [r3]
1251:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG1_DEC_DR2;
 298              		.loc 1 1251 0
 299 0018 0622     		movs	r2, #6
 300 001a 0133     		adds	r3, r3, #1
 301 001c 1A70     		strb	r2, [r3]
1252:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG1_DEC_DR2H;
 302              		.loc 1 1252 0
 303 001e 0024     		movs	r4, #0
 304 0020 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 37


 305 0022 1C70     		strb	r4, [r3]
1253:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG1_DEC_DR1;
 306              		.loc 1 1253 0
 307 0024 0133     		adds	r3, r3, #1
 308 0026 1C70     		strb	r4, [r3]
1254:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG1_DEC_OCOR;
 309              		.loc 1 1254 0
 310 0028 3F22     		movs	r2, #63
 311 002a 0133     		adds	r3, r3, #1
 312 002c 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG1_DEC_OCORM;
 313              		.loc 1 1255 0
 314 002e 0233     		adds	r3, r3, #2
 315 0030 1C70     		strb	r4, [r3]
1256:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG1_DEC_OCORH;
 316              		.loc 1 1256 0
 317 0032 0133     		adds	r3, r3, #1
 318 0034 1C70     		strb	r4, [r3]
1257:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG1_DEC_COHER;
 319              		.loc 1 1257 0
 320 0036 0133     		adds	r3, r3, #1
 321 0038 1C70     		strb	r4, [r3]
1258:Generated_Source\PSoC5/Volume_ADC.c **** 
 322              		.loc 1 1258 0
 323 003a 0125     		movs	r5, #1
 324 003c 0A33     		adds	r3, r3, #10
 325 003e 1D70     		strb	r5, [r3]
1260:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG1_DSM_CR5;
 326              		.loc 1 1260 0
 327 0040 5022     		movs	r2, #80
 328 0042 03F52763 		add	r3, r3, #2672
 329 0046 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG1_DSM_CR6;
 330              		.loc 1 1261 0
 331 0048 2722     		movs	r2, #39
 332 004a 0133     		adds	r3, r3, #1
 333 004c 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG1_DSM_CR7;
 334              		.loc 1 1262 0
 335 004e 2C22     		movs	r2, #44
 336 0050 0133     		adds	r3, r3, #1
 337 0052 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG1_DSM_CR10;
 338              		.loc 1 1263 0
 339 0054 0133     		adds	r3, r3, #1
 340 0056 1C70     		strb	r4, [r3]
1264:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG1_DSM_CR11;
 341              		.loc 1 1264 0
 342 0058 5522     		movs	r2, #85
 343 005a 0333     		adds	r3, r3, #3
 344 005c 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG1_DSM_CR12;
 345              		.loc 1 1265 0
 346 005e 5A22     		movs	r2, #90
 347 0060 0133     		adds	r3, r3, #1
 348 0062 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG1_DSM_CR14;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 38


 349              		.loc 1 1266 0
 350 0064 0526     		movs	r6, #5
 351 0066 0133     		adds	r3, r3, #1
 352 0068 1E70     		strb	r6, [r3]
1267:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG1_DSM_CR15;
 353              		.loc 1 1267 0
 354 006a 0233     		adds	r3, r3, #2
 355 006c 1D70     		strb	r5, [r3]
1268:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG1_DSM_CR16;
 356              		.loc 1 1268 0
 357 006e 1122     		movs	r2, #17
 358 0070 0133     		adds	r3, r3, #1
 359 0072 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG1_DSM_CR17;
 360              		.loc 1 1269 0
 361 0074 1922     		movs	r2, #25
 362 0076 0133     		adds	r3, r3, #1
 363 0078 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
 364              		.loc 1 1270 0
 365 007a 9722     		movs	r2, #151
 366 007c 0133     		adds	r3, r3, #1
 367 007e 1A70     		strb	r2, [r3]
1272:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG1_DSM_REF2;
 368              		.loc 1 1272 0
 369 0080 4420     		movs	r0, #68
 370              	.LVL40:
 371 0082 FFF7FEFF 		bl	Volume_ADC_SetDSMRef0Reg
 372              	.LVL41:
1273:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG1_DSM_REF3;
 373              		.loc 1 1273 0
 374 0086 5822     		movs	r2, #88
 375 0088 124B     		ldr	r3, .L28+8
 376 008a 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/Volume_ADC.c **** 
 377              		.loc 1 1274 0
 378 008c 0133     		adds	r3, r3, #1
 379 008e 1C70     		strb	r4, [r3]
1276:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG1_DSM_BUF1;
 380              		.loc 1 1276 0
 381 0090 0533     		adds	r3, r3, #5
 382 0092 1E70     		strb	r6, [r3]
1277:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG1_DSM_BUF2;
 383              		.loc 1 1277 0
 384 0094 0222     		movs	r2, #2
 385 0096 0133     		adds	r3, r3, #1
 386 0098 1A70     		strb	r2, [r3]
1278:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG1_DSM_BUF3;
 387              		.loc 1 1278 0
 388 009a 0133     		adds	r3, r3, #1
 389 009c 1C70     		strb	r4, [r3]
1279:Generated_Source\PSoC5/Volume_ADC.c **** 
 390              		.loc 1 1279 0
 391 009e 0133     		adds	r3, r3, #1
 392 00a0 1C70     		strb	r4, [r3]
1288:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
 393              		.loc 1 1288 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 39


 394 00a2 2046     		mov	r0, r4
 395 00a4 FFF7FEFF 		bl	Volume_ADC_AMux_Select
 396              	.LVL42:
1300:Generated_Source\PSoC5/Volume_ADC.c **** 
 397              		.loc 1 1300 0
 398 00a8 4FF47A42 		mov	r2, #64000
 399 00ac 0A4B     		ldr	r3, .L28+12
 400 00ae 1A60     		str	r2, [r3]
1302:Generated_Source\PSoC5/Volume_ADC.c **** 
 401              		.loc 1 1302 0
 402 00b0 0820     		movs	r0, #8
 403 00b2 2946     		mov	r1, r5
 404 00b4 FFF7FEFF 		bl	Volume_ADC_Ext_CP_Clk_SetDividerRegister
 405              	.LVL43:
1306:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 406              		.loc 1 1306 0
 407 00b8 2520     		movs	r0, #37
 408 00ba 2946     		mov	r1, r5
 409 00bc FFF7FEFF 		bl	Volume_ADC_theACLK_SetDividerRegister
 410              	.LVL44:
1311:Generated_Source\PSoC5/Volume_ADC.c ****         #endif   /* End Volume_ADC_IRQ_REMOVE */
 411              		.loc 1 1311 0
 412 00c0 1D20     		movs	r0, #29
 413 00c2 0649     		ldr	r1, .L28+16
 414 00c4 FFF7FEFF 		bl	CyIntSetVector
 415              	.LVL45:
 416 00c8 70BD     		pop	{r4, r5, r6, pc}
 417              	.LVL46:
 418              	.L27:
 419              		.cfi_def_cfa_offset 0
 420              		.cfi_restore 4
 421              		.cfi_restore 5
 422              		.cfi_restore 6
 423              		.cfi_restore 14
 424 00ca 7047     		bx	lr
 425              	.L29:
 426              		.align	2
 427              	.L28:
 428 00cc 00000000 		.word	.LANCHOR0
 429 00d0 004E0040 		.word	1073761792
 430 00d4 94580040 		.word	1073764500
 431 00d8 00000000 		.word	Volume_ADC_CountsPerVolt
 432 00dc 00000000 		.word	Volume_ADC_ISR1
 433              		.cfi_endproc
 434              	.LFE19:
 435              		.size	Volume_ADC_InitConfig, .-Volume_ADC_InitConfig
 436              		.section	.text.Volume_ADC_Init,"ax",%progbits
 437              		.align	2
 438              		.global	Volume_ADC_Init
 439              		.thumb
 440              		.thumb_func
 441              		.type	Volume_ADC_Init, %function
 442              	Volume_ADC_Init:
 443              	.LFB0:
  92:Generated_Source\PSoC5/Volume_ADC.c **** 
 444              		.loc 1 92 0
 445              		.cfi_startproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 40


 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 449              		.cfi_def_cfa_offset 20
 450              		.cfi_offset 4, -20
 451              		.cfi_offset 5, -16
 452              		.cfi_offset 6, -12
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 83B0     		sub	sp, sp, #12
 456              		.cfi_def_cfa_offset 32
  94:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_convDone = 0u;
 457              		.loc 1 94 0
 458 0004 284D     		ldr	r5, .L32
 459 0006 0127     		movs	r7, #1
 460 0008 2F70     		strb	r7, [r5]
  95:Generated_Source\PSoC5/Volume_ADC.c **** 
 461              		.loc 1 95 0
 462 000a 284E     		ldr	r6, .L32+4
 463 000c 0024     		movs	r4, #0
 464 000e 7471     		strb	r4, [r6, #5]
  97:Generated_Source\PSoC5/Volume_ADC.c **** 
 465              		.loc 1 97 0
 466 0010 1020     		movs	r0, #16
 467 0012 FFF7FEFF 		bl	Volume_ADC_Ext_CP_Clk_SetModeRegister
 468              	.LVL47:
 101:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 469              		.loc 1 101 0
 470 0016 1020     		movs	r0, #16
 471 0018 FFF7FEFF 		bl	Volume_ADC_theACLK_SetModeRegister
 472              	.LVL48:
 106:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 473              		.loc 1 106 0
 474 001c 1D20     		movs	r0, #29
 475 001e 0721     		movs	r1, #7
 476 0020 FFF7FEFF 		bl	CyIntSetPriority
 477              	.LVL49:
 110:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_DEM1_REG    = Volume_ADC_CFG1_DSM_DEM1;
 478              		.loc 1 110 0
 479 0024 0422     		movs	r2, #4
 480 0026 224B     		ldr	r3, .L32+8
 481 0028 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_MISC_REG    = Volume_ADC_CFG1_DSM_MISC;
 482              		.loc 1 111 0
 483 002a 0133     		adds	r3, r3, #1
 484 002c 1C70     		strb	r4, [r3]
 112:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CLK_REG    |= Volume_ADC_CFG1_DSM_CLK;
 485              		.loc 1 112 0
 486 002e 0733     		adds	r3, r3, #7
 487 0030 1C70     		strb	r4, [r3]
 113:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF1_REG    = Volume_ADC_CFG1_DSM_REF1;
 488              		.loc 1 113 0
 489 0032 204A     		ldr	r2, .L32+12
 490 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 491 0036 43F01803 		orr	r3, r3, #24
 492 003a 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 41


 493              		.loc 1 114 0
 494 003c 1E4B     		ldr	r3, .L32+16
 495 003e 1C70     		strb	r4, [r3]
 116:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_OUT1_REG    = Volume_ADC_CFG1_DSM_OUT1;
 496              		.loc 1 116 0
 497 0040 03F2F523 		addw	r3, r3, #757
 498 0044 1C70     		strb	r4, [r3]
 117:Generated_Source\PSoC5/Volume_ADC.c **** 
 499              		.loc 1 117 0
 500 0046 0133     		adds	r3, r3, #1
 501 0048 1C70     		strb	r4, [r3]
 119:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR1_REG     = Volume_ADC_CFG1_DSM_CR1;
 502              		.loc 1 119 0
 503 004a 0A22     		movs	r2, #10
 504 004c A3F20933 		subw	r3, r3, #777
 505 0050 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 506              		.loc 1 120 0
 507 0052 0133     		adds	r3, r3, #1
 508 0054 1C70     		strb	r4, [r3]
 124:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_MI_ENABLE != 0u*/    
 509              		.loc 1 124 0
 510 0056 0233     		adds	r3, r3, #2
 511 0058 1C70     		strb	r4, [r3]
 126:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR9_REG     = Volume_ADC_CFG1_DSM_CR9;
 512              		.loc 1 126 0
 513 005a 5B22     		movs	r2, #91
 514 005c 0533     		adds	r3, r3, #5
 515 005e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR13_REG    = Volume_ADC_CFG1_DSM_CR13;
 516              		.loc 1 127 0
 517 0060 5E22     		movs	r2, #94
 518 0062 0133     		adds	r3, r3, #1
 519 0064 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/Volume_ADC.c **** 
 520              		.loc 1 128 0
 521 0066 0433     		adds	r3, r3, #4
 522 0068 1C70     		strb	r4, [r3]
 130:Generated_Source\PSoC5/Volume_ADC.c **** 
 523              		.loc 1 130 0
 524 006a 1422     		movs	r2, #20
 525 006c A3F68C23 		subw	r3, r3, #2700
 526 0070 1A70     		strb	r2, [r3]
 133:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_IDEAL_DEC_GAIN,
 527              		.loc 1 133 0
 528 0072 0097     		str	r7, [sp]
 529 0074 2046     		mov	r0, r4
 530 0076 49F2DA01 		movw	r1, #37082
 531 007a 4FF40042 		mov	r2, #32768
 532 007e 1023     		movs	r3, #16
 533 0080 FFF7FEFF 		bl	Volume_ADC_GainCompensation
 534              	.LVL50:
 161:Generated_Source\PSoC5/Volume_ADC.c ****     CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor);
 535              		.loc 1 161 0
 536 0084 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 537 0086 06EB8303 		add	r3, r6, r3, lsl #2
 538 008a 13F8022C 		ldrb	r2, [r3, #-2]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 42


 539 008e 0B4B     		ldr	r3, .L32+20
 540 0090 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC5/Volume_ADC.c **** 
 541              		.loc 1 162 0
 542 0092 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 543 0094 013B     		subs	r3, r3, #1
 544 0096 36F82320 		ldrh	r2, [r6, r3, lsl #2]
 545 009a 094B     		ldr	r3, .L32+24
 546 009c 1A80     		strh	r2, [r3]	@ movhi
 165:Generated_Source\PSoC5/Volume_ADC.c **** }
 547              		.loc 1 165 0
 548 009e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 549 00a0 FFF7FEFF 		bl	Volume_ADC_InitConfig
 550              	.LVL51:
 166:Generated_Source\PSoC5/Volume_ADC.c **** 
 551              		.loc 1 166 0
 552 00a4 03B0     		add	sp, sp, #12
 553              		.cfi_def_cfa_offset 20
 554              		@ sp needed
 555 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 556              	.L33:
 557              		.align	2
 558              	.L32:
 559 00a8 00000000 		.word	.LANCHOR1
 560 00ac 00000000 		.word	.LANCHOR0
 561 00b0 96580040 		.word	1073764502
 562 00b4 075B0040 		.word	1073765127
 563 00b8 93580040 		.word	1073764499
 564 00bc 0E4E0040 		.word	1073761806
 565 00c0 0C4E0040 		.word	1073761804
 566              		.cfi_endproc
 567              	.LFE0:
 568              		.size	Volume_ADC_Init, .-Volume_ADC_Init
 569              		.section	.text.Volume_ADC_Enable,"ax",%progbits
 570              		.align	2
 571              		.global	Volume_ADC_Enable
 572              		.thumb
 573              		.thumb_func
 574              		.type	Volume_ADC_Enable, %function
 575              	Volume_ADC_Enable:
 576              	.LFB1:
 185:Generated_Source\PSoC5/Volume_ADC.c **** 	uint8 config;
 577              		.loc 1 185 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 70B5     		push	{r4, r5, r6, lr}
 582              		.cfi_def_cfa_offset 16
 583              		.cfi_offset 4, -16
 584              		.cfi_offset 5, -12
 585              		.cfi_offset 6, -8
 586              		.cfi_offset 14, -4
 188:Generated_Source\PSoC5/Volume_ADC.c **** 
 587              		.loc 1 188 0
 588 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 589              	.LVL52:
 590 0006 0646     		mov	r6, r0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 43


 591              	.LVL53:
 191:Generated_Source\PSoC5/Volume_ADC.c ****     
 592              		.loc 1 191 0
 593 0008 2A4B     		ldr	r3, .L36
 594 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 595              	.LVL54:
 194:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DSM_REG |= Volume_ADC_ACT_PWR_DSM_EN;
 596              		.loc 1 194 0
 597 000c 2A4B     		ldr	r3, .L36+4
 598 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 599 0010 42F00102 		orr	r2, r2, #1
 600 0014 1A70     		strb	r2, [r3]
 195:Generated_Source\PSoC5/Volume_ADC.c **** 
 601              		.loc 1 195 0
 602 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 603 0018 42F01002 		orr	r2, r2, #16
 604 001c 1A70     		strb	r2, [r3]
 198:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG |= Volume_ADC_STBY_PWR_DSM_EN;
 605              		.loc 1 198 0
 606 001e 1033     		adds	r3, r3, #16
 607 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 608 0022 42F00102 		orr	r2, r2, #1
 609 0026 1A70     		strb	r2, [r3]
 199:Generated_Source\PSoC5/Volume_ADC.c **** 
 610              		.loc 1 199 0
 611 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 612 002a 42F01002 		orr	r2, r2, #16
 613 002e 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
 614              		.loc 1 202 0
 615 0030 224D     		ldr	r5, .L36+8
 616 0032 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 617 0034 43F00203 		orr	r3, r3, #2
 618 0038 2B70     		strb	r3, [r5]
 203:Generated_Source\PSoC5/Volume_ADC.c **** 
 619              		.loc 1 203 0
 620 003a 214C     		ldr	r4, .L36+12
 621 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 622 003e 43F00203 		orr	r3, r3, #2
 623 0042 2370     		strb	r3, [r4]
 205:Generated_Source\PSoC5/Volume_ADC.c **** 
 624              		.loc 1 205 0
 625 0044 1F4A     		ldr	r2, .L36+16
 626 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 627 0048 43F00303 		orr	r3, r3, #3
 628 004c 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/Volume_ADC.c **** 
 629              		.loc 1 271 0
 630 004e 0320     		movs	r0, #3
 631 0050 FFF7FEFF 		bl	CyDelayUs
 632              	.LVL55:
 274:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 633              		.loc 1 274 0
 634 0054 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 635 0056 03F0FD03 		and	r3, r3, #253
 636 005a 2B70     		strb	r3, [r5]
 275:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 44


 637              		.loc 1 275 0
 638 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 639 005e 03F0FD03 		and	r3, r3, #253
 640 0062 2370     		strb	r3, [r4]
 278:Generated_Source\PSoC5/Volume_ADC.c **** 
 641              		.loc 1 278 0
 642 0064 184A     		ldr	r2, .L36+20
 643 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 644 0068 43F00603 		orr	r3, r3, #6
 645 006c 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/Volume_ADC.c **** 
 646              		.loc 1 281 0
 647 006e 7A22     		movs	r2, #122
 648 0070 164B     		ldr	r3, .L36+24
 649 0072 1A70     		strb	r2, [r3]
 285:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG |= Volume_ADC_STBY_PWR_CLK_EN;
 650              		.loc 1 285 0
 651 0074 164A     		ldr	r2, .L36+28
 652 0076 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 653 0078 43F00103 		orr	r3, r3, #1
 654 007c 1370     		strb	r3, [r2]
 286:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 655              		.loc 1 286 0
 656 007e 1032     		adds	r2, r2, #16
 657 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 658 0082 43F00103 		orr	r3, r3, #1
 659 0086 1370     		strb	r3, [r2]
 290:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 660              		.loc 1 290 0
 661 0088 0F3A     		subs	r2, r2, #15
 662 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 663 008c 43F00103 		orr	r3, r3, #1
 664 0090 1370     		strb	r3, [r2]
 291:Generated_Source\PSoC5/Volume_ADC.c **** 
 665              		.loc 1 291 0
 666 0092 1032     		adds	r2, r2, #16
 667 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 668 0096 43F00103 		orr	r3, r3, #1
 669 009a 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/Volume_ADC.c ****         /* Enable interrupt */
 670              		.loc 1 295 0
 671 009c 4FF00053 		mov	r3, #536870912
 672 00a0 0C4A     		ldr	r2, .L36+32
 673 00a2 1360     		str	r3, [r2]
 297:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 674              		.loc 1 297 0
 675 00a4 A2F5C072 		sub	r2, r2, #384
 676 00a8 1360     		str	r3, [r2]
 300:Generated_Source\PSoC5/Volume_ADC.c **** 
 677              		.loc 1 300 0
 678 00aa 3046     		mov	r0, r6
 679 00ac FFF7FEFF 		bl	CyExitCriticalSection
 680              	.LVL56:
 681 00b0 70BD     		pop	{r4, r5, r6, pc}
 682              	.LVL57:
 683              	.L37:
 684 00b2 00BF     		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 45


 685              	.L36:
 686 00b4 00000000 		.word	.LANCHOR1
 687 00b8 AA430040 		.word	1073759146
 688 00bc F8460040 		.word	1073759992
 689 00c0 F9460040 		.word	1073759993
 690 00c4 91580040 		.word	1073764497
 691 00c8 77580040 		.word	1073764471
 692 00cc 82580040 		.word	1073764482
 693 00d0 A1430040 		.word	1073759137
 694 00d4 80E200E0 		.word	-536812928
 695              		.cfi_endproc
 696              	.LFE1:
 697              		.size	Volume_ADC_Enable, .-Volume_ADC_Enable
 698              		.section	.text.Volume_ADC_Start,"ax",%progbits
 699              		.align	2
 700              		.global	Volume_ADC_Start
 701              		.thumb
 702              		.thumb_func
 703              		.type	Volume_ADC_Start, %function
 704              	Volume_ADC_Start:
 705              	.LFB2:
 330:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_initVar == 0u)
 706              		.loc 1 330 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710 0000 08B5     		push	{r3, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 3, -8
 713              		.cfi_offset 14, -4
 331:Generated_Source\PSoC5/Volume_ADC.c ****     {
 714              		.loc 1 331 0
 715 0002 084B     		ldr	r3, .L42
 716 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 717 0006 4BB9     		cbnz	r3, .L39
 333:Generated_Source\PSoC5/Volume_ADC.c ****         {
 718              		.loc 1 333 0
 719 0008 064B     		ldr	r3, .L42
 720 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 721 000c 13F0FF0F 		tst	r3, #255
 722 0010 01D1     		bne	.L40
 335:Generated_Source\PSoC5/Volume_ADC.c ****         }
 723              		.loc 1 335 0
 724 0012 FFF7FEFF 		bl	Volume_ADC_Init
 725              	.LVL58:
 726              	.L40:
 337:Generated_Source\PSoC5/Volume_ADC.c ****     }
 727              		.loc 1 337 0
 728 0016 0122     		movs	r2, #1
 729 0018 024B     		ldr	r3, .L42
 730 001a 9A71     		strb	r2, [r3, #6]
 731              	.L39:
 341:Generated_Source\PSoC5/Volume_ADC.c **** }
 732              		.loc 1 341 0
 733 001c FFF7FEFF 		bl	Volume_ADC_Enable
 734              	.LVL59:
 735 0020 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 46


 736              	.L43:
 737 0022 00BF     		.align	2
 738              	.L42:
 739 0024 00000000 		.word	.LANCHOR0
 740              		.cfi_endproc
 741              	.LFE2:
 742              		.size	Volume_ADC_Start, .-Volume_ADC_Start
 743              		.section	.text.Volume_ADC_Stop,"ax",%progbits
 744              		.align	2
 745              		.global	Volume_ADC_Stop
 746              		.thumb
 747              		.thumb_func
 748              		.type	Volume_ADC_Stop, %function
 749              	Volume_ADC_Stop:
 750              	.LFB3:
 363:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
 751              		.loc 1 363 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755 0000 70B5     		push	{r4, r5, r6, lr}
 756              		.cfi_def_cfa_offset 16
 757              		.cfi_offset 4, -16
 758              		.cfi_offset 5, -12
 759              		.cfi_offset 6, -8
 760              		.cfi_offset 14, -4
 365:Generated_Source\PSoC5/Volume_ADC.c **** 
 761              		.loc 1 365 0
 762 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 763              	.LVL60:
 764 0006 0646     		mov	r6, r0
 765              	.LVL61:
 368:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |=  Volume_ADC_DEC_INTR_CLEAR;
 766              		.loc 1 368 0
 767 0008 314A     		ldr	r2, .L46
 768 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 769 000c 03F0FE03 		and	r3, r3, #254
 770 0010 1370     		strb	r3, [r2]
 369:Generated_Source\PSoC5/Volume_ADC.c **** 
 771              		.loc 1 369 0
 772 0012 0132     		adds	r2, r2, #1
 773 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 774 0016 43F00403 		orr	r3, r3, #4
 775 001a 1370     		strb	r3, [r2]
 373:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
 776              		.loc 1 373 0
 777 001c 2D4D     		ldr	r5, .L46+4
 778 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 779 0020 43F00203 		orr	r3, r3, #2
 780 0024 2B70     		strb	r3, [r5]
 374:Generated_Source\PSoC5/Volume_ADC.c **** 
 781              		.loc 1 374 0
 782 0026 2C4C     		ldr	r4, .L46+8
 783 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 784 002a 43F00203 		orr	r3, r3, #2
 785 002e 2370     		strb	r3, [r4]
 376:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF0_REG &= (uint8)~Volume_ADC_DSM_EN_BUF_VREF_INN;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 47


 786              		.loc 1 376 0
 787 0030 02F52962 		add	r2, r2, #2704
 788 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 789 0036 03F0FC03 		and	r3, r3, #252
 790 003a 1370     		strb	r3, [r2]
 377:Generated_Source\PSoC5/Volume_ADC.c **** 
 791              		.loc 1 377 0
 792 003c 0132     		adds	r2, r2, #1
 793 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 794 0040 03F0F703 		and	r3, r3, #247
 795 0044 1370     		strb	r3, [r2]
 380:Generated_Source\PSoC5/Volume_ADC.c **** 
 796              		.loc 1 380 0
 797 0046 0320     		movs	r0, #3
 798 0048 FFF7FEFF 		bl	CyDelayUs
 799              	.LVL62:
 383:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 800              		.loc 1 383 0
 801 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 802 004e 03F0FD03 		and	r3, r3, #253
 803 0052 2B70     		strb	r3, [r5]
 384:Generated_Source\PSoC5/Volume_ADC.c **** 
 804              		.loc 1 384 0
 805 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 806 0056 03F0FD03 		and	r3, r3, #253
 807 005a 2370     		strb	r3, [r4]
 387:Generated_Source\PSoC5/Volume_ADC.c **** 
 808              		.loc 1 387 0
 809 005c 1F4B     		ldr	r3, .L46+12
 810 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 811 0060 02F0EF02 		and	r2, r2, #239
 812 0064 1A70     		strb	r2, [r3]
 390:Generated_Source\PSoC5/Volume_ADC.c **** 
 813              		.loc 1 390 0
 814 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 815 0068 02F0FE02 		and	r2, r2, #254
 816 006c 1A70     		strb	r2, [r3]
 393:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG &= (uint8)~Volume_ADC_STBY_PWR_DSM_EN;
 817              		.loc 1 393 0
 818 006e 1033     		adds	r3, r3, #16
 819 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 820 0072 02F0FE02 		and	r2, r2, #254
 821 0076 1A70     		strb	r2, [r3]
 394:Generated_Source\PSoC5/Volume_ADC.c **** 
 822              		.loc 1 394 0
 823 0078 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 824 007a 02F0EF02 		and	r2, r2, #239
 825 007e 1A70     		strb	r2, [r3]
 397:Generated_Source\PSoC5/Volume_ADC.c **** 
 826              		.loc 1 397 0
 827 0080 174A     		ldr	r2, .L46+16
 828 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 829 0084 03F0F903 		and	r3, r3, #249
 830 0088 1370     		strb	r3, [r2]
 401:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CLK_EN;
 831              		.loc 1 401 0
 832 008a A2F5A652 		sub	r2, r2, #5312
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 48


 833 008e 163A     		subs	r2, r2, #22
 834 0090 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 835 0092 03F0FE03 		and	r3, r3, #254
 836 0096 1370     		strb	r3, [r2]
 402:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 837              		.loc 1 402 0
 838 0098 1032     		adds	r2, r2, #16
 839 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 840 009c 03F0FE03 		and	r3, r3, #254
 841 00a0 1370     		strb	r3, [r2]
 406:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to charge pump clock */
 842              		.loc 1 406 0
 843 00a2 02F5A652 		add	r2, r2, #5312
 844 00a6 1132     		adds	r2, r2, #17
 845 00a8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 846 00aa 03F0F703 		and	r3, r3, #247
 847 00ae 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 848              		.loc 1 408 0
 849 00b0 A2F5A752 		sub	r2, r2, #5344
 850 00b4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 851 00b6 03F0FE03 		and	r3, r3, #254
 852 00ba 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/Volume_ADC.c ****     
 853              		.loc 1 409 0
 854 00bc 1032     		adds	r2, r2, #16
 855 00be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 856 00c0 03F0FE03 		and	r3, r3, #254
 857 00c4 1370     		strb	r3, [r2]
 411:Generated_Source\PSoC5/Volume_ADC.c **** }
 858              		.loc 1 411 0
 859 00c6 3046     		mov	r0, r6
 860 00c8 FFF7FEFF 		bl	CyExitCriticalSection
 861              	.LVL63:
 862 00cc 70BD     		pop	{r4, r5, r6, pc}
 863              	.LVL64:
 864              	.L47:
 865 00ce 00BF     		.align	2
 866              	.L46:
 867 00d0 004E0040 		.word	1073761792
 868 00d4 F8460040 		.word	1073759992
 869 00d8 F9460040 		.word	1073759993
 870 00dc AA430040 		.word	1073759146
 871 00e0 77580040 		.word	1073764471
 872              		.cfi_endproc
 873              	.LFE3:
 874              		.size	Volume_ADC_Stop, .-Volume_ADC_Stop
 875              		.section	.text.Volume_ADC_SetBufferGain,"ax",%progbits
 876              		.align	2
 877              		.global	Volume_ADC_SetBufferGain
 878              		.thumb
 879              		.thumb_func
 880              		.type	Volume_ADC_SetBufferGain, %function
 881              	Volume_ADC_SetBufferGain:
 882              	.LFB4:
 430:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
 883              		.loc 1 430 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 49


 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 888              	.LVL65:
 432:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= (uint8)(gain << Volume_ADC_DSM_GAIN_SHIFT) & Volume_ADC_DSM_GAIN_MASK;
 889              		.loc 1 432 0
 890 0000 044A     		ldr	r2, .L49
 891 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 892 0004 03F0F303 		and	r3, r3, #243
 893              	.LVL66:
 433:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_BUF1_REG = tmpReg;
 894              		.loc 1 433 0
 895 0008 8000     		lsls	r0, r0, #2
 896              	.LVL67:
 897 000a 00F00C00 		and	r0, r0, #12
 898 000e 1843     		orrs	r0, r0, r3
 899              	.LVL68:
 434:Generated_Source\PSoC5/Volume_ADC.c **** }
 900              		.loc 1 434 0
 901 0010 1070     		strb	r0, [r2]
 902 0012 7047     		bx	lr
 903              	.L50:
 904              		.align	2
 905              	.L49:
 906 0014 9B580040 		.word	1073764507
 907              		.cfi_endproc
 908              	.LFE4:
 909              		.size	Volume_ADC_SetBufferGain, .-Volume_ADC_SetBufferGain
 910              		.section	.text.Volume_ADC_SetCoherency,"ax",%progbits
 911              		.align	2
 912              		.global	Volume_ADC_SetCoherency
 913              		.thumb
 914              		.thumb_func
 915              		.type	Volume_ADC_SetCoherency, %function
 916              	Volume_ADC_SetCoherency:
 917              	.LFB5:
 466:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
 918              		.loc 1 466 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              		@ link register save eliminated.
 923              	.LVL69:
 469:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= coherency & Volume_ADC_DEC_SAMP_KEY_MASK;
 924              		.loc 1 469 0
 925 0000 044A     		ldr	r2, .L52
 926 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 927 0004 03F0FC03 		and	r3, r3, #252
 928              	.LVL70:
 470:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_COHER_REG = tmpReg;
 929              		.loc 1 470 0
 930 0008 00F00300 		and	r0, r0, #3
 931              	.LVL71:
 932 000c 1843     		orrs	r0, r0, r3
 933              	.LVL72:
 471:Generated_Source\PSoC5/Volume_ADC.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 50


 934              		.loc 1 471 0
 935 000e 1070     		strb	r0, [r2]
 936 0010 7047     		bx	lr
 937              	.L53:
 938 0012 00BF     		.align	2
 939              	.L52:
 940 0014 144E0040 		.word	1073761812
 941              		.cfi_endproc
 942              	.LFE5:
 943              		.size	Volume_ADC_SetCoherency, .-Volume_ADC_SetCoherency
 944              		.global	__aeabi_ui2f
 945              		.global	__aeabi_fmul
 946              		.global	__aeabi_f2d
 947              		.global	__aeabi_dcmpgt
 948              		.global	__aeabi_f2uiz
 949              		.section	.text.Volume_ADC_SetGCOR,"ax",%progbits
 950              		.align	2
 951              		.global	Volume_ADC_SetGCOR
 952              		.thumb
 953              		.thumb_func
 954              		.type	Volume_ADC_SetGCOR, %function
 955              	Volume_ADC_SetGCOR:
 956              	.LFB6:
 506:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 tmpReg;
 957              		.loc 1 506 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL73:
 962 0000 10B5     		push	{r4, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 4, -8
 965              		.cfi_offset 14, -4
 966 0002 0446     		mov	r4, r0
 511:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = ((float32)tmpReg / (float32)Volume_ADC_IDEAL_GAIN_CONST);
 967              		.loc 1 511 0
 968 0004 184B     		ldr	r3, .L58+8
 969 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 970 0008 013B     		subs	r3, r3, #1
 971              	.LVL74:
 512:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = tmpValue * gainAdjust;
 972              		.loc 1 512 0
 973 000a 184A     		ldr	r2, .L58+12
 974 000c 32F82300 		ldrh	r0, [r2, r3, lsl #2]
 975              	.LVL75:
 976 0010 FFF7FEFF 		bl	__aeabi_ui2f
 977              	.LVL76:
 978 0014 4FF06051 		mov	r1, #939524096
 979 0018 FFF7FEFF 		bl	__aeabi_fmul
 980              	.LVL77:
 513:Generated_Source\PSoC5/Volume_ADC.c **** 
 981              		.loc 1 513 0
 982 001c 2146     		mov	r1, r4
 983 001e FFF7FEFF 		bl	__aeabi_fmul
 984              	.LVL78:
 985 0022 0446     		mov	r4, r0
 986              	.LVL79:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 51


 515:Generated_Source\PSoC5/Volume_ADC.c ****     {
 987              		.loc 1 515 0
 988 0024 FFF7FEFF 		bl	__aeabi_f2d
 989              	.LVL80:
 990 0028 0DA3     		adr	r3, .L58
 991 002a D3E90023 		ldrd	r2, [r3]
 992 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 993              	.LVL81:
 994 0032 88B9     		cbnz	r0, .L56
 521:Generated_Source\PSoC5/Volume_ADC.c **** 		tmpReg = (uint16)tmpValue;
 995              		.loc 1 521 0
 996 0034 2046     		mov	r0, r4
 997 0036 4FF08E41 		mov	r1, #1191182336
 998 003a FFF7FEFF 		bl	__aeabi_fmul
 999              	.LVL82:
 522:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, tmpReg);
 1000              		.loc 1 522 0
 1001 003e FFF7FEFF 		bl	__aeabi_f2uiz
 1002              	.LVL83:
 1003 0042 80B2     		uxth	r0, r0
 1004              	.LVL84:
 523:Generated_Source\PSoC5/Volume_ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 1005              		.loc 1 523 0
 1006 0044 0A4B     		ldr	r3, .L58+16
 1007 0046 1880     		strh	r0, [r3]	@ movhi
 525:Generated_Source\PSoC5/Volume_ADC.c **** 
 1008              		.loc 1 525 0
 1009 0048 074B     		ldr	r3, .L58+8
 1010 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1011 004c 013B     		subs	r3, r3, #1
 1012 004e 074A     		ldr	r2, .L58+12
 1013 0050 22F82300 		strh	r0, [r2, r3, lsl #2]	@ movhi
 1014              	.LVL85:
 527:Generated_Source\PSoC5/Volume_ADC.c **** 
 1015              		.loc 1 527 0
 1016 0054 0020     		movs	r0, #0
 1017              	.LVL86:
 1018 0056 10BD     		pop	{r4, pc}
 1019              	.LVL87:
 1020              	.L56:
 517:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1021              		.loc 1 517 0
 1022 0058 0120     		movs	r0, #1
 1023              	.LVL88:
 531:Generated_Source\PSoC5/Volume_ADC.c **** 
 1024              		.loc 1 531 0
 1025 005a 10BD     		pop	{r4, pc}
 1026              	.LVL89:
 1027              	.L59:
 1028 005c AFF30080 		.align	3
 1029              	.L58:
 1030 0060 8F537424 		.word	611603343
 1031 0064 97FFFF3F 		.word	1073741719
 1032 0068 00000000 		.word	.LANCHOR1
 1033 006c 00000000 		.word	.LANCHOR0
 1034 0070 0C4E0040 		.word	1073761804
 1035              		.cfi_endproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 52


 1036              	.LFE6:
 1037              		.size	Volume_ADC_SetGCOR, .-Volume_ADC_SetGCOR
 1038 0074 AFF30080 		.section	.text.Volume_ADC_ReadGCOR,"ax",%progbits
 1039              		.align	2
 1040              		.global	Volume_ADC_ReadGCOR
 1041              		.thumb
 1042              		.thumb_func
 1043              		.type	Volume_ADC_ReadGCOR, %function
 1044              	Volume_ADC_ReadGCOR:
 1045              	.LFB7:
 553:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 gValue;
 1046              		.loc 1 553 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              		@ link register save eliminated.
 557:Generated_Source\PSoC5/Volume_ADC.c ****     gcorValue = CY_GET_REG16(Volume_ADC_DEC_GCOR_16B_PTR);
 1051              		.loc 1 557 0
 1052 0000 064B     		ldr	r3, .L62
 1053 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 0004 DBB2     		uxtb	r3, r3
 1055              	.LVL90:
 558:Generated_Source\PSoC5/Volume_ADC.c **** 
 1056              		.loc 1 558 0
 1057 0006 064A     		ldr	r2, .L62+4
 1058 0008 1088     		ldrh	r0, [r2]
 1059 000a 80B2     		uxth	r0, r0
 1060              	.LVL91:
 560:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1061              		.loc 1 560 0
 1062 000c 0E2B     		cmp	r3, #14
 1063 000e 03D8     		bhi	.L61
 562:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1064              		.loc 1 562 0
 1065 0010 C3F10F03 		rsb	r3, r3, #15
 1066              	.LVL92:
 1067 0014 9840     		lsls	r0, r0, r3
 1068              	.LVL93:
 1069 0016 80B2     		uxth	r0, r0
 1070              	.LVL94:
 1071              	.L61:
 566:Generated_Source\PSoC5/Volume_ADC.c **** 
 1072              		.loc 1 566 0
 1073 0018 7047     		bx	lr
 1074              	.L63:
 1075 001a 00BF     		.align	2
 1076              	.L62:
 1077 001c 0E4E0040 		.word	1073761806
 1078 0020 0C4E0040 		.word	1073761804
 1079              		.cfi_endproc
 1080              	.LFE7:
 1081              		.size	Volume_ADC_ReadGCOR, .-Volume_ADC_ReadGCOR
 1082              		.section	.text.Volume_ADC_StartConvert,"ax",%progbits
 1083              		.align	2
 1084              		.global	Volume_ADC_StartConvert
 1085              		.thumb
 1086              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 53


 1087              		.type	Volume_ADC_StartConvert, %function
 1088              	Volume_ADC_StartConvert:
 1089              	.LFB8:
 587:Generated_Source\PSoC5/Volume_ADC.c ****     /* Start the conversion */
 1090              		.loc 1 587 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 589:Generated_Source\PSoC5/Volume_ADC.c **** }
 1095              		.loc 1 589 0
 1096 0000 024A     		ldr	r2, .L65
 1097 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1098 0004 43F00103 		orr	r3, r3, #1
 1099 0008 1370     		strb	r3, [r2]
 1100 000a 7047     		bx	lr
 1101              	.L66:
 1102              		.align	2
 1103              	.L65:
 1104 000c 004E0040 		.word	1073761792
 1105              		.cfi_endproc
 1106              	.LFE8:
 1107              		.size	Volume_ADC_StartConvert, .-Volume_ADC_StartConvert
 1108              		.section	.text.Volume_ADC_StopConvert,"ax",%progbits
 1109              		.align	2
 1110              		.global	Volume_ADC_StopConvert
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	Volume_ADC_StopConvert, %function
 1114              	Volume_ADC_StopConvert:
 1115              	.LFB9:
 610:Generated_Source\PSoC5/Volume_ADC.c ****     /* Stop all conversions */
 1116              		.loc 1 610 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 612:Generated_Source\PSoC5/Volume_ADC.c **** }
 1121              		.loc 1 612 0
 1122 0000 024A     		ldr	r2, .L68
 1123 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1124 0004 03F0FE03 		and	r3, r3, #254
 1125 0008 1370     		strb	r3, [r2]
 1126 000a 7047     		bx	lr
 1127              	.L69:
 1128              		.align	2
 1129              	.L68:
 1130 000c 004E0040 		.word	1073761792
 1131              		.cfi_endproc
 1132              	.LFE9:
 1133              		.size	Volume_ADC_StopConvert, .-Volume_ADC_StopConvert
 1134              		.section	.text.Volume_ADC_IsEndConversion,"ax",%progbits
 1135              		.align	2
 1136              		.global	Volume_ADC_IsEndConversion
 1137              		.thumb
 1138              		.thumb_func
 1139              		.type	Volume_ADC_IsEndConversion, %function
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 54


 1140              	Volume_ADC_IsEndConversion:
 1141              	.LFB10:
 645:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 status;
 1142              		.loc 1 645 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              		@ link register save eliminated.
 1147              	.LVL95:
 1148              	.L74:
 653:Generated_Source\PSoC5/Volume_ADC.c ****         {
 1149              		.loc 1 653 0
 1150 0000 094B     		ldr	r3, .L75
 1151 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1152 0004 13F0FF0F 		tst	r3, #255
 1153 0008 03D0     		beq	.L71
 655:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1154              		.loc 1 655 0
 1155 000a 074B     		ldr	r3, .L75
 1156 000c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1157 000e DBB2     		uxtb	r3, r3
 1158              	.LVL96:
 1159 0010 03E0     		b	.L72
 1160              	.LVL97:
 1161              	.L71:
 659:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1162              		.loc 1 659 0
 1163 0012 064B     		ldr	r3, .L75+4
 1164 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1165 0016 03F00103 		and	r3, r3, #1
 1166              	.LVL98:
 1167              	.L72:
 661:Generated_Source\PSoC5/Volume_ADC.c **** 
 1168              		.loc 1 661 0
 1169 001a 012B     		cmp	r3, #1
 1170 001c 01D0     		beq	.L73
 661:Generated_Source\PSoC5/Volume_ADC.c **** 
 1171              		.loc 1 661 0 is_stmt 0 discriminator 1
 1172 001e 0028     		cmp	r0, #0
 1173 0020 EED0     		beq	.L74
 1174              	.L73:
 664:Generated_Source\PSoC5/Volume_ADC.c **** 
 1175              		.loc 1 664 0 is_stmt 1
 1176 0022 1846     		mov	r0, r3
 1177              	.LVL99:
 1178 0024 7047     		bx	lr
 1179              	.L76:
 1180 0026 00BF     		.align	2
 1181              	.L75:
 1182 0028 00000000 		.word	.LANCHOR0
 1183 002c 014E0040 		.word	1073761793
 1184              		.cfi_endproc
 1185              	.LFE10:
 1186              		.size	Volume_ADC_IsEndConversion, .-Volume_ADC_IsEndConversion
 1187              		.section	.text.Volume_ADC_GetResult8,"ax",%progbits
 1188              		.align	2
 1189              		.global	Volume_ADC_GetResult8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 55


 1190              		.thumb
 1191              		.thumb_func
 1192              		.type	Volume_ADC_GetResult8, %function
 1193              	Volume_ADC_GetResult8:
 1194              	.LFB11:
 692:Generated_Source\PSoC5/Volume_ADC.c ****     int8 result;
 1195              		.loc 1 692 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 697:Generated_Source\PSoC5/Volume_ADC.c **** 
 1200              		.loc 1 697 0
 1201 0000 0C4B     		ldr	r3, .L81
 1202 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 0004 03F00303 		and	r3, r3, #3
 1204              	.LVL100:
 699:Generated_Source\PSoC5/Volume_ADC.c **** 
 1205              		.loc 1 699 0
 1206 0008 0B4A     		ldr	r2, .L81+4
 1207 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1208              	.LVL101:
 701:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 1209              		.loc 1 701 0
 1210 000c 022B     		cmp	r3, #2
 1211 000e 02D1     		bne	.L78
 703:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1212              		.loc 1 703 0
 1213 0010 0A4B     		ldr	r3, .L81+8
 1214              	.LVL102:
 1215 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1216 0014 03E0     		b	.L79
 1217              	.LVL103:
 1218              	.L78:
 705:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 1219              		.loc 1 705 0
 1220 0016 032B     		cmp	r3, #3
 1221 0018 01D1     		bne	.L79
 707:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1222              		.loc 1 707 0
 1223 001a 094B     		ldr	r3, .L81+12
 1224              	.LVL104:
 1225 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1226              	.L79:
 713:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1227              		.loc 1 713 0
 1228 001e 094B     		ldr	r3, .L81+16
 1229 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1230 0022 13F0FF0F 		tst	r3, #255
 1231 0026 02D0     		beq	.L80
 715:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1232              		.loc 1 715 0
 1233 0028 0022     		movs	r2, #0
 1234 002a 064B     		ldr	r3, .L81+16
 1235 002c 5A71     		strb	r2, [r3, #5]
 1236              	.L80:
 718:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 56


 1237              		.loc 1 718 0
 1238 002e 40B2     		sxtb	r0, r0
 1239 0030 7047     		bx	lr
 1240              	.L82:
 1241 0032 00BF     		.align	2
 1242              	.L81:
 1243 0034 144E0040 		.word	1073761812
 1244 0038 104E0040 		.word	1073761808
 1245 003c 114E0040 		.word	1073761809
 1246 0040 124E0040 		.word	1073761810
 1247 0044 00000000 		.word	.LANCHOR0
 1248              		.cfi_endproc
 1249              	.LFE11:
 1250              		.size	Volume_ADC_GetResult8, .-Volume_ADC_GetResult8
 1251              		.section	.text.Volume_ADC_GetResult16,"ax",%progbits
 1252              		.align	2
 1253              		.global	Volume_ADC_GetResult16
 1254              		.thumb
 1255              		.thumb_func
 1256              		.type	Volume_ADC_GetResult16, %function
 1257              	Volume_ADC_GetResult16:
 1258              	.LFB12:
 746:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 result;
 1259              		.loc 1 746 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              		@ link register save eliminated.
 751:Generated_Source\PSoC5/Volume_ADC.c **** 
 1264              		.loc 1 751 0
 1265 0000 0E4B     		ldr	r3, .L87
 1266 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1267 0004 03F00303 		and	r3, r3, #3
 1268              	.LVL105:
 753:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1269              		.loc 1 753 0
 1270 0008 012B     		cmp	r3, #1
 1271 000a 03D8     		bhi	.L84
 759:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1272              		.loc 1 759 0
 1273 000c 0C4B     		ldr	r3, .L87+4
 1274              	.LVL106:
 1275 000e 1888     		ldrh	r0, [r3]
 1276 0010 80B2     		uxth	r0, r0
 1277              	.LVL107:
 1278 0012 09E0     		b	.L85
 1279              	.LVL108:
 1280              	.L84:
 767:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint16)((uint16)Volume_ADC_DEC_SAMPM_REG << 8u);
 1281              		.loc 1 767 0
 1282 0014 0A4A     		ldr	r2, .L87+4
 1283 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1284              	.LVL109:
 768:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1285              		.loc 1 768 0
 1286 0018 0A49     		ldr	r1, .L87+8
 1287 001a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 57


 1288 001c 42EA0020 		orr	r0, r2, r0, lsl #8
 1289              	.LVL110:
 770:Generated_Source\PSoC5/Volume_ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 1290              		.loc 1 770 0
 1291 0020 032B     		cmp	r3, #3
 1292 0022 01D1     		bne	.L85
 772:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1293              		.loc 1 772 0
 1294 0024 084B     		ldr	r3, .L87+12
 1295              	.LVL111:
 1296 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1297              	.L85:
 776:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1298              		.loc 1 776 0
 1299 0028 084B     		ldr	r3, .L87+16
 1300 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1301 002c 13F0FF0F 		tst	r3, #255
 1302 0030 02D0     		beq	.L86
 778:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1303              		.loc 1 778 0
 1304 0032 0022     		movs	r2, #0
 1305 0034 054B     		ldr	r3, .L87+16
 1306 0036 5A71     		strb	r2, [r3, #5]
 1307              	.L86:
 782:Generated_Source\PSoC5/Volume_ADC.c **** 
 1308              		.loc 1 782 0
 1309 0038 00B2     		sxth	r0, r0
 1310 003a 7047     		bx	lr
 1311              	.L88:
 1312              		.align	2
 1313              	.L87:
 1314 003c 144E0040 		.word	1073761812
 1315 0040 104E0040 		.word	1073761808
 1316 0044 114E0040 		.word	1073761809
 1317 0048 124E0040 		.word	1073761810
 1318 004c 00000000 		.word	.LANCHOR0
 1319              		.cfi_endproc
 1320              	.LFE12:
 1321              		.size	Volume_ADC_GetResult16, .-Volume_ADC_GetResult16
 1322              		.section	.text.Volume_ADC_GetResult32,"ax",%progbits
 1323              		.align	2
 1324              		.global	Volume_ADC_GetResult32
 1325              		.thumb
 1326              		.thumb_func
 1327              		.type	Volume_ADC_GetResult32, %function
 1328              	Volume_ADC_GetResult32:
 1329              	.LFB13:
 806:Generated_Source\PSoC5/Volume_ADC.c ****     uint32 result;
 1330              		.loc 1 806 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 814:Generated_Source\PSoC5/Volume_ADC.c **** 
 1335              		.loc 1 814 0
 1336 0000 154B     		ldr	r3, .L94
 1337 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 58


 1338 0004 03F00303 		and	r3, r3, #3
 1339              	.LVL112:
 816:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1340              		.loc 1 816 0
 1341 0008 012B     		cmp	r3, #1
 1342 000a 07D8     		bhi	.L90
 827:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 1343              		.loc 1 827 0
 1344 000c 134B     		ldr	r3, .L94+4
 1345              	.LVL113:
 1346 000e 1888     		ldrh	r0, [r3]
 1347              	.LVL114:
 828:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1348              		.loc 1 828 0
 1349 0010 023B     		subs	r3, r3, #2
 1350 0012 1B88     		ldrh	r3, [r3]
 1351 0014 9BB2     		uxth	r3, r3
 1352 0016 43EA0040 		orr	r0, r3, r0, lsl #16
 1353              	.LVL115:
 1354 001a 13E0     		b	.L91
 1355              	.LVL116:
 1356              	.L90:
 831:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Read middle byte at the end */
 1357              		.loc 1 831 0
 1358 001c 022B     		cmp	r3, #2
 1359 001e 0AD1     		bne	.L92
 841:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | Volume_ADC_DEC_SAMP_REG;
 1360              		.loc 1 841 0
 1361 0020 0E4B     		ldr	r3, .L94+4
 1362              	.LVL117:
 1363 0022 1888     		ldrh	r0, [r3]
 1364              	.LVL118:
 842:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint32)((uint32)Volume_ADC_DEC_SAMPM_REG << 8u);
 1365              		.loc 1 842 0
 1366 0024 023B     		subs	r3, r3, #2
 1367 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1368 0028 43EA0043 		orr	r3, r3, r0, lsl #16
 1369              	.LVL119:
 843:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1370              		.loc 1 843 0
 1371 002c 0C4A     		ldr	r2, .L94+8
 1372 002e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1373 0030 43EA0020 		orr	r0, r3, r0, lsl #8
 1374              	.LVL120:
 1375 0034 06E0     		b	.L91
 1376              	.LVL121:
 1377              	.L92:
 858:Generated_Source\PSoC5/Volume_ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR) << 16u);
 1378              		.loc 1 858 0
 1379 0036 0B4B     		ldr	r3, .L94+12
 1380              	.LVL122:
 1381 0038 1888     		ldrh	r0, [r3]
 1382 003a 83B2     		uxth	r3, r0
 1383              	.LVL123:
 859:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1384              		.loc 1 859 0
 1385 003c 074A     		ldr	r2, .L94+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 59


 1386 003e 1088     		ldrh	r0, [r2]
 1387 0040 43EA0040 		orr	r0, r3, r0, lsl #16
 1388              	.LVL124:
 1389              	.L91:
 863:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1390              		.loc 1 863 0
 1391 0044 084B     		ldr	r3, .L94+16
 1392 0046 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1393 0048 13F0FF0F 		tst	r3, #255
 1394 004c 02D0     		beq	.L93
 865:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1395              		.loc 1 865 0
 1396 004e 0022     		movs	r2, #0
 1397 0050 054B     		ldr	r3, .L94+16
 1398 0052 5A71     		strb	r2, [r3, #5]
 1399              	.L93:
 869:Generated_Source\PSoC5/Volume_ADC.c **** 
 1400              		.loc 1 869 0
 1401 0054 7047     		bx	lr
 1402              	.L95:
 1403 0056 00BF     		.align	2
 1404              	.L94:
 1405 0058 144E0040 		.word	1073761812
 1406 005c 124E0040 		.word	1073761810
 1407 0060 114E0040 		.word	1073761809
 1408 0064 104E0040 		.word	1073761808
 1409 0068 00000000 		.word	.LANCHOR0
 1410              		.cfi_endproc
 1411              	.LFE13:
 1412              		.size	Volume_ADC_GetResult32, .-Volume_ADC_GetResult32
 1413              		.section	.text.Volume_ADC_SetOffset,"ax",%progbits
 1414              		.align	2
 1415              		.global	Volume_ADC_SetOffset
 1416              		.thumb
 1417              		.thumb_func
 1418              		.type	Volume_ADC_SetOffset, %function
 1419              	Volume_ADC_SetOffset:
 1420              	.LFB14:
 899:Generated_Source\PSoC5/Volume_ADC.c **** 
 1421              		.loc 1 899 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
 1426              	.LVL125:
 901:Generated_Source\PSoC5/Volume_ADC.c **** }
 1427              		.loc 1 901 0
 1428 0000 014B     		ldr	r3, .L97
 1429 0002 1860     		str	r0, [r3]
 1430 0004 7047     		bx	lr
 1431              	.L98:
 1432 0006 00BF     		.align	2
 1433              	.L97:
 1434 0008 00000000 		.word	Volume_ADC_Offset
 1435              		.cfi_endproc
 1436              	.LFE14:
 1437              		.size	Volume_ADC_SetOffset, .-Volume_ADC_SetOffset
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 60


 1438              		.section	.text.Volume_ADC_SetGain,"ax",%progbits
 1439              		.align	2
 1440              		.global	Volume_ADC_SetGain
 1441              		.thumb
 1442              		.thumb_func
 1443              		.type	Volume_ADC_SetGain, %function
 1444              	Volume_ADC_SetGain:
 1445              	.LFB15:
 934:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_CountsPerVolt = adcGain;
 1446              		.loc 1 934 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 0
 1449              		@ frame_needed = 0, uses_anonymous_args = 0
 1450              		@ link register save eliminated.
 1451              	.LVL126:
 935:Generated_Source\PSoC5/Volume_ADC.c **** }
 1452              		.loc 1 935 0
 1453 0000 014B     		ldr	r3, .L100
 1454 0002 1860     		str	r0, [r3]
 1455 0004 7047     		bx	lr
 1456              	.L101:
 1457 0006 00BF     		.align	2
 1458              	.L100:
 1459 0008 00000000 		.word	Volume_ADC_CountsPerVolt
 1460              		.cfi_endproc
 1461              	.LFE15:
 1462              		.size	Volume_ADC_SetGain, .-Volume_ADC_SetGain
 1463              		.section	.text.Volume_ADC_CountsTo_mVolts,"ax",%progbits
 1464              		.align	2
 1465              		.global	Volume_ADC_CountsTo_mVolts
 1466              		.thumb
 1467              		.thumb_func
 1468              		.type	Volume_ADC_CountsTo_mVolts, %function
 1469              	Volume_ADC_CountsTo_mVolts:
 1470              	.LFB16:
 961:Generated_Source\PSoC5/Volume_ADC.c **** 
 1471              		.loc 1 961 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476              	.LVL127:
 992:Generated_Source\PSoC5/Volume_ADC.c **** 
 1477              		.loc 1 992 0
 1478 0000 064B     		ldr	r3, .L103
 1479 0002 1B68     		ldr	r3, [r3]
 1480 0004 C01A     		subs	r0, r0, r3
 1481              	.LVL128:
 994:Generated_Source\PSoC5/Volume_ADC.c **** 
 1482              		.loc 1 994 0
 1483 0006 4FF47A73 		mov	r3, #1000
 1484 000a 03FB00F0 		mul	r0, r3, r0
 1485              	.LVL129:
 1486 000e 044B     		ldr	r3, .L103+4
 1487 0010 1B68     		ldr	r3, [r3]
 1488 0012 90FBF3F0 		sdiv	r0, r0, r3
 1489              	.LVL130:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 61


 997:Generated_Source\PSoC5/Volume_ADC.c **** 
 1490              		.loc 1 997 0
 1491 0016 00B2     		sxth	r0, r0
 1492 0018 7047     		bx	lr
 1493              	.L104:
 1494 001a 00BF     		.align	2
 1495              	.L103:
 1496 001c 00000000 		.word	Volume_ADC_Offset
 1497 0020 00000000 		.word	Volume_ADC_CountsPerVolt
 1498              		.cfi_endproc
 1499              	.LFE16:
 1500              		.size	Volume_ADC_CountsTo_mVolts, .-Volume_ADC_CountsTo_mVolts
 1501              		.global	__aeabi_i2f
 1502              		.global	__aeabi_fdiv
 1503              		.section	.text.Volume_ADC_CountsTo_Volts,"ax",%progbits
 1504              		.align	2
 1505              		.global	Volume_ADC_CountsTo_Volts
 1506              		.thumb
 1507              		.thumb_func
 1508              		.type	Volume_ADC_CountsTo_Volts, %function
 1509              	Volume_ADC_CountsTo_Volts:
 1510              	.LFB17:
1022:Generated_Source\PSoC5/Volume_ADC.c **** 
 1511              		.loc 1 1022 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              	.LVL131:
 1516 0000 10B5     		push	{r4, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 4, -8
 1519              		.cfi_offset 14, -4
1053:Generated_Source\PSoC5/Volume_ADC.c **** 
 1520              		.loc 1 1053 0
 1521 0002 074B     		ldr	r3, .L107
 1522 0004 1B68     		ldr	r3, [r3]
 1523              	.LVL132:
1055:Generated_Source\PSoC5/Volume_ADC.c **** 
 1524              		.loc 1 1055 0
 1525 0006 C01A     		subs	r0, r0, r3
 1526              	.LVL133:
 1527 0008 FFF7FEFF 		bl	__aeabi_i2f
 1528              	.LVL134:
 1529 000c 0446     		mov	r4, r0
 1530 000e 054B     		ldr	r3, .L107+4
 1531 0010 1868     		ldr	r0, [r3]
 1532 0012 FFF7FEFF 		bl	__aeabi_i2f
 1533              	.LVL135:
 1534 0016 0146     		mov	r1, r0
 1535 0018 2046     		mov	r0, r4
 1536 001a FFF7FEFF 		bl	__aeabi_fdiv
 1537              	.LVL136:
1058:Generated_Source\PSoC5/Volume_ADC.c **** 
 1538              		.loc 1 1058 0
 1539 001e 10BD     		pop	{r4, pc}
 1540              	.L108:
 1541              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 62


 1542              	.L107:
 1543 0020 00000000 		.word	Volume_ADC_Offset
 1544 0024 00000000 		.word	Volume_ADC_CountsPerVolt
 1545              		.cfi_endproc
 1546              	.LFE17:
 1547              		.size	Volume_ADC_CountsTo_Volts, .-Volume_ADC_CountsTo_Volts
 1548              		.section	.text.Volume_ADC_CountsTo_uVolts,"ax",%progbits
 1549              		.align	2
 1550              		.global	Volume_ADC_CountsTo_uVolts
 1551              		.thumb
 1552              		.thumb_func
 1553              		.type	Volume_ADC_CountsTo_uVolts, %function
 1554              	Volume_ADC_CountsTo_uVolts:
 1555              	.LFB18:
1088:Generated_Source\PSoC5/Volume_ADC.c **** 
 1556              		.loc 1 1088 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
 1559              		@ frame_needed = 0, uses_anonymous_args = 0
 1560              		@ link register save eliminated.
 1561              	.LVL137:
1097:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1562              		.loc 1 1097 0
 1563 0000 0F4B     		ldr	r3, .L112
 1564 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 0004 DBB2     		uxtb	r3, r3
 1566 0006 012B     		cmp	r3, #1
 1567 0008 06D0     		beq	.L110
1104:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1568              		.loc 1 1104 0
 1569 000a 0D4B     		ldr	r3, .L112
 1570 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1571 000e DBB2     		uxtb	r3, r3
 1572 0010 022B     		cmp	r3, #2
 1573 0012 01D0     		beq	.L110
1111:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1574              		.loc 1 1111 0
 1575 0014 0A4B     		ldr	r3, .L112
 1576 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577              	.L110:
 1578              	.LVL138:
1215:Generated_Source\PSoC5/Volume_ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * Volume_ADC_Offset) / coefB);
 1579              		.loc 1 1215 0
 1580 0018 0A4B     		ldr	r3, .L112+4
 1581 001a 1B68     		ldr	r3, [r3]
 1582 001c 002B     		cmp	r3, #0
 1583 001e 00DA     		bge	.L111
 1584 0020 1F33     		adds	r3, r3, #31
 1585              	.L111:
 1586 0022 5A11     		asrs	r2, r3, #5
 1587              	.LVL139:
1216:Generated_Source\PSoC5/Volume_ADC.c **** 
 1588              		.loc 1 1216 0
 1589 0024 47F61223 		movw	r3, #31250
 1590 0028 03FB00F0 		mul	r0, r3, r0
 1591              	.LVL140:
 1592 002c 90FBF2F0 		sdiv	r0, r0, r2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 63


 1593 0030 0549     		ldr	r1, .L112+8
 1594 0032 0968     		ldr	r1, [r1]
 1595 0034 03FB01F3 		mul	r3, r3, r1
 1596 0038 93FBF2F3 		sdiv	r3, r3, r2
 1597              	.LVL141:
1219:Generated_Source\PSoC5/Volume_ADC.c **** 
 1598              		.loc 1 1219 0
 1599 003c C01A     		subs	r0, r0, r3
 1600              	.LVL142:
 1601 003e 7047     		bx	lr
 1602              	.L113:
 1603              		.align	2
 1604              	.L112:
 1605 0040 00000000 		.word	.LANCHOR1
 1606 0044 00000000 		.word	Volume_ADC_CountsPerVolt
 1607 0048 00000000 		.word	Volume_ADC_Offset
 1608              		.cfi_endproc
 1609              	.LFE18:
 1610              		.size	Volume_ADC_CountsTo_uVolts, .-Volume_ADC_CountsTo_uVolts
 1611              		.section	.text.Volume_ADC_SelectConfiguration,"ax",%progbits
 1612              		.align	2
 1613              		.global	Volume_ADC_SelectConfiguration
 1614              		.thumb
 1615              		.thumb_func
 1616              		.type	Volume_ADC_SelectConfiguration, %function
 1617              	Volume_ADC_SelectConfiguration:
 1618              	.LFB20:
1554:Generated_Source\PSoC5/Volume_ADC.c ****     /* Check whether the configuration number is valid or not */
 1619              		.loc 1 1554 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 1623              	.LVL143:
 1624 0000 38B5     		push	{r3, r4, r5, lr}
 1625              		.cfi_def_cfa_offset 16
 1626              		.cfi_offset 3, -16
 1627              		.cfi_offset 4, -12
 1628              		.cfi_offset 5, -8
 1629              		.cfi_offset 14, -4
 1630 0002 0446     		mov	r4, r0
1556:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1631              		.loc 1 1556 0
 1632 0004 0128     		cmp	r0, #1
 1633 0006 1FD1     		bne	.L115
 1634 0008 0D46     		mov	r5, r1
1561:Generated_Source\PSoC5/Volume_ADC.c ****         {
 1635              		.loc 1 1561 0
 1636 000a 114B     		ldr	r3, .L119
 1637 000c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1638 000e 13B9     		cbnz	r3, .L116
1563:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1639              		.loc 1 1563 0
 1640 0010 0122     		movs	r2, #1
 1641 0012 0F4B     		ldr	r3, .L119
 1642 0014 DA71     		strb	r2, [r3, #7]
 1643              	.L116:
1567:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 64


 1644              		.loc 1 1567 0
 1645 0016 0F4B     		ldr	r3, .L119+4
 1646 0018 1C70     		strb	r4, [r3]
1570:Generated_Source\PSoC5/Volume_ADC.c **** 
 1647              		.loc 1 1570 0
 1648 001a FFF7FEFF 		bl	Volume_ADC_Stop
 1649              	.LVL144:
1573:Generated_Source\PSoC5/Volume_ADC.c **** 
 1650              		.loc 1 1573 0
 1651 001e 2046     		mov	r0, r4
 1652 0020 FFF7FEFF 		bl	Volume_ADC_InitConfig
 1653              	.LVL145:
1576:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[config - 1u].gcor);
 1654              		.loc 1 1576 0
 1655 0024 013C     		subs	r4, r4, #1
 1656 0026 0A4B     		ldr	r3, .L119
 1657 0028 03EB8402 		add	r2, r3, r4, lsl #2
 1658 002c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1659 002e 0A4A     		ldr	r2, .L119+8
 1660 0030 1170     		strb	r1, [r2]
1577:Generated_Source\PSoC5/Volume_ADC.c **** 
 1661              		.loc 1 1577 0
 1662 0032 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 1663 0036 094B     		ldr	r3, .L119+12
 1664 0038 1A80     		strh	r2, [r3]	@ movhi
1579:Generated_Source\PSoC5/Volume_ADC.c ****         {
 1665              		.loc 1 1579 0
 1666 003a 012D     		cmp	r5, #1
 1667 003c 07D1     		bne	.L114
1582:Generated_Source\PSoC5/Volume_ADC.c **** 
 1668              		.loc 1 1582 0
 1669 003e FFF7FEFF 		bl	Volume_ADC_Start
 1670              	.LVL146:
1585:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1671              		.loc 1 1585 0
 1672 0042 FFF7FEFF 		bl	Volume_ADC_StartConvert
 1673              	.LVL147:
 1674 0046 38BD     		pop	{r3, r4, r5, pc}
 1675              	.LVL148:
 1676              	.L115:
1591:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1677              		.loc 1 1591 0 discriminator 1
 1678 0048 0020     		movs	r0, #0
 1679              	.LVL149:
 1680 004a FFF7FEFF 		bl	CyHalt
 1681              	.LVL150:
 1682              	.L114:
 1683 004e 38BD     		pop	{r3, r4, r5, pc}
 1684              	.L120:
 1685              		.align	2
 1686              	.L119:
 1687 0050 00000000 		.word	.LANCHOR0
 1688 0054 00000000 		.word	.LANCHOR1
 1689 0058 0E4E0040 		.word	1073761806
 1690 005c 0C4E0040 		.word	1073761804
 1691              		.cfi_endproc
 1692              	.LFE20:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 65


 1693              		.size	Volume_ADC_SelectConfiguration, .-Volume_ADC_SelectConfiguration
 1694              		.section	.text.Volume_ADC_Read8,"ax",%progbits
 1695              		.align	2
 1696              		.global	Volume_ADC_Read8
 1697              		.thumb
 1698              		.thumb_func
 1699              		.type	Volume_ADC_Read8, %function
 1700              	Volume_ADC_Read8:
 1701              	.LFB23:
1741:Generated_Source\PSoC5/Volume_ADC.c **** }
1742:Generated_Source\PSoC5/Volume_ADC.c **** 
1743:Generated_Source\PSoC5/Volume_ADC.c **** 
1744:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1745:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Read8
1746:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1747:Generated_Source\PSoC5/Volume_ADC.c **** *
1748:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1749:Generated_Source\PSoC5/Volume_ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:Generated_Source\PSoC5/Volume_ADC.c **** *  single reading is required. When called, it will start ADC
1751:Generated_Source\PSoC5/Volume_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:Generated_Source\PSoC5/Volume_ADC.c **** *  not return until the result is ready.
1754:Generated_Source\PSoC5/Volume_ADC.c **** *
1755:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1756:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1757:Generated_Source\PSoC5/Volume_ADC.c **** *
1758:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1759:Generated_Source\PSoC5/Volume_ADC.c **** *  int8:  ADC result.
1760:Generated_Source\PSoC5/Volume_ADC.c **** *
1761:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1762:Generated_Source\PSoC5/Volume_ADC.c **** int8 Volume_ADC_Read8(void) 
1763:Generated_Source\PSoC5/Volume_ADC.c **** {
 1702              		.loc 1 1763 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
 1706 0000 10B5     		push	{r4, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 4, -8
 1709              		.cfi_offset 14, -4
1764:Generated_Source\PSoC5/Volume_ADC.c ****     int8 result;
1765:Generated_Source\PSoC5/Volume_ADC.c **** 
1766:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear pending conversion done status */
1767:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |= Volume_ADC_DEC_INTR_CLEAR;
 1710              		.loc 1 1767 0
 1711 0002 084A     		ldr	r2, .L123
 1712 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1713 0006 43F00403 		orr	r3, r3, #4
 1714 000a 1370     		strb	r3, [r2]
1768:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StartConvert();
 1715              		.loc 1 1768 0
 1716 000c FFF7FEFF 		bl	Volume_ADC_StartConvert
 1717              	.LVL151:
1769:Generated_Source\PSoC5/Volume_ADC.c ****     (void)Volume_ADC_IsEndConversion(Volume_ADC_WAIT_FOR_RESULT);
 1718              		.loc 1 1769 0
 1719 0010 0020     		movs	r0, #0
 1720 0012 FFF7FEFF 		bl	Volume_ADC_IsEndConversion
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 66


 1721              	.LVL152:
1770:Generated_Source\PSoC5/Volume_ADC.c ****      result = Volume_ADC_GetResult8();
 1722              		.loc 1 1770 0
 1723 0016 FFF7FEFF 		bl	Volume_ADC_GetResult8
 1724              	.LVL153:
 1725 001a 0446     		mov	r4, r0
 1726              	.LVL154:
1771:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StopConvert();
 1727              		.loc 1 1771 0
 1728 001c FFF7FEFF 		bl	Volume_ADC_StopConvert
 1729              	.LVL155:
1772:Generated_Source\PSoC5/Volume_ADC.c ****     
1773:Generated_Source\PSoC5/Volume_ADC.c ****      return(result);
1774:Generated_Source\PSoC5/Volume_ADC.c **** }
 1730              		.loc 1 1774 0
 1731 0020 2046     		mov	r0, r4
 1732 0022 10BD     		pop	{r4, pc}
 1733              	.LVL156:
 1734              	.L124:
 1735              		.align	2
 1736              	.L123:
 1737 0024 014E0040 		.word	1073761793
 1738              		.cfi_endproc
 1739              	.LFE23:
 1740              		.size	Volume_ADC_Read8, .-Volume_ADC_Read8
 1741              		.section	.text.Volume_ADC_Read16,"ax",%progbits
 1742              		.align	2
 1743              		.global	Volume_ADC_Read16
 1744              		.thumb
 1745              		.thumb_func
 1746              		.type	Volume_ADC_Read16, %function
 1747              	Volume_ADC_Read16:
 1748              	.LFB24:
1775:Generated_Source\PSoC5/Volume_ADC.c **** 
1776:Generated_Source\PSoC5/Volume_ADC.c **** 
1777:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1778:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Read16
1779:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1780:Generated_Source\PSoC5/Volume_ADC.c **** *
1781:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1782:Generated_Source\PSoC5/Volume_ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:Generated_Source\PSoC5/Volume_ADC.c **** *  single reading is required. When called, it will start ADC
1784:Generated_Source\PSoC5/Volume_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:Generated_Source\PSoC5/Volume_ADC.c **** *  not return until the result is ready.
1787:Generated_Source\PSoC5/Volume_ADC.c **** *
1788:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1789:Generated_Source\PSoC5/Volume_ADC.c **** *   void
1790:Generated_Source\PSoC5/Volume_ADC.c **** *
1791:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1792:Generated_Source\PSoC5/Volume_ADC.c **** *  int16:  ADC result.
1793:Generated_Source\PSoC5/Volume_ADC.c **** *
1794:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1795:Generated_Source\PSoC5/Volume_ADC.c **** int16 Volume_ADC_Read16(void) 
1796:Generated_Source\PSoC5/Volume_ADC.c **** {
 1749              		.loc 1 1796 0
 1750              		.cfi_startproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 67


 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753 0000 10B5     		push	{r4, lr}
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 4, -8
 1756              		.cfi_offset 14, -4
1797:Generated_Source\PSoC5/Volume_ADC.c ****     int16 result;
1798:Generated_Source\PSoC5/Volume_ADC.c **** 
1799:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear pending conversion done status */
1800:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |= Volume_ADC_DEC_INTR_CLEAR;
 1757              		.loc 1 1800 0
 1758 0002 084A     		ldr	r2, .L127
 1759 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1760 0006 43F00403 		orr	r3, r3, #4
 1761 000a 1370     		strb	r3, [r2]
1801:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StartConvert();
 1762              		.loc 1 1801 0
 1763 000c FFF7FEFF 		bl	Volume_ADC_StartConvert
 1764              	.LVL157:
1802:Generated_Source\PSoC5/Volume_ADC.c ****     (void)Volume_ADC_IsEndConversion(Volume_ADC_WAIT_FOR_RESULT);
 1765              		.loc 1 1802 0
 1766 0010 0020     		movs	r0, #0
 1767 0012 FFF7FEFF 		bl	Volume_ADC_IsEndConversion
 1768              	.LVL158:
1803:Generated_Source\PSoC5/Volume_ADC.c ****      result = Volume_ADC_GetResult16();
 1769              		.loc 1 1803 0
 1770 0016 FFF7FEFF 		bl	Volume_ADC_GetResult16
 1771              	.LVL159:
 1772 001a 0446     		mov	r4, r0
 1773              	.LVL160:
1804:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StopConvert();
 1774              		.loc 1 1804 0
 1775 001c FFF7FEFF 		bl	Volume_ADC_StopConvert
 1776              	.LVL161:
1805:Generated_Source\PSoC5/Volume_ADC.c ****     
1806:Generated_Source\PSoC5/Volume_ADC.c ****      return(result);
1807:Generated_Source\PSoC5/Volume_ADC.c **** }
 1777              		.loc 1 1807 0
 1778 0020 2046     		mov	r0, r4
 1779 0022 10BD     		pop	{r4, pc}
 1780              	.LVL162:
 1781              	.L128:
 1782              		.align	2
 1783              	.L127:
 1784 0024 014E0040 		.word	1073761793
 1785              		.cfi_endproc
 1786              	.LFE24:
 1787              		.size	Volume_ADC_Read16, .-Volume_ADC_Read16
 1788              		.section	.text.Volume_ADC_Read32,"ax",%progbits
 1789              		.align	2
 1790              		.global	Volume_ADC_Read32
 1791              		.thumb
 1792              		.thumb_func
 1793              		.type	Volume_ADC_Read32, %function
 1794              	Volume_ADC_Read32:
 1795              	.LFB25:
1808:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 68


1809:Generated_Source\PSoC5/Volume_ADC.c **** 
1810:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1811:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Read32
1812:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1813:Generated_Source\PSoC5/Volume_ADC.c **** *
1814:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1815:Generated_Source\PSoC5/Volume_ADC.c **** *  This function simplifies getting results from the ADC when only a
1816:Generated_Source\PSoC5/Volume_ADC.c **** *  single reading is required. When called, it will start ADC
1817:Generated_Source\PSoC5/Volume_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:Generated_Source\PSoC5/Volume_ADC.c **** *  not return until the result is ready.
1820:Generated_Source\PSoC5/Volume_ADC.c **** *
1821:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1822:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1823:Generated_Source\PSoC5/Volume_ADC.c **** *
1824:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1825:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: ADC result.
1826:Generated_Source\PSoC5/Volume_ADC.c **** *
1827:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1828:Generated_Source\PSoC5/Volume_ADC.c **** int32 Volume_ADC_Read32(void) 
1829:Generated_Source\PSoC5/Volume_ADC.c **** {
 1796              		.loc 1 1829 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800 0000 10B5     		push	{r4, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 4, -8
 1803              		.cfi_offset 14, -4
1830:Generated_Source\PSoC5/Volume_ADC.c ****     int32 result;
1831:Generated_Source\PSoC5/Volume_ADC.c ****     
1832:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear pending conversion done status */
1833:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |= Volume_ADC_DEC_INTR_CLEAR;
 1804              		.loc 1 1833 0
 1805 0002 084A     		ldr	r2, .L131
 1806 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1807 0006 43F00403 		orr	r3, r3, #4
 1808 000a 1370     		strb	r3, [r2]
1834:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StartConvert();
 1809              		.loc 1 1834 0
 1810 000c FFF7FEFF 		bl	Volume_ADC_StartConvert
 1811              	.LVL163:
1835:Generated_Source\PSoC5/Volume_ADC.c ****     (void)Volume_ADC_IsEndConversion(Volume_ADC_WAIT_FOR_RESULT);
 1812              		.loc 1 1835 0
 1813 0010 0020     		movs	r0, #0
 1814 0012 FFF7FEFF 		bl	Volume_ADC_IsEndConversion
 1815              	.LVL164:
1836:Generated_Source\PSoC5/Volume_ADC.c ****      result = Volume_ADC_GetResult32();
 1816              		.loc 1 1836 0
 1817 0016 FFF7FEFF 		bl	Volume_ADC_GetResult32
 1818              	.LVL165:
 1819 001a 0446     		mov	r4, r0
 1820              	.LVL166:
1837:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StopConvert();
 1821              		.loc 1 1837 0
 1822 001c FFF7FEFF 		bl	Volume_ADC_StopConvert
 1823              	.LVL167:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 69


1838:Generated_Source\PSoC5/Volume_ADC.c ****     
1839:Generated_Source\PSoC5/Volume_ADC.c ****      return(result);
1840:Generated_Source\PSoC5/Volume_ADC.c **** }
 1824              		.loc 1 1840 0
 1825 0020 2046     		mov	r0, r4
 1826 0022 10BD     		pop	{r4, pc}
 1827              	.LVL168:
 1828              	.L132:
 1829              		.align	2
 1830              	.L131:
 1831 0024 014E0040 		.word	1073761793
 1832              		.cfi_endproc
 1833              	.LFE25:
 1834              		.size	Volume_ADC_Read32, .-Volume_ADC_Read32
 1835              		.comm	Volume_ADC_CountsPerVolt,4,4
 1836              		.comm	Volume_ADC_Offset,4,4
 1837              		.global	Volume_ADC_Config
 1838              		.global	Volume_ADC_started
 1839              		.global	Volume_ADC_initVar
 1840              		.global	Volume_ADC_stopConversion
 1841              		.global	Volume_ADC_convDone
 1842              		.data
 1843              		.set	.LANCHOR1,. + 0
 1844              		.type	Volume_ADC_Config, %object
 1845              		.size	Volume_ADC_Config, 1
 1846              	Volume_ADC_Config:
 1847 0000 01       		.byte	1
 1848              		.bss
 1849              		.align	2
 1850              		.set	.LANCHOR0,. + 0
 1851              		.type	Volume_ADC_gcor, %object
 1852              		.size	Volume_ADC_gcor, 4
 1853              	Volume_ADC_gcor:
 1854 0000 00000000 		.space	4
 1855              		.type	Volume_ADC_stopConversion, %object
 1856              		.size	Volume_ADC_stopConversion, 1
 1857              	Volume_ADC_stopConversion:
 1858 0004 00       		.space	1
 1859              		.type	Volume_ADC_convDone, %object
 1860              		.size	Volume_ADC_convDone, 1
 1861              	Volume_ADC_convDone:
 1862 0005 00       		.space	1
 1863              		.type	Volume_ADC_initVar, %object
 1864              		.size	Volume_ADC_initVar, 1
 1865              	Volume_ADC_initVar:
 1866 0006 00       		.space	1
 1867              		.type	Volume_ADC_started, %object
 1868              		.size	Volume_ADC_started, 1
 1869              	Volume_ADC_started:
 1870 0007 00       		.space	1
 1871              		.text
 1872              	.Letext0:
 1873              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1874              		.file 3 "Generated_Source\\PSoC5\\Volume_ADC.h"
 1875              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 1876              		.file 5 "Generated_Source\\PSoC5\\Volume_ADC_AMux.h"
 1877              		.file 6 "Generated_Source\\PSoC5\\Volume_ADC_Ext_CP_Clk.h"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 70


 1878              		.file 7 "Generated_Source\\PSoC5\\Volume_ADC_theACLK.h"
 1879              		.section	.debug_info,"",%progbits
 1880              	.Ldebug_info0:
 1881 0000 710A0000 		.4byte	0xa71
 1882 0004 0400     		.2byte	0x4
 1883 0006 00000000 		.4byte	.Ldebug_abbrev0
 1884 000a 04       		.byte	0x4
 1885 000b 01       		.uleb128 0x1
 1886 000c F7050000 		.4byte	.LASF98
 1887 0010 01       		.byte	0x1
 1888 0011 00000000 		.4byte	.LASF99
 1889 0015 FB000000 		.4byte	.LASF100
 1890 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1891 001d 00000000 		.4byte	0
 1892 0021 00000000 		.4byte	.Ldebug_line0
 1893 0025 02       		.uleb128 0x2
 1894 0026 04       		.byte	0x4
 1895 0027 04       		.byte	0x4
 1896 0028 E3030000 		.4byte	.LASF0
 1897 002c 02       		.uleb128 0x2
 1898 002d 01       		.byte	0x1
 1899 002e 06       		.byte	0x6
 1900 002f EF000000 		.4byte	.LASF1
 1901 0033 02       		.uleb128 0x2
 1902 0034 01       		.byte	0x1
 1903 0035 08       		.byte	0x8
 1904 0036 5B040000 		.4byte	.LASF2
 1905 003a 02       		.uleb128 0x2
 1906 003b 02       		.byte	0x2
 1907 003c 05       		.byte	0x5
 1908 003d 7B040000 		.4byte	.LASF3
 1909 0041 02       		.uleb128 0x2
 1910 0042 02       		.byte	0x2
 1911 0043 07       		.byte	0x7
 1912 0044 89020000 		.4byte	.LASF4
 1913 0048 02       		.uleb128 0x2
 1914 0049 04       		.byte	0x4
 1915 004a 05       		.byte	0x5
 1916 004b 74010000 		.4byte	.LASF5
 1917 004f 02       		.uleb128 0x2
 1918 0050 04       		.byte	0x4
 1919 0051 07       		.byte	0x7
 1920 0052 3D020000 		.4byte	.LASF6
 1921 0056 02       		.uleb128 0x2
 1922 0057 08       		.byte	0x8
 1923 0058 05       		.byte	0x5
 1924 0059 E1000000 		.4byte	.LASF7
 1925 005d 02       		.uleb128 0x2
 1926 005e 08       		.byte	0x8
 1927 005f 07       		.byte	0x7
 1928 0060 BA000000 		.4byte	.LASF8
 1929 0064 03       		.uleb128 0x3
 1930 0065 04       		.byte	0x4
 1931 0066 05       		.byte	0x5
 1932 0067 696E7400 		.ascii	"int\000"
 1933 006b 02       		.uleb128 0x2
 1934 006c 04       		.byte	0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 71


 1935 006d 07       		.byte	0x7
 1936 006e 29020000 		.4byte	.LASF9
 1937 0072 04       		.uleb128 0x4
 1938 0073 AD010000 		.4byte	.LASF10
 1939 0077 02       		.byte	0x2
 1940 0078 9201     		.2byte	0x192
 1941 007a 33000000 		.4byte	0x33
 1942 007e 04       		.uleb128 0x4
 1943 007f 24000000 		.4byte	.LASF11
 1944 0083 02       		.byte	0x2
 1945 0084 9301     		.2byte	0x193
 1946 0086 41000000 		.4byte	0x41
 1947 008a 04       		.uleb128 0x4
 1948 008b F5010000 		.4byte	.LASF12
 1949 008f 02       		.byte	0x2
 1950 0090 9401     		.2byte	0x194
 1951 0092 4F000000 		.4byte	0x4f
 1952 0096 04       		.uleb128 0x4
 1953 0097 9C020000 		.4byte	.LASF13
 1954 009b 02       		.byte	0x2
 1955 009c 9501     		.2byte	0x195
 1956 009e 2C000000 		.4byte	0x2c
 1957 00a2 04       		.uleb128 0x4
 1958 00a3 BB060000 		.4byte	.LASF14
 1959 00a7 02       		.byte	0x2
 1960 00a8 9601     		.2byte	0x196
 1961 00aa 3A000000 		.4byte	0x3a
 1962 00ae 04       		.uleb128 0x4
 1963 00af 53010000 		.4byte	.LASF15
 1964 00b3 02       		.byte	0x2
 1965 00b4 9701     		.2byte	0x197
 1966 00b6 48000000 		.4byte	0x48
 1967 00ba 04       		.uleb128 0x4
 1968 00bb 28030000 		.4byte	.LASF16
 1969 00bf 02       		.byte	0x2
 1970 00c0 9801     		.2byte	0x198
 1971 00c2 25000000 		.4byte	0x25
 1972 00c6 02       		.uleb128 0x2
 1973 00c7 08       		.byte	0x8
 1974 00c8 04       		.byte	0x4
 1975 00c9 BD010000 		.4byte	.LASF17
 1976 00cd 02       		.uleb128 0x2
 1977 00ce 01       		.byte	0x1
 1978 00cf 08       		.byte	0x8
 1979 00d0 2E050000 		.4byte	.LASF18
 1980 00d4 04       		.uleb128 0x4
 1981 00d5 11040000 		.4byte	.LASF19
 1982 00d9 02       		.byte	0x2
 1983 00da 3C02     		.2byte	0x23c
 1984 00dc E0000000 		.4byte	0xe0
 1985 00e0 05       		.uleb128 0x5
 1986 00e1 72000000 		.4byte	0x72
 1987 00e5 04       		.uleb128 0x4
 1988 00e6 A7010000 		.4byte	.LASF20
 1989 00ea 02       		.byte	0x2
 1990 00eb 3D02     		.2byte	0x23d
 1991 00ed F1000000 		.4byte	0xf1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 72


 1992 00f1 05       		.uleb128 0x5
 1993 00f2 7E000000 		.4byte	0x7e
 1994 00f6 04       		.uleb128 0x4
 1995 00f7 EC020000 		.4byte	.LASF21
 1996 00fb 02       		.byte	0x2
 1997 00fc 3E02     		.2byte	0x23e
 1998 00fe 02010000 		.4byte	0x102
 1999 0102 05       		.uleb128 0x5
 2000 0103 8A000000 		.4byte	0x8a
 2001 0107 04       		.uleb128 0x4
 2002 0108 3A050000 		.4byte	.LASF22
 2003 010c 02       		.byte	0x2
 2004 010d 4E02     		.2byte	0x24e
 2005 010f 13010000 		.4byte	0x113
 2006 0113 06       		.uleb128 0x6
 2007 0114 04       		.byte	0x4
 2008 0115 19010000 		.4byte	0x119
 2009 0119 07       		.uleb128 0x7
 2010 011a 02       		.uleb128 0x2
 2011 011b 04       		.byte	0x4
 2012 011c 07       		.byte	0x7
 2013 011d 30030000 		.4byte	.LASF23
 2014 0121 08       		.uleb128 0x8
 2015 0122 04       		.byte	0x4
 2016 0123 03       		.byte	0x3
 2017 0124 2F       		.byte	0x2f
 2018 0125 42010000 		.4byte	0x142
 2019 0129 09       		.uleb128 0x9
 2020 012a A1000000 		.4byte	.LASF24
 2021 012e 03       		.byte	0x3
 2022 012f 31       		.byte	0x31
 2023 0130 7E000000 		.4byte	0x7e
 2024 0134 00       		.byte	0
 2025 0135 09       		.uleb128 0x9
 2026 0136 4E050000 		.4byte	.LASF25
 2027 013a 03       		.byte	0x3
 2028 013b 32       		.byte	0x32
 2029 013c 72000000 		.4byte	0x72
 2030 0140 02       		.byte	0x2
 2031 0141 00       		.byte	0
 2032 0142 0A       		.uleb128 0xa
 2033 0143 5C030000 		.4byte	.LASF26
 2034 0147 03       		.byte	0x3
 2035 0148 33       		.byte	0x33
 2036 0149 21010000 		.4byte	0x121
 2037 014d 0B       		.uleb128 0xb
 2038 014e 85000000 		.4byte	.LASF36
 2039 0152 01       		.byte	0x1
 2040 0153 5106     		.2byte	0x651
 2041 0155 00000000 		.4byte	.LFB21
 2042 0159 CC000000 		.4byte	.LFE21-.LFB21
 2043 015d 01       		.uleb128 0x1
 2044 015e 9C       		.byte	0x9c
 2045 015f 03020000 		.4byte	0x203
 2046 0163 0C       		.uleb128 0xc
 2047 0164 7A000000 		.4byte	.LASF27
 2048 0168 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 73


 2049 0169 5106     		.2byte	0x651
 2050 016b 72000000 		.4byte	0x72
 2051 016f 00000000 		.4byte	.LLST0
 2052 0173 0C       		.uleb128 0xc
 2053 0174 16040000 		.4byte	.LASF28
 2054 0178 01       		.byte	0x1
 2055 0179 5106     		.2byte	0x651
 2056 017b 7E000000 		.4byte	0x7e
 2057 017f 3A000000 		.4byte	.LLST1
 2058 0183 0C       		.uleb128 0xc
 2059 0184 D1000000 		.4byte	.LASF29
 2060 0188 01       		.byte	0x1
 2061 0189 5106     		.2byte	0x651
 2062 018b 7E000000 		.4byte	0x7e
 2063 018f 74000000 		.4byte	.LLST2
 2064 0193 0C       		.uleb128 0xc
 2065 0194 BF040000 		.4byte	.LASF30
 2066 0198 01       		.byte	0x1
 2067 0199 5206     		.2byte	0x652
 2068 019b 72000000 		.4byte	0x72
 2069 019f AE000000 		.4byte	.LLST3
 2070 01a3 0C       		.uleb128 0xc
 2071 01a4 47050000 		.4byte	.LASF31
 2072 01a8 01       		.byte	0x1
 2073 01a9 5206     		.2byte	0x652
 2074 01ab 72000000 		.4byte	0x72
 2075 01af 01010000 		.4byte	.LLST4
 2076 01b3 0D       		.uleb128 0xd
 2077 01b4 E6020000 		.4byte	.LASF32
 2078 01b8 01       		.byte	0x1
 2079 01b9 5406     		.2byte	0x654
 2080 01bb 96000000 		.4byte	0x96
 2081 01bf 2D010000 		.4byte	.LLST5
 2082 01c3 0D       		.uleb128 0xd
 2083 01c4 23040000 		.4byte	.LASF33
 2084 01c8 01       		.byte	0x1
 2085 01c9 5506     		.2byte	0x655
 2086 01cb AE000000 		.4byte	0xae
 2087 01cf 98010000 		.4byte	.LLST6
 2088 01d3 0D       		.uleb128 0xd
 2089 01d4 A1020000 		.4byte	.LASF34
 2090 01d8 01       		.byte	0x1
 2091 01d9 5606     		.2byte	0x656
 2092 01db 7E000000 		.4byte	0x7e
 2093 01df AB010000 		.4byte	.LLST7
 2094 01e3 0D       		.uleb128 0xd
 2095 01e4 85040000 		.4byte	.LASF35
 2096 01e8 01       		.byte	0x1
 2097 01e9 5706     		.2byte	0x657
 2098 01eb 8A000000 		.4byte	0x8a
 2099 01ef D4010000 		.4byte	.LLST8
 2100 01f3 0E       		.uleb128 0xe
 2101 01f4 A6000000 		.4byte	.LVL31
 2102 01f8 AB090000 		.4byte	0x9ab
 2103 01fc 0F       		.uleb128 0xf
 2104 01fd 01       		.uleb128 0x1
 2105 01fe 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 74


 2106 01ff 01       		.uleb128 0x1
 2107 0200 30       		.byte	0x30
 2108 0201 00       		.byte	0
 2109 0202 00       		.byte	0
 2110 0203 0B       		.uleb128 0xb
 2111 0204 C6050000 		.4byte	.LASF37
 2112 0208 01       		.byte	0x1
 2113 0209 BC06     		.2byte	0x6bc
 2114 020b 00000000 		.4byte	.LFB22
 2115 020f 4C000000 		.4byte	.LFE22-.LFB22
 2116 0213 01       		.uleb128 0x1
 2117 0214 9C       		.byte	0x9c
 2118 0215 66020000 		.4byte	0x266
 2119 0219 0C       		.uleb128 0xc
 2120 021a 0B020000 		.4byte	.LASF38
 2121 021e 01       		.byte	0x1
 2122 021f BC06     		.2byte	0x6bc
 2123 0221 72000000 		.4byte	0x72
 2124 0225 E7010000 		.4byte	.LLST9
 2125 0229 0D       		.uleb128 0xd
 2126 022a DF050000 		.4byte	.LASF39
 2127 022e 01       		.byte	0x1
 2128 022f BE06     		.2byte	0x6be
 2129 0231 72000000 		.4byte	0x72
 2130 0235 08020000 		.4byte	.LLST10
 2131 0239 10       		.uleb128 0x10
 2132 023a 08000000 		.4byte	.LVL34
 2133 023e BC090000 		.4byte	0x9bc
 2134 0242 11       		.uleb128 0x11
 2135 0243 28000000 		.4byte	.LVL36
 2136 0247 C7090000 		.4byte	0x9c7
 2137 024b 55020000 		.4byte	0x255
 2138 024f 0F       		.uleb128 0xf
 2139 0250 01       		.uleb128 0x1
 2140 0251 50       		.byte	0x50
 2141 0252 01       		.uleb128 0x1
 2142 0253 33       		.byte	0x33
 2143 0254 00       		.byte	0
 2144 0255 0E       		.uleb128 0xe
 2145 0256 3E000000 		.4byte	.LVL37
 2146 025a D8090000 		.4byte	0x9d8
 2147 025e 0F       		.uleb128 0xf
 2148 025f 01       		.uleb128 0x1
 2149 0260 50       		.byte	0x50
 2150 0261 02       		.uleb128 0x2
 2151 0262 76       		.byte	0x76
 2152 0263 00       		.sleb128 0
 2153 0264 00       		.byte	0
 2154 0265 00       		.byte	0
 2155 0266 0B       		.uleb128 0xb
 2156 0267 2B000000 		.4byte	.LASF40
 2157 026b 01       		.byte	0x1
 2158 026c DA04     		.2byte	0x4da
 2159 026e 00000000 		.4byte	.LFB19
 2160 0272 E0000000 		.4byte	.LFE19-.LFB19
 2161 0276 01       		.uleb128 0x1
 2162 0277 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 75


 2163 0278 F7020000 		.4byte	0x2f7
 2164 027c 0C       		.uleb128 0xc
 2165 027d 47050000 		.4byte	.LASF31
 2166 0281 01       		.byte	0x1
 2167 0282 DA04     		.2byte	0x4da
 2168 0284 72000000 		.4byte	0x72
 2169 0288 1B020000 		.4byte	.LLST11
 2170 028c 11       		.uleb128 0x11
 2171 028d 86000000 		.4byte	.LVL41
 2172 0291 03020000 		.4byte	0x203
 2173 0295 A0020000 		.4byte	0x2a0
 2174 0299 0F       		.uleb128 0xf
 2175 029a 01       		.uleb128 0x1
 2176 029b 50       		.byte	0x50
 2177 029c 02       		.uleb128 0x2
 2178 029d 08       		.byte	0x8
 2179 029e 44       		.byte	0x44
 2180 029f 00       		.byte	0
 2181 02a0 11       		.uleb128 0x11
 2182 02a1 A8000000 		.4byte	.LVL42
 2183 02a5 E9090000 		.4byte	0x9e9
 2184 02a9 B4020000 		.4byte	0x2b4
 2185 02ad 0F       		.uleb128 0xf
 2186 02ae 01       		.uleb128 0x1
 2187 02af 50       		.byte	0x50
 2188 02b0 02       		.uleb128 0x2
 2189 02b1 74       		.byte	0x74
 2190 02b2 00       		.sleb128 0
 2191 02b3 00       		.byte	0
 2192 02b4 11       		.uleb128 0x11
 2193 02b5 B8000000 		.4byte	.LVL43
 2194 02b9 FA090000 		.4byte	0x9fa
 2195 02bd CD020000 		.4byte	0x2cd
 2196 02c1 0F       		.uleb128 0xf
 2197 02c2 01       		.uleb128 0x1
 2198 02c3 51       		.byte	0x51
 2199 02c4 02       		.uleb128 0x2
 2200 02c5 75       		.byte	0x75
 2201 02c6 00       		.sleb128 0
 2202 02c7 0F       		.uleb128 0xf
 2203 02c8 01       		.uleb128 0x1
 2204 02c9 50       		.byte	0x50
 2205 02ca 01       		.uleb128 0x1
 2206 02cb 38       		.byte	0x38
 2207 02cc 00       		.byte	0
 2208 02cd 11       		.uleb128 0x11
 2209 02ce C0000000 		.4byte	.LVL44
 2210 02d2 100A0000 		.4byte	0xa10
 2211 02d6 E7020000 		.4byte	0x2e7
 2212 02da 0F       		.uleb128 0xf
 2213 02db 01       		.uleb128 0x1
 2214 02dc 51       		.byte	0x51
 2215 02dd 02       		.uleb128 0x2
 2216 02de 75       		.byte	0x75
 2217 02df 00       		.sleb128 0
 2218 02e0 0F       		.uleb128 0xf
 2219 02e1 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 76


 2220 02e2 50       		.byte	0x50
 2221 02e3 02       		.uleb128 0x2
 2222 02e4 08       		.byte	0x8
 2223 02e5 25       		.byte	0x25
 2224 02e6 00       		.byte	0
 2225 02e7 0E       		.uleb128 0xe
 2226 02e8 C8000000 		.4byte	.LVL45
 2227 02ec 260A0000 		.4byte	0xa26
 2228 02f0 0F       		.uleb128 0xf
 2229 02f1 01       		.uleb128 0x1
 2230 02f2 50       		.byte	0x50
 2231 02f3 01       		.uleb128 0x1
 2232 02f4 4D       		.byte	0x4d
 2233 02f5 00       		.byte	0
 2234 02f6 00       		.byte	0
 2235 02f7 12       		.uleb128 0x12
 2236 02f8 4C030000 		.4byte	.LASF41
 2237 02fc 01       		.byte	0x1
 2238 02fd 5B       		.byte	0x5b
 2239 02fe 00000000 		.4byte	.LFB0
 2240 0302 C4000000 		.4byte	.LFE0-.LFB0
 2241 0306 01       		.uleb128 0x1
 2242 0307 9C       		.byte	0x9c
 2243 0308 82030000 		.4byte	0x382
 2244 030c 11       		.uleb128 0x11
 2245 030d 16000000 		.4byte	.LVL47
 2246 0311 400A0000 		.4byte	0xa40
 2247 0315 1F030000 		.4byte	0x31f
 2248 0319 0F       		.uleb128 0xf
 2249 031a 01       		.uleb128 0x1
 2250 031b 50       		.byte	0x50
 2251 031c 01       		.uleb128 0x1
 2252 031d 40       		.byte	0x40
 2253 031e 00       		.byte	0
 2254 031f 11       		.uleb128 0x11
 2255 0320 1C000000 		.4byte	.LVL48
 2256 0324 510A0000 		.4byte	0xa51
 2257 0328 32030000 		.4byte	0x332
 2258 032c 0F       		.uleb128 0xf
 2259 032d 01       		.uleb128 0x1
 2260 032e 50       		.byte	0x50
 2261 032f 01       		.uleb128 0x1
 2262 0330 40       		.byte	0x40
 2263 0331 00       		.byte	0
 2264 0332 11       		.uleb128 0x11
 2265 0333 24000000 		.4byte	.LVL49
 2266 0337 620A0000 		.4byte	0xa62
 2267 033b 4A030000 		.4byte	0x34a
 2268 033f 0F       		.uleb128 0xf
 2269 0340 01       		.uleb128 0x1
 2270 0341 51       		.byte	0x51
 2271 0342 01       		.uleb128 0x1
 2272 0343 37       		.byte	0x37
 2273 0344 0F       		.uleb128 0xf
 2274 0345 01       		.uleb128 0x1
 2275 0346 50       		.byte	0x50
 2276 0347 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 77


 2277 0348 4D       		.byte	0x4d
 2278 0349 00       		.byte	0
 2279 034a 11       		.uleb128 0x11
 2280 034b 84000000 		.4byte	.LVL50
 2281 034f 4D010000 		.4byte	0x14d
 2282 0353 78030000 		.4byte	0x378
 2283 0357 0F       		.uleb128 0xf
 2284 0358 01       		.uleb128 0x1
 2285 0359 53       		.byte	0x53
 2286 035a 01       		.uleb128 0x1
 2287 035b 40       		.byte	0x40
 2288 035c 0F       		.uleb128 0xf
 2289 035d 01       		.uleb128 0x1
 2290 035e 52       		.byte	0x52
 2291 035f 03       		.uleb128 0x3
 2292 0360 0B       		.byte	0xb
 2293 0361 0080     		.2byte	0x8000
 2294 0363 0F       		.uleb128 0xf
 2295 0364 01       		.uleb128 0x1
 2296 0365 51       		.byte	0x51
 2297 0366 03       		.uleb128 0x3
 2298 0367 0B       		.byte	0xb
 2299 0368 DA90     		.2byte	0x90da
 2300 036a 0F       		.uleb128 0xf
 2301 036b 01       		.uleb128 0x1
 2302 036c 50       		.byte	0x50
 2303 036d 02       		.uleb128 0x2
 2304 036e 74       		.byte	0x74
 2305 036f 00       		.sleb128 0
 2306 0370 0F       		.uleb128 0xf
 2307 0371 02       		.uleb128 0x2
 2308 0372 7D       		.byte	0x7d
 2309 0373 00       		.sleb128 0
 2310 0374 02       		.uleb128 0x2
 2311 0375 77       		.byte	0x77
 2312 0376 00       		.sleb128 0
 2313 0377 00       		.byte	0
 2314 0378 10       		.uleb128 0x10
 2315 0379 A4000000 		.4byte	.LVL51
 2316 037d 66020000 		.4byte	0x266
 2317 0381 00       		.byte	0
 2318 0382 12       		.uleb128 0x12
 2319 0383 77020000 		.4byte	.LASF42
 2320 0387 01       		.byte	0x1
 2321 0388 B8       		.byte	0xb8
 2322 0389 00000000 		.4byte	.LFB1
 2323 038d D8000000 		.4byte	.LFE1-.LFB1
 2324 0391 01       		.uleb128 0x1
 2325 0392 9C       		.byte	0x9c
 2326 0393 DE030000 		.4byte	0x3de
 2327 0397 13       		.uleb128 0x13
 2328 0398 47050000 		.4byte	.LASF31
 2329 039c 01       		.byte	0x1
 2330 039d BA       		.byte	0xba
 2331 039e 72000000 		.4byte	0x72
 2332 03a2 14       		.uleb128 0x14
 2333 03a3 DF050000 		.4byte	.LASF39
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 78


 2334 03a7 01       		.byte	0x1
 2335 03a8 BB       		.byte	0xbb
 2336 03a9 72000000 		.4byte	0x72
 2337 03ad 47020000 		.4byte	.LLST12
 2338 03b1 10       		.uleb128 0x10
 2339 03b2 06000000 		.4byte	.LVL52
 2340 03b6 BC090000 		.4byte	0x9bc
 2341 03ba 11       		.uleb128 0x11
 2342 03bb 54000000 		.4byte	.LVL55
 2343 03bf C7090000 		.4byte	0x9c7
 2344 03c3 CD030000 		.4byte	0x3cd
 2345 03c7 0F       		.uleb128 0xf
 2346 03c8 01       		.uleb128 0x1
 2347 03c9 50       		.byte	0x50
 2348 03ca 01       		.uleb128 0x1
 2349 03cb 33       		.byte	0x33
 2350 03cc 00       		.byte	0
 2351 03cd 0E       		.uleb128 0xe
 2352 03ce B0000000 		.4byte	.LVL56
 2353 03d2 D8090000 		.4byte	0x9d8
 2354 03d6 0F       		.uleb128 0xf
 2355 03d7 01       		.uleb128 0x1
 2356 03d8 50       		.byte	0x50
 2357 03d9 02       		.uleb128 0x2
 2358 03da 76       		.byte	0x76
 2359 03db 00       		.sleb128 0
 2360 03dc 00       		.byte	0
 2361 03dd 00       		.byte	0
 2362 03de 15       		.uleb128 0x15
 2363 03df 66020000 		.4byte	.LASF43
 2364 03e3 01       		.byte	0x1
 2365 03e4 4901     		.2byte	0x149
 2366 03e6 00000000 		.4byte	.LFB2
 2367 03ea 28000000 		.4byte	.LFE2-.LFB2
 2368 03ee 01       		.uleb128 0x1
 2369 03ef 9C       		.byte	0x9c
 2370 03f0 07040000 		.4byte	0x407
 2371 03f4 10       		.uleb128 0x10
 2372 03f5 16000000 		.4byte	.LVL58
 2373 03f9 F7020000 		.4byte	0x2f7
 2374 03fd 10       		.uleb128 0x10
 2375 03fe 20000000 		.4byte	.LVL59
 2376 0402 82030000 		.4byte	0x382
 2377 0406 00       		.byte	0
 2378 0407 15       		.uleb128 0x15
 2379 0408 19020000 		.4byte	.LASF44
 2380 040c 01       		.byte	0x1
 2381 040d 6A01     		.2byte	0x16a
 2382 040f 00000000 		.4byte	.LFB3
 2383 0413 E4000000 		.4byte	.LFE3-.LFB3
 2384 0417 01       		.uleb128 0x1
 2385 0418 9C       		.byte	0x9c
 2386 0419 5A040000 		.4byte	0x45a
 2387 041d 0D       		.uleb128 0xd
 2388 041e DF050000 		.4byte	.LASF39
 2389 0422 01       		.byte	0x1
 2390 0423 6C01     		.2byte	0x16c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 79


 2391 0425 72000000 		.4byte	0x72
 2392 0429 5A020000 		.4byte	.LLST13
 2393 042d 10       		.uleb128 0x10
 2394 042e 06000000 		.4byte	.LVL60
 2395 0432 BC090000 		.4byte	0x9bc
 2396 0436 11       		.uleb128 0x11
 2397 0437 4C000000 		.4byte	.LVL62
 2398 043b C7090000 		.4byte	0x9c7
 2399 043f 49040000 		.4byte	0x449
 2400 0443 0F       		.uleb128 0xf
 2401 0444 01       		.uleb128 0x1
 2402 0445 50       		.byte	0x50
 2403 0446 01       		.uleb128 0x1
 2404 0447 33       		.byte	0x33
 2405 0448 00       		.byte	0
 2406 0449 0E       		.uleb128 0xe
 2407 044a CC000000 		.4byte	.LVL63
 2408 044e D8090000 		.4byte	0x9d8
 2409 0452 0F       		.uleb128 0xf
 2410 0453 01       		.uleb128 0x1
 2411 0454 50       		.byte	0x50
 2412 0455 02       		.uleb128 0x2
 2413 0456 76       		.byte	0x76
 2414 0457 00       		.sleb128 0
 2415 0458 00       		.byte	0
 2416 0459 00       		.byte	0
 2417 045a 15       		.uleb128 0x15
 2418 045b D6010000 		.4byte	.LASF45
 2419 045f 01       		.byte	0x1
 2420 0460 AD01     		.2byte	0x1ad
 2421 0462 00000000 		.4byte	.LFB4
 2422 0466 18000000 		.4byte	.LFE4-.LFB4
 2423 046a 01       		.uleb128 0x1
 2424 046b 9C       		.byte	0x9c
 2425 046c 91040000 		.4byte	0x491
 2426 0470 0C       		.uleb128 0xc
 2427 0471 A1030000 		.4byte	.LASF46
 2428 0475 01       		.byte	0x1
 2429 0476 AD01     		.2byte	0x1ad
 2430 0478 72000000 		.4byte	0x72
 2431 047c 6D020000 		.4byte	.LLST14
 2432 0480 0D       		.uleb128 0xd
 2433 0481 F1060000 		.4byte	.LASF47
 2434 0485 01       		.byte	0x1
 2435 0486 AF01     		.2byte	0x1af
 2436 0488 72000000 		.4byte	0x72
 2437 048c 8E020000 		.4byte	.LLST15
 2438 0490 00       		.byte	0
 2439 0491 15       		.uleb128 0x15
 2440 0492 16050000 		.4byte	.LASF48
 2441 0496 01       		.byte	0x1
 2442 0497 D101     		.2byte	0x1d1
 2443 0499 00000000 		.4byte	.LFB5
 2444 049d 18000000 		.4byte	.LFE5-.LFB5
 2445 04a1 01       		.uleb128 0x1
 2446 04a2 9C       		.byte	0x9c
 2447 04a3 C8040000 		.4byte	0x4c8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 80


 2448 04a7 0C       		.uleb128 0xc
 2449 04a8 86030000 		.4byte	.LASF49
 2450 04ac 01       		.byte	0x1
 2451 04ad D101     		.2byte	0x1d1
 2452 04af 72000000 		.4byte	0x72
 2453 04b3 AC020000 		.4byte	.LLST16
 2454 04b7 0D       		.uleb128 0xd
 2455 04b8 F1060000 		.4byte	.LASF47
 2456 04bc 01       		.byte	0x1
 2457 04bd D301     		.2byte	0x1d3
 2458 04bf 72000000 		.4byte	0x72
 2459 04c3 CD020000 		.4byte	.LLST17
 2460 04c7 00       		.byte	0
 2461 04c8 16       		.uleb128 0x16
 2462 04c9 53050000 		.4byte	.LASF53
 2463 04cd 01       		.byte	0x1
 2464 04ce F901     		.2byte	0x1f9
 2465 04d0 72000000 		.4byte	0x72
 2466 04d4 00000000 		.4byte	.LFB6
 2467 04d8 74000000 		.4byte	.LFE6-.LFB6
 2468 04dc 01       		.uleb128 0x1
 2469 04dd 9C       		.byte	0x9c
 2470 04de 23050000 		.4byte	0x523
 2471 04e2 0C       		.uleb128 0xc
 2472 04e3 9C060000 		.4byte	.LASF50
 2473 04e7 01       		.byte	0x1
 2474 04e8 F901     		.2byte	0x1f9
 2475 04ea BA000000 		.4byte	0xba
 2476 04ee EB020000 		.4byte	.LLST18
 2477 04f2 0D       		.uleb128 0xd
 2478 04f3 F1060000 		.4byte	.LASF47
 2479 04f7 01       		.byte	0x1
 2480 04f8 FB01     		.2byte	0x1fb
 2481 04fa 7E000000 		.4byte	0x7e
 2482 04fe 19030000 		.4byte	.LLST19
 2483 0502 0D       		.uleb128 0xd
 2484 0503 F0050000 		.4byte	.LASF51
 2485 0507 01       		.byte	0x1
 2486 0508 FC01     		.2byte	0x1fc
 2487 050a 72000000 		.4byte	0x72
 2488 050e 51030000 		.4byte	.LLST20
 2489 0512 0D       		.uleb128 0xd
 2490 0513 6E050000 		.4byte	.LASF52
 2491 0517 01       		.byte	0x1
 2492 0518 FD01     		.2byte	0x1fd
 2493 051a BA000000 		.4byte	0xba
 2494 051e 70030000 		.4byte	.LLST21
 2495 0522 00       		.byte	0
 2496 0523 17       		.uleb128 0x17
 2497 0524 A7060000 		.4byte	.LASF54
 2498 0528 01       		.byte	0x1
 2499 0529 2802     		.2byte	0x228
 2500 052b 7E000000 		.4byte	0x7e
 2501 052f 00000000 		.4byte	.LFB7
 2502 0533 24000000 		.4byte	.LFE7-.LFB7
 2503 0537 01       		.uleb128 0x1
 2504 0538 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 81


 2505 0539 5E050000 		.4byte	0x55e
 2506 053d 0D       		.uleb128 0xd
 2507 053e 33050000 		.4byte	.LASF55
 2508 0542 01       		.byte	0x1
 2509 0543 2A02     		.2byte	0x22a
 2510 0545 72000000 		.4byte	0x72
 2511 0549 AF030000 		.4byte	.LLST22
 2512 054d 0D       		.uleb128 0xd
 2513 054e A1020000 		.4byte	.LASF34
 2514 0552 01       		.byte	0x1
 2515 0553 2B02     		.2byte	0x22b
 2516 0555 7E000000 		.4byte	0x7e
 2517 0559 C2030000 		.4byte	.LLST23
 2518 055d 00       		.byte	0
 2519 055e 18       		.uleb128 0x18
 2520 055f 8D040000 		.4byte	.LASF56
 2521 0563 01       		.byte	0x1
 2522 0564 4A02     		.2byte	0x24a
 2523 0566 00000000 		.4byte	.LFB8
 2524 056a 10000000 		.4byte	.LFE8-.LFB8
 2525 056e 01       		.uleb128 0x1
 2526 056f 9C       		.byte	0x9c
 2527 0570 18       		.uleb128 0x18
 2528 0571 CC030000 		.4byte	.LASF57
 2529 0575 01       		.byte	0x1
 2530 0576 6102     		.2byte	0x261
 2531 0578 00000000 		.4byte	.LFB9
 2532 057c 10000000 		.4byte	.LFE9-.LFB9
 2533 0580 01       		.uleb128 0x1
 2534 0581 9C       		.byte	0x9c
 2535 0582 17       		.uleb128 0x17
 2536 0583 D6060000 		.4byte	.LASF58
 2537 0587 01       		.byte	0x1
 2538 0588 8402     		.2byte	0x284
 2539 058a 72000000 		.4byte	0x72
 2540 058e 00000000 		.4byte	.LFB10
 2541 0592 30000000 		.4byte	.LFE10-.LFB10
 2542 0596 01       		.uleb128 0x1
 2543 0597 9C       		.byte	0x9c
 2544 0598 BD050000 		.4byte	0x5bd
 2545 059c 0C       		.uleb128 0xc
 2546 059d 11020000 		.4byte	.LASF59
 2547 05a1 01       		.byte	0x1
 2548 05a2 8402     		.2byte	0x284
 2549 05a4 72000000 		.4byte	0x72
 2550 05a8 E0030000 		.4byte	.LLST24
 2551 05ac 0D       		.uleb128 0xd
 2552 05ad F0050000 		.4byte	.LASF51
 2553 05b1 01       		.byte	0x1
 2554 05b2 8602     		.2byte	0x286
 2555 05b4 72000000 		.4byte	0x72
 2556 05b8 01040000 		.4byte	.LLST25
 2557 05bc 00       		.byte	0
 2558 05bd 17       		.uleb128 0x17
 2559 05be 41000000 		.4byte	.LASF60
 2560 05c2 01       		.byte	0x1
 2561 05c3 B302     		.2byte	0x2b3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 82


 2562 05c5 96000000 		.4byte	0x96
 2563 05c9 00000000 		.4byte	.LFB11
 2564 05cd 48000000 		.4byte	.LFE11-.LFB11
 2565 05d1 01       		.uleb128 0x1
 2566 05d2 9C       		.byte	0x9c
 2567 05d3 F6050000 		.4byte	0x5f6
 2568 05d7 19       		.uleb128 0x19
 2569 05d8 F8060000 		.4byte	.LASF61
 2570 05dc 01       		.byte	0x1
 2571 05dd B502     		.2byte	0x2b5
 2572 05df 96000000 		.4byte	0x96
 2573 05e3 01       		.uleb128 0x1
 2574 05e4 50       		.byte	0x50
 2575 05e5 0D       		.uleb128 0xd
 2576 05e6 86030000 		.4byte	.LASF49
 2577 05ea 01       		.byte	0x1
 2578 05eb B602     		.2byte	0x2b6
 2579 05ed 72000000 		.4byte	0x72
 2580 05f1 1F040000 		.4byte	.LLST26
 2581 05f5 00       		.byte	0
 2582 05f6 17       		.uleb128 0x17
 2583 05f7 F2020000 		.4byte	.LASF62
 2584 05fb 01       		.byte	0x1
 2585 05fc E902     		.2byte	0x2e9
 2586 05fe A2000000 		.4byte	0xa2
 2587 0602 00000000 		.4byte	.LFB12
 2588 0606 50000000 		.4byte	.LFE12-.LFB12
 2589 060a 01       		.uleb128 0x1
 2590 060b 9C       		.byte	0x9c
 2591 060c 31060000 		.4byte	0x631
 2592 0610 0D       		.uleb128 0xd
 2593 0611 F8060000 		.4byte	.LASF61
 2594 0615 01       		.byte	0x1
 2595 0616 EB02     		.2byte	0x2eb
 2596 0618 7E000000 		.4byte	0x7e
 2597 061c 3D040000 		.4byte	.LLST27
 2598 0620 0D       		.uleb128 0xd
 2599 0621 86030000 		.4byte	.LASF49
 2600 0625 01       		.byte	0x1
 2601 0626 EC02     		.2byte	0x2ec
 2602 0628 72000000 		.4byte	0x72
 2603 062c 66040000 		.4byte	.LLST28
 2604 0630 00       		.byte	0
 2605 0631 17       		.uleb128 0x17
 2606 0632 CA040000 		.4byte	.LASF63
 2607 0636 01       		.byte	0x1
 2608 0637 2503     		.2byte	0x325
 2609 0639 AE000000 		.4byte	0xae
 2610 063d 00000000 		.4byte	.LFB13
 2611 0641 6C000000 		.4byte	.LFE13-.LFB13
 2612 0645 01       		.uleb128 0x1
 2613 0646 9C       		.byte	0x9c
 2614 0647 6C060000 		.4byte	0x66c
 2615 064b 0D       		.uleb128 0xd
 2616 064c F8060000 		.4byte	.LASF61
 2617 0650 01       		.byte	0x1
 2618 0651 2703     		.2byte	0x327
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 83


 2619 0653 8A000000 		.4byte	0x8a
 2620 0657 84040000 		.4byte	.LLST29
 2621 065b 0D       		.uleb128 0xd
 2622 065c 86030000 		.4byte	.LASF49
 2623 0660 01       		.byte	0x1
 2624 0661 2803     		.2byte	0x328
 2625 0663 72000000 		.4byte	0x72
 2626 0667 E5040000 		.4byte	.LLST30
 2627 066b 00       		.byte	0
 2628 066c 15       		.uleb128 0x15
 2629 066d C1060000 		.4byte	.LASF64
 2630 0671 01       		.byte	0x1
 2631 0672 8203     		.2byte	0x382
 2632 0674 00000000 		.4byte	.LFB14
 2633 0678 0C000000 		.4byte	.LFE14-.LFB14
 2634 067c 01       		.uleb128 0x1
 2635 067d 9C       		.byte	0x9c
 2636 067e 91060000 		.4byte	0x691
 2637 0682 1A       		.uleb128 0x1a
 2638 0683 8A050000 		.4byte	.LASF65
 2639 0687 01       		.byte	0x1
 2640 0688 8203     		.2byte	0x382
 2641 068a AE000000 		.4byte	0xae
 2642 068e 01       		.uleb128 0x1
 2643 068f 50       		.byte	0x50
 2644 0690 00       		.byte	0
 2645 0691 15       		.uleb128 0x15
 2646 0692 77050000 		.4byte	.LASF66
 2647 0696 01       		.byte	0x1
 2648 0697 A503     		.2byte	0x3a5
 2649 0699 00000000 		.4byte	.LFB15
 2650 069d 0C000000 		.4byte	.LFE15-.LFB15
 2651 06a1 01       		.uleb128 0x1
 2652 06a2 9C       		.byte	0x9c
 2653 06a3 B6060000 		.4byte	0x6b6
 2654 06a7 1A       		.uleb128 0x1a
 2655 06a8 57000000 		.4byte	.LASF67
 2656 06ac 01       		.byte	0x1
 2657 06ad A503     		.2byte	0x3a5
 2658 06af AE000000 		.4byte	0xae
 2659 06b3 01       		.uleb128 0x1
 2660 06b4 50       		.byte	0x50
 2661 06b5 00       		.byte	0
 2662 06b6 17       		.uleb128 0x17
 2663 06b7 5F000000 		.4byte	.LASF68
 2664 06bb 01       		.byte	0x1
 2665 06bc C003     		.2byte	0x3c0
 2666 06be A2000000 		.4byte	0xa2
 2667 06c2 00000000 		.4byte	.LFB16
 2668 06c6 24000000 		.4byte	.LFE16-.LFB16
 2669 06ca 01       		.uleb128 0x1
 2670 06cb 9C       		.byte	0x9c
 2671 06cc EF060000 		.4byte	0x6ef
 2672 06d0 0C       		.uleb128 0xc
 2673 06d1 BC050000 		.4byte	.LASF69
 2674 06d5 01       		.byte	0x1
 2675 06d6 C003     		.2byte	0x3c0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 84


 2676 06d8 AE000000 		.4byte	0xae
 2677 06dc 0E050000 		.4byte	.LLST31
 2678 06e0 19       		.uleb128 0x19
 2679 06e1 BC020000 		.4byte	.LASF70
 2680 06e5 01       		.byte	0x1
 2681 06e6 C303     		.2byte	0x3c3
 2682 06e8 A2000000 		.4byte	0xa2
 2683 06ec 01       		.uleb128 0x1
 2684 06ed 50       		.byte	0x50
 2685 06ee 00       		.byte	0
 2686 06ef 16       		.uleb128 0x16
 2687 06f0 8D010000 		.4byte	.LASF71
 2688 06f4 01       		.byte	0x1
 2689 06f5 FD03     		.2byte	0x3fd
 2690 06f7 BA000000 		.4byte	0xba
 2691 06fb 00000000 		.4byte	.LFB17
 2692 06ff 28000000 		.4byte	.LFE17-.LFB17
 2693 0703 01       		.uleb128 0x1
 2694 0704 9C       		.byte	0x9c
 2695 0705 28070000 		.4byte	0x728
 2696 0709 0C       		.uleb128 0xc
 2697 070a BC050000 		.4byte	.LASF69
 2698 070e 01       		.byte	0x1
 2699 070f FD03     		.2byte	0x3fd
 2700 0711 AE000000 		.4byte	0xae
 2701 0715 2C050000 		.4byte	.LLST32
 2702 0719 19       		.uleb128 0x19
 2703 071a EF010000 		.4byte	.LASF72
 2704 071e 01       		.byte	0x1
 2705 071f 0004     		.2byte	0x400
 2706 0721 BA000000 		.4byte	0xba
 2707 0725 01       		.uleb128 0x1
 2708 0726 50       		.byte	0x50
 2709 0727 00       		.byte	0
 2710 0728 17       		.uleb128 0x17
 2711 0729 59010000 		.4byte	.LASF73
 2712 072d 01       		.byte	0x1
 2713 072e 3F04     		.2byte	0x43f
 2714 0730 AE000000 		.4byte	0xae
 2715 0734 00000000 		.4byte	.LFB18
 2716 0738 4C000000 		.4byte	.LFE18-.LFB18
 2717 073c 01       		.uleb128 0x1
 2718 073d 9C       		.byte	0x9c
 2719 073e 8E070000 		.4byte	0x78e
 2720 0742 0C       		.uleb128 0xc
 2721 0743 BC050000 		.4byte	.LASF69
 2722 0747 01       		.byte	0x1
 2723 0748 3F04     		.2byte	0x43f
 2724 074a AE000000 		.4byte	0xae
 2725 074e 5A050000 		.4byte	.LLST33
 2726 0752 0D       		.uleb128 0xd
 2727 0753 36020000 		.4byte	.LASF74
 2728 0757 01       		.byte	0x1
 2729 0758 4204     		.2byte	0x442
 2730 075a AE000000 		.4byte	0xae
 2731 075e 7B050000 		.4byte	.LLST34
 2732 0762 1B       		.uleb128 0x1b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 85


 2733 0763 0A050000 		.4byte	.LASF75
 2734 0767 01       		.byte	0x1
 2735 0768 4304     		.2byte	0x443
 2736 076a AE000000 		.4byte	0xae
 2737 076e 127A     		.2byte	0x7a12
 2738 0770 0D       		.uleb128 0xd
 2739 0771 10050000 		.4byte	.LASF76
 2740 0775 01       		.byte	0x1
 2741 0776 4404     		.2byte	0x444
 2742 0778 AE000000 		.4byte	0xae
 2743 077c 9E050000 		.4byte	.LLST35
 2744 0780 1C       		.uleb128 0x1c
 2745 0781 BF040000 		.4byte	.LASF30
 2746 0785 01       		.byte	0x1
 2747 0786 4504     		.2byte	0x445
 2748 0788 72000000 		.4byte	0x72
 2749 078c 10       		.byte	0x10
 2750 078d 00       		.byte	0
 2751 078e 15       		.uleb128 0x15
 2752 078f 09030000 		.4byte	.LASF77
 2753 0793 01       		.byte	0x1
 2754 0794 1006     		.2byte	0x610
 2755 0796 00000000 		.4byte	.LFB20
 2756 079a 60000000 		.4byte	.LFE20-.LFB20
 2757 079e 01       		.uleb128 0x1
 2758 079f 9C       		.byte	0x9c
 2759 07a0 03080000 		.4byte	0x803
 2760 07a4 0C       		.uleb128 0xc
 2761 07a5 47050000 		.4byte	.LASF31
 2762 07a9 01       		.byte	0x1
 2763 07aa 1006     		.2byte	0x610
 2764 07ac 72000000 		.4byte	0x72
 2765 07b0 BE050000 		.4byte	.LLST36
 2766 07b4 0C       		.uleb128 0xc
 2767 07b5 66050000 		.4byte	.LASF78
 2768 07b9 01       		.byte	0x1
 2769 07ba 1006     		.2byte	0x610
 2770 07bc 72000000 		.4byte	0x72
 2771 07c0 F8050000 		.4byte	.LLST37
 2772 07c4 10       		.uleb128 0x10
 2773 07c5 1E000000 		.4byte	.LVL144
 2774 07c9 07040000 		.4byte	0x407
 2775 07cd 11       		.uleb128 0x11
 2776 07ce 24000000 		.4byte	.LVL145
 2777 07d2 66020000 		.4byte	0x266
 2778 07d6 E1070000 		.4byte	0x7e1
 2779 07da 0F       		.uleb128 0xf
 2780 07db 01       		.uleb128 0x1
 2781 07dc 50       		.byte	0x50
 2782 07dd 02       		.uleb128 0x2
 2783 07de 74       		.byte	0x74
 2784 07df 00       		.sleb128 0
 2785 07e0 00       		.byte	0
 2786 07e1 10       		.uleb128 0x10
 2787 07e2 42000000 		.4byte	.LVL146
 2788 07e6 DE030000 		.4byte	0x3de
 2789 07ea 10       		.uleb128 0x10
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 86


 2790 07eb 46000000 		.4byte	.LVL147
 2791 07ef 5E050000 		.4byte	0x55e
 2792 07f3 0E       		.uleb128 0xe
 2793 07f4 4E000000 		.4byte	.LVL150
 2794 07f8 AB090000 		.4byte	0x9ab
 2795 07fc 0F       		.uleb128 0xf
 2796 07fd 01       		.uleb128 0x1
 2797 07fe 50       		.byte	0x50
 2798 07ff 01       		.uleb128 0x1
 2799 0800 30       		.byte	0x30
 2800 0801 00       		.byte	0
 2801 0802 00       		.byte	0
 2802 0803 17       		.uleb128 0x17
 2803 0804 AB020000 		.4byte	.LASF79
 2804 0808 01       		.byte	0x1
 2805 0809 E206     		.2byte	0x6e2
 2806 080b 96000000 		.4byte	0x96
 2807 080f 00000000 		.4byte	.LFB23
 2808 0813 28000000 		.4byte	.LFE23-.LFB23
 2809 0817 01       		.uleb128 0x1
 2810 0818 9C       		.byte	0x9c
 2811 0819 5C080000 		.4byte	0x85c
 2812 081d 0D       		.uleb128 0xd
 2813 081e F8060000 		.4byte	.LASF61
 2814 0822 01       		.byte	0x1
 2815 0823 E406     		.2byte	0x6e4
 2816 0825 96000000 		.4byte	0x96
 2817 0829 32060000 		.4byte	.LLST38
 2818 082d 10       		.uleb128 0x10
 2819 082e 10000000 		.4byte	.LVL151
 2820 0832 5E050000 		.4byte	0x55e
 2821 0836 11       		.uleb128 0x11
 2822 0837 16000000 		.4byte	.LVL152
 2823 083b 82050000 		.4byte	0x582
 2824 083f 49080000 		.4byte	0x849
 2825 0843 0F       		.uleb128 0xf
 2826 0844 01       		.uleb128 0x1
 2827 0845 50       		.byte	0x50
 2828 0846 01       		.uleb128 0x1
 2829 0847 30       		.byte	0x30
 2830 0848 00       		.byte	0
 2831 0849 10       		.uleb128 0x10
 2832 084a 1A000000 		.4byte	.LVL153
 2833 084e BD050000 		.4byte	0x5bd
 2834 0852 10       		.uleb128 0x10
 2835 0853 20000000 		.4byte	.LVL155
 2836 0857 70050000 		.4byte	0x570
 2837 085b 00       		.byte	0
 2838 085c 17       		.uleb128 0x17
 2839 085d AA050000 		.4byte	.LASF80
 2840 0861 01       		.byte	0x1
 2841 0862 0307     		.2byte	0x703
 2842 0864 A2000000 		.4byte	0xa2
 2843 0868 00000000 		.4byte	.LFB24
 2844 086c 28000000 		.4byte	.LFE24-.LFB24
 2845 0870 01       		.uleb128 0x1
 2846 0871 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 87


 2847 0872 B5080000 		.4byte	0x8b5
 2848 0876 0D       		.uleb128 0xd
 2849 0877 F8060000 		.4byte	.LASF61
 2850 087b 01       		.byte	0x1
 2851 087c 0507     		.2byte	0x705
 2852 087e A2000000 		.4byte	0xa2
 2853 0882 45060000 		.4byte	.LLST39
 2854 0886 10       		.uleb128 0x10
 2855 0887 10000000 		.4byte	.LVL157
 2856 088b 5E050000 		.4byte	0x55e
 2857 088f 11       		.uleb128 0x11
 2858 0890 16000000 		.4byte	.LVL158
 2859 0894 82050000 		.4byte	0x582
 2860 0898 A2080000 		.4byte	0x8a2
 2861 089c 0F       		.uleb128 0xf
 2862 089d 01       		.uleb128 0x1
 2863 089e 50       		.byte	0x50
 2864 089f 01       		.uleb128 0x1
 2865 08a0 30       		.byte	0x30
 2866 08a1 00       		.byte	0
 2867 08a2 10       		.uleb128 0x10
 2868 08a3 1A000000 		.4byte	.LVL159
 2869 08a7 F6050000 		.4byte	0x5f6
 2870 08ab 10       		.uleb128 0x10
 2871 08ac 20000000 		.4byte	.LVL161
 2872 08b0 70050000 		.4byte	0x570
 2873 08b4 00       		.byte	0
 2874 08b5 17       		.uleb128 0x17
 2875 08b6 C4010000 		.4byte	.LASF81
 2876 08ba 01       		.byte	0x1
 2877 08bb 2407     		.2byte	0x724
 2878 08bd AE000000 		.4byte	0xae
 2879 08c1 00000000 		.4byte	.LFB25
 2880 08c5 28000000 		.4byte	.LFE25-.LFB25
 2881 08c9 01       		.uleb128 0x1
 2882 08ca 9C       		.byte	0x9c
 2883 08cb 0E090000 		.4byte	0x90e
 2884 08cf 0D       		.uleb128 0xd
 2885 08d0 F8060000 		.4byte	.LASF61
 2886 08d4 01       		.byte	0x1
 2887 08d5 2607     		.2byte	0x726
 2888 08d7 AE000000 		.4byte	0xae
 2889 08db 58060000 		.4byte	.LLST40
 2890 08df 10       		.uleb128 0x10
 2891 08e0 10000000 		.4byte	.LVL163
 2892 08e4 5E050000 		.4byte	0x55e
 2893 08e8 11       		.uleb128 0x11
 2894 08e9 16000000 		.4byte	.LVL164
 2895 08ed 82050000 		.4byte	0x582
 2896 08f1 FB080000 		.4byte	0x8fb
 2897 08f5 0F       		.uleb128 0xf
 2898 08f6 01       		.uleb128 0x1
 2899 08f7 50       		.byte	0x50
 2900 08f8 01       		.uleb128 0x1
 2901 08f9 30       		.byte	0x30
 2902 08fa 00       		.byte	0
 2903 08fb 10       		.uleb128 0x10
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 88


 2904 08fc 1A000000 		.4byte	.LVL165
 2905 0900 31060000 		.4byte	0x631
 2906 0904 10       		.uleb128 0x10
 2907 0905 20000000 		.4byte	.LVL167
 2908 0909 70050000 		.4byte	0x570
 2909 090d 00       		.byte	0
 2910 090e 1D       		.uleb128 0x1d
 2911 090f 42010000 		.4byte	0x142
 2912 0913 1E090000 		.4byte	0x91e
 2913 0917 1E       		.uleb128 0x1e
 2914 0918 1A010000 		.4byte	0x11a
 2915 091c 00       		.byte	0
 2916 091d 00       		.byte	0
 2917 091e 1F       		.uleb128 0x1f
 2918 091f 7D010000 		.4byte	.LASF82
 2919 0923 01       		.byte	0x1
 2920 0924 3D       		.byte	0x3d
 2921 0925 0E090000 		.4byte	0x90e
 2922 0929 05       		.uleb128 0x5
 2923 092a 03       		.byte	0x3
 2924 092b 00000000 		.4byte	Volume_ADC_gcor
 2925 092f 20       		.uleb128 0x20
 2926 0930 39030000 		.4byte	.LASF83
 2927 0934 01       		.byte	0x1
 2928 0935 2C       		.byte	0x2c
 2929 0936 72000000 		.4byte	0x72
 2930 093a 05       		.uleb128 0x5
 2931 093b 03       		.byte	0x3
 2932 093c 00000000 		.4byte	Volume_ADC_initVar
 2933 0940 20       		.uleb128 0x20
 2934 0941 A6000000 		.4byte	.LASF84
 2935 0945 01       		.byte	0x1
 2936 0946 24       		.byte	0x24
 2937 0947 E0000000 		.4byte	0xe0
 2938 094b 05       		.uleb128 0x5
 2939 094c 03       		.byte	0x3
 2940 094d 00000000 		.4byte	Volume_ADC_convDone
 2941 0951 20       		.uleb128 0x20
 2942 0952 A5040000 		.4byte	.LASF85
 2943 0956 01       		.byte	0x1
 2944 0957 29       		.byte	0x29
 2945 0958 E0000000 		.4byte	0xe0
 2946 095c 05       		.uleb128 0x5
 2947 095d 03       		.byte	0x3
 2948 095e 00000000 		.4byte	Volume_ADC_stopConversion
 2949 0962 20       		.uleb128 0x20
 2950 0963 73030000 		.4byte	.LASF86
 2951 0967 01       		.byte	0x1
 2952 0968 2F       		.byte	0x2f
 2953 0969 E0000000 		.4byte	0xe0
 2954 096d 05       		.uleb128 0x5
 2955 096e 03       		.byte	0x3
 2956 096f 00000000 		.4byte	Volume_ADC_started
 2957 0973 20       		.uleb128 0x20
 2958 0974 FF030000 		.4byte	.LASF87
 2959 0978 01       		.byte	0x1
 2960 0979 32       		.byte	0x32
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 89


 2961 097a E0000000 		.4byte	0xe0
 2962 097e 05       		.uleb128 0x5
 2963 097f 03       		.byte	0x3
 2964 0980 00000000 		.4byte	Volume_ADC_Config
 2965 0984 20       		.uleb128 0x20
 2966 0985 69040000 		.4byte	.LASF88
 2967 0989 01       		.byte	0x1
 2968 098a 34       		.byte	0x34
 2969 098b 95090000 		.4byte	0x995
 2970 098f 05       		.uleb128 0x5
 2971 0990 03       		.byte	0x3
 2972 0991 00000000 		.4byte	Volume_ADC_Offset
 2973 0995 05       		.uleb128 0x5
 2974 0996 AE000000 		.4byte	0xae
 2975 099a 20       		.uleb128 0x20
 2976 099b 91050000 		.4byte	.LASF89
 2977 099f 01       		.byte	0x1
 2978 09a0 35       		.byte	0x35
 2979 09a1 95090000 		.4byte	0x995
 2980 09a5 05       		.uleb128 0x5
 2981 09a6 03       		.byte	0x3
 2982 09a7 00000000 		.4byte	Volume_ADC_CountsPerVolt
 2983 09ab 21       		.uleb128 0x21
 2984 09ac 2E040000 		.4byte	.LASF90
 2985 09b0 04       		.byte	0x4
 2986 09b1 7F       		.byte	0x7f
 2987 09b2 BC090000 		.4byte	0x9bc
 2988 09b6 22       		.uleb128 0x22
 2989 09b7 72000000 		.4byte	0x72
 2990 09bb 00       		.byte	0
 2991 09bc 23       		.uleb128 0x23
 2992 09bd 4F020000 		.4byte	.LASF101
 2993 09c1 04       		.byte	0x4
 2994 09c2 7D       		.byte	0x7d
 2995 09c3 72000000 		.4byte	0x72
 2996 09c7 21       		.uleb128 0x21
 2997 09c8 B3010000 		.4byte	.LASF91
 2998 09cc 04       		.byte	0x4
 2999 09cd 77       		.byte	0x77
 3000 09ce D8090000 		.4byte	0x9d8
 3001 09d2 22       		.uleb128 0x22
 3002 09d3 7E000000 		.4byte	0x7e
 3003 09d7 00       		.byte	0
 3004 09d8 21       		.uleb128 0x21
 3005 09d9 E9030000 		.4byte	.LASF92
 3006 09dd 04       		.byte	0x4
 3007 09de 7E       		.byte	0x7e
 3008 09df E9090000 		.4byte	0x9e9
 3009 09e3 22       		.uleb128 0x22
 3010 09e4 72000000 		.4byte	0x72
 3011 09e8 00       		.byte	0
 3012 09e9 21       		.uleb128 0x21
 3013 09ea 85060000 		.4byte	.LASF93
 3014 09ee 05       		.byte	0x5
 3015 09ef 50       		.byte	0x50
 3016 09f0 FA090000 		.4byte	0x9fa
 3017 09f4 22       		.uleb128 0x22
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 90


 3018 09f5 72000000 		.4byte	0x72
 3019 09f9 00       		.byte	0
 3020 09fa 21       		.uleb128 0x21
 3021 09fb E1040000 		.4byte	.LASF94
 3022 09ff 06       		.byte	0x6
 3023 0a00 2F       		.byte	0x2f
 3024 0a01 100A0000 		.4byte	0xa10
 3025 0a05 22       		.uleb128 0x22
 3026 0a06 7E000000 		.4byte	0x7e
 3027 0a0a 22       		.uleb128 0x22
 3028 0a0b 72000000 		.4byte	0x72
 3029 0a0f 00       		.byte	0
 3030 0a10 21       		.uleb128 0x21
 3031 0a11 A6030000 		.4byte	.LASF95
 3032 0a15 07       		.byte	0x7
 3033 0a16 2F       		.byte	0x2f
 3034 0a17 260A0000 		.4byte	0xa26
 3035 0a1b 22       		.uleb128 0x22
 3036 0a1c 7E000000 		.4byte	0x7e
 3037 0a20 22       		.uleb128 0x22
 3038 0a21 72000000 		.4byte	0x72
 3039 0a25 00       		.byte	0
 3040 0a26 24       		.uleb128 0x24
 3041 0a27 FC010000 		.4byte	.LASF102
 3042 0a2b 04       		.byte	0x4
 3043 0a2c 88       		.byte	0x88
 3044 0a2d 07010000 		.4byte	0x107
 3045 0a31 400A0000 		.4byte	0xa40
 3046 0a35 22       		.uleb128 0x22
 3047 0a36 72000000 		.4byte	0x72
 3048 0a3a 22       		.uleb128 0x22
 3049 0a3b 07010000 		.4byte	0x107
 3050 0a3f 00       		.byte	0
 3051 0a40 21       		.uleb128 0x21
 3052 0a41 35040000 		.4byte	.LASF96
 3053 0a45 06       		.byte	0x6
 3054 0a46 32       		.byte	0x32
 3055 0a47 510A0000 		.4byte	0xa51
 3056 0a4b 22       		.uleb128 0x22
 3057 0a4c 72000000 		.4byte	0x72
 3058 0a50 00       		.byte	0
 3059 0a51 21       		.uleb128 0x21
 3060 0a52 C3020000 		.4byte	.LASF97
 3061 0a56 07       		.byte	0x7
 3062 0a57 32       		.byte	0x32
 3063 0a58 620A0000 		.4byte	0xa62
 3064 0a5c 22       		.uleb128 0x22
 3065 0a5d 72000000 		.4byte	0x72
 3066 0a61 00       		.byte	0
 3067 0a62 25       		.uleb128 0x25
 3068 0a63 90030000 		.4byte	.LASF103
 3069 0a67 04       		.byte	0x4
 3070 0a68 8B       		.byte	0x8b
 3071 0a69 22       		.uleb128 0x22
 3072 0a6a 72000000 		.4byte	0x72
 3073 0a6e 22       		.uleb128 0x22
 3074 0a6f 72000000 		.4byte	0x72
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 91


 3075 0a73 00       		.byte	0
 3076 0a74 00       		.byte	0
 3077              		.section	.debug_abbrev,"",%progbits
 3078              	.Ldebug_abbrev0:
 3079 0000 01       		.uleb128 0x1
 3080 0001 11       		.uleb128 0x11
 3081 0002 01       		.byte	0x1
 3082 0003 25       		.uleb128 0x25
 3083 0004 0E       		.uleb128 0xe
 3084 0005 13       		.uleb128 0x13
 3085 0006 0B       		.uleb128 0xb
 3086 0007 03       		.uleb128 0x3
 3087 0008 0E       		.uleb128 0xe
 3088 0009 1B       		.uleb128 0x1b
 3089 000a 0E       		.uleb128 0xe
 3090 000b 55       		.uleb128 0x55
 3091 000c 17       		.uleb128 0x17
 3092 000d 11       		.uleb128 0x11
 3093 000e 01       		.uleb128 0x1
 3094 000f 10       		.uleb128 0x10
 3095 0010 17       		.uleb128 0x17
 3096 0011 00       		.byte	0
 3097 0012 00       		.byte	0
 3098 0013 02       		.uleb128 0x2
 3099 0014 24       		.uleb128 0x24
 3100 0015 00       		.byte	0
 3101 0016 0B       		.uleb128 0xb
 3102 0017 0B       		.uleb128 0xb
 3103 0018 3E       		.uleb128 0x3e
 3104 0019 0B       		.uleb128 0xb
 3105 001a 03       		.uleb128 0x3
 3106 001b 0E       		.uleb128 0xe
 3107 001c 00       		.byte	0
 3108 001d 00       		.byte	0
 3109 001e 03       		.uleb128 0x3
 3110 001f 24       		.uleb128 0x24
 3111 0020 00       		.byte	0
 3112 0021 0B       		.uleb128 0xb
 3113 0022 0B       		.uleb128 0xb
 3114 0023 3E       		.uleb128 0x3e
 3115 0024 0B       		.uleb128 0xb
 3116 0025 03       		.uleb128 0x3
 3117 0026 08       		.uleb128 0x8
 3118 0027 00       		.byte	0
 3119 0028 00       		.byte	0
 3120 0029 04       		.uleb128 0x4
 3121 002a 16       		.uleb128 0x16
 3122 002b 00       		.byte	0
 3123 002c 03       		.uleb128 0x3
 3124 002d 0E       		.uleb128 0xe
 3125 002e 3A       		.uleb128 0x3a
 3126 002f 0B       		.uleb128 0xb
 3127 0030 3B       		.uleb128 0x3b
 3128 0031 05       		.uleb128 0x5
 3129 0032 49       		.uleb128 0x49
 3130 0033 13       		.uleb128 0x13
 3131 0034 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 92


 3132 0035 00       		.byte	0
 3133 0036 05       		.uleb128 0x5
 3134 0037 35       		.uleb128 0x35
 3135 0038 00       		.byte	0
 3136 0039 49       		.uleb128 0x49
 3137 003a 13       		.uleb128 0x13
 3138 003b 00       		.byte	0
 3139 003c 00       		.byte	0
 3140 003d 06       		.uleb128 0x6
 3141 003e 0F       		.uleb128 0xf
 3142 003f 00       		.byte	0
 3143 0040 0B       		.uleb128 0xb
 3144 0041 0B       		.uleb128 0xb
 3145 0042 49       		.uleb128 0x49
 3146 0043 13       		.uleb128 0x13
 3147 0044 00       		.byte	0
 3148 0045 00       		.byte	0
 3149 0046 07       		.uleb128 0x7
 3150 0047 15       		.uleb128 0x15
 3151 0048 00       		.byte	0
 3152 0049 27       		.uleb128 0x27
 3153 004a 19       		.uleb128 0x19
 3154 004b 00       		.byte	0
 3155 004c 00       		.byte	0
 3156 004d 08       		.uleb128 0x8
 3157 004e 13       		.uleb128 0x13
 3158 004f 01       		.byte	0x1
 3159 0050 0B       		.uleb128 0xb
 3160 0051 0B       		.uleb128 0xb
 3161 0052 3A       		.uleb128 0x3a
 3162 0053 0B       		.uleb128 0xb
 3163 0054 3B       		.uleb128 0x3b
 3164 0055 0B       		.uleb128 0xb
 3165 0056 01       		.uleb128 0x1
 3166 0057 13       		.uleb128 0x13
 3167 0058 00       		.byte	0
 3168 0059 00       		.byte	0
 3169 005a 09       		.uleb128 0x9
 3170 005b 0D       		.uleb128 0xd
 3171 005c 00       		.byte	0
 3172 005d 03       		.uleb128 0x3
 3173 005e 0E       		.uleb128 0xe
 3174 005f 3A       		.uleb128 0x3a
 3175 0060 0B       		.uleb128 0xb
 3176 0061 3B       		.uleb128 0x3b
 3177 0062 0B       		.uleb128 0xb
 3178 0063 49       		.uleb128 0x49
 3179 0064 13       		.uleb128 0x13
 3180 0065 38       		.uleb128 0x38
 3181 0066 0B       		.uleb128 0xb
 3182 0067 00       		.byte	0
 3183 0068 00       		.byte	0
 3184 0069 0A       		.uleb128 0xa
 3185 006a 16       		.uleb128 0x16
 3186 006b 00       		.byte	0
 3187 006c 03       		.uleb128 0x3
 3188 006d 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 93


 3189 006e 3A       		.uleb128 0x3a
 3190 006f 0B       		.uleb128 0xb
 3191 0070 3B       		.uleb128 0x3b
 3192 0071 0B       		.uleb128 0xb
 3193 0072 49       		.uleb128 0x49
 3194 0073 13       		.uleb128 0x13
 3195 0074 00       		.byte	0
 3196 0075 00       		.byte	0
 3197 0076 0B       		.uleb128 0xb
 3198 0077 2E       		.uleb128 0x2e
 3199 0078 01       		.byte	0x1
 3200 0079 03       		.uleb128 0x3
 3201 007a 0E       		.uleb128 0xe
 3202 007b 3A       		.uleb128 0x3a
 3203 007c 0B       		.uleb128 0xb
 3204 007d 3B       		.uleb128 0x3b
 3205 007e 05       		.uleb128 0x5
 3206 007f 27       		.uleb128 0x27
 3207 0080 19       		.uleb128 0x19
 3208 0081 11       		.uleb128 0x11
 3209 0082 01       		.uleb128 0x1
 3210 0083 12       		.uleb128 0x12
 3211 0084 06       		.uleb128 0x6
 3212 0085 40       		.uleb128 0x40
 3213 0086 18       		.uleb128 0x18
 3214 0087 9742     		.uleb128 0x2117
 3215 0089 19       		.uleb128 0x19
 3216 008a 01       		.uleb128 0x1
 3217 008b 13       		.uleb128 0x13
 3218 008c 00       		.byte	0
 3219 008d 00       		.byte	0
 3220 008e 0C       		.uleb128 0xc
 3221 008f 05       		.uleb128 0x5
 3222 0090 00       		.byte	0
 3223 0091 03       		.uleb128 0x3
 3224 0092 0E       		.uleb128 0xe
 3225 0093 3A       		.uleb128 0x3a
 3226 0094 0B       		.uleb128 0xb
 3227 0095 3B       		.uleb128 0x3b
 3228 0096 05       		.uleb128 0x5
 3229 0097 49       		.uleb128 0x49
 3230 0098 13       		.uleb128 0x13
 3231 0099 02       		.uleb128 0x2
 3232 009a 17       		.uleb128 0x17
 3233 009b 00       		.byte	0
 3234 009c 00       		.byte	0
 3235 009d 0D       		.uleb128 0xd
 3236 009e 34       		.uleb128 0x34
 3237 009f 00       		.byte	0
 3238 00a0 03       		.uleb128 0x3
 3239 00a1 0E       		.uleb128 0xe
 3240 00a2 3A       		.uleb128 0x3a
 3241 00a3 0B       		.uleb128 0xb
 3242 00a4 3B       		.uleb128 0x3b
 3243 00a5 05       		.uleb128 0x5
 3244 00a6 49       		.uleb128 0x49
 3245 00a7 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 94


 3246 00a8 02       		.uleb128 0x2
 3247 00a9 17       		.uleb128 0x17
 3248 00aa 00       		.byte	0
 3249 00ab 00       		.byte	0
 3250 00ac 0E       		.uleb128 0xe
 3251 00ad 898201   		.uleb128 0x4109
 3252 00b0 01       		.byte	0x1
 3253 00b1 11       		.uleb128 0x11
 3254 00b2 01       		.uleb128 0x1
 3255 00b3 31       		.uleb128 0x31
 3256 00b4 13       		.uleb128 0x13
 3257 00b5 00       		.byte	0
 3258 00b6 00       		.byte	0
 3259 00b7 0F       		.uleb128 0xf
 3260 00b8 8A8201   		.uleb128 0x410a
 3261 00bb 00       		.byte	0
 3262 00bc 02       		.uleb128 0x2
 3263 00bd 18       		.uleb128 0x18
 3264 00be 9142     		.uleb128 0x2111
 3265 00c0 18       		.uleb128 0x18
 3266 00c1 00       		.byte	0
 3267 00c2 00       		.byte	0
 3268 00c3 10       		.uleb128 0x10
 3269 00c4 898201   		.uleb128 0x4109
 3270 00c7 00       		.byte	0
 3271 00c8 11       		.uleb128 0x11
 3272 00c9 01       		.uleb128 0x1
 3273 00ca 31       		.uleb128 0x31
 3274 00cb 13       		.uleb128 0x13
 3275 00cc 00       		.byte	0
 3276 00cd 00       		.byte	0
 3277 00ce 11       		.uleb128 0x11
 3278 00cf 898201   		.uleb128 0x4109
 3279 00d2 01       		.byte	0x1
 3280 00d3 11       		.uleb128 0x11
 3281 00d4 01       		.uleb128 0x1
 3282 00d5 31       		.uleb128 0x31
 3283 00d6 13       		.uleb128 0x13
 3284 00d7 01       		.uleb128 0x1
 3285 00d8 13       		.uleb128 0x13
 3286 00d9 00       		.byte	0
 3287 00da 00       		.byte	0
 3288 00db 12       		.uleb128 0x12
 3289 00dc 2E       		.uleb128 0x2e
 3290 00dd 01       		.byte	0x1
 3291 00de 3F       		.uleb128 0x3f
 3292 00df 19       		.uleb128 0x19
 3293 00e0 03       		.uleb128 0x3
 3294 00e1 0E       		.uleb128 0xe
 3295 00e2 3A       		.uleb128 0x3a
 3296 00e3 0B       		.uleb128 0xb
 3297 00e4 3B       		.uleb128 0x3b
 3298 00e5 0B       		.uleb128 0xb
 3299 00e6 27       		.uleb128 0x27
 3300 00e7 19       		.uleb128 0x19
 3301 00e8 11       		.uleb128 0x11
 3302 00e9 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 95


 3303 00ea 12       		.uleb128 0x12
 3304 00eb 06       		.uleb128 0x6
 3305 00ec 40       		.uleb128 0x40
 3306 00ed 18       		.uleb128 0x18
 3307 00ee 9742     		.uleb128 0x2117
 3308 00f0 19       		.uleb128 0x19
 3309 00f1 01       		.uleb128 0x1
 3310 00f2 13       		.uleb128 0x13
 3311 00f3 00       		.byte	0
 3312 00f4 00       		.byte	0
 3313 00f5 13       		.uleb128 0x13
 3314 00f6 34       		.uleb128 0x34
 3315 00f7 00       		.byte	0
 3316 00f8 03       		.uleb128 0x3
 3317 00f9 0E       		.uleb128 0xe
 3318 00fa 3A       		.uleb128 0x3a
 3319 00fb 0B       		.uleb128 0xb
 3320 00fc 3B       		.uleb128 0x3b
 3321 00fd 0B       		.uleb128 0xb
 3322 00fe 49       		.uleb128 0x49
 3323 00ff 13       		.uleb128 0x13
 3324 0100 00       		.byte	0
 3325 0101 00       		.byte	0
 3326 0102 14       		.uleb128 0x14
 3327 0103 34       		.uleb128 0x34
 3328 0104 00       		.byte	0
 3329 0105 03       		.uleb128 0x3
 3330 0106 0E       		.uleb128 0xe
 3331 0107 3A       		.uleb128 0x3a
 3332 0108 0B       		.uleb128 0xb
 3333 0109 3B       		.uleb128 0x3b
 3334 010a 0B       		.uleb128 0xb
 3335 010b 49       		.uleb128 0x49
 3336 010c 13       		.uleb128 0x13
 3337 010d 02       		.uleb128 0x2
 3338 010e 17       		.uleb128 0x17
 3339 010f 00       		.byte	0
 3340 0110 00       		.byte	0
 3341 0111 15       		.uleb128 0x15
 3342 0112 2E       		.uleb128 0x2e
 3343 0113 01       		.byte	0x1
 3344 0114 3F       		.uleb128 0x3f
 3345 0115 19       		.uleb128 0x19
 3346 0116 03       		.uleb128 0x3
 3347 0117 0E       		.uleb128 0xe
 3348 0118 3A       		.uleb128 0x3a
 3349 0119 0B       		.uleb128 0xb
 3350 011a 3B       		.uleb128 0x3b
 3351 011b 05       		.uleb128 0x5
 3352 011c 27       		.uleb128 0x27
 3353 011d 19       		.uleb128 0x19
 3354 011e 11       		.uleb128 0x11
 3355 011f 01       		.uleb128 0x1
 3356 0120 12       		.uleb128 0x12
 3357 0121 06       		.uleb128 0x6
 3358 0122 40       		.uleb128 0x40
 3359 0123 18       		.uleb128 0x18
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 96


 3360 0124 9742     		.uleb128 0x2117
 3361 0126 19       		.uleb128 0x19
 3362 0127 01       		.uleb128 0x1
 3363 0128 13       		.uleb128 0x13
 3364 0129 00       		.byte	0
 3365 012a 00       		.byte	0
 3366 012b 16       		.uleb128 0x16
 3367 012c 2E       		.uleb128 0x2e
 3368 012d 01       		.byte	0x1
 3369 012e 3F       		.uleb128 0x3f
 3370 012f 19       		.uleb128 0x19
 3371 0130 03       		.uleb128 0x3
 3372 0131 0E       		.uleb128 0xe
 3373 0132 3A       		.uleb128 0x3a
 3374 0133 0B       		.uleb128 0xb
 3375 0134 3B       		.uleb128 0x3b
 3376 0135 05       		.uleb128 0x5
 3377 0136 27       		.uleb128 0x27
 3378 0137 19       		.uleb128 0x19
 3379 0138 49       		.uleb128 0x49
 3380 0139 13       		.uleb128 0x13
 3381 013a 11       		.uleb128 0x11
 3382 013b 01       		.uleb128 0x1
 3383 013c 12       		.uleb128 0x12
 3384 013d 06       		.uleb128 0x6
 3385 013e 40       		.uleb128 0x40
 3386 013f 18       		.uleb128 0x18
 3387 0140 9642     		.uleb128 0x2116
 3388 0142 19       		.uleb128 0x19
 3389 0143 01       		.uleb128 0x1
 3390 0144 13       		.uleb128 0x13
 3391 0145 00       		.byte	0
 3392 0146 00       		.byte	0
 3393 0147 17       		.uleb128 0x17
 3394 0148 2E       		.uleb128 0x2e
 3395 0149 01       		.byte	0x1
 3396 014a 3F       		.uleb128 0x3f
 3397 014b 19       		.uleb128 0x19
 3398 014c 03       		.uleb128 0x3
 3399 014d 0E       		.uleb128 0xe
 3400 014e 3A       		.uleb128 0x3a
 3401 014f 0B       		.uleb128 0xb
 3402 0150 3B       		.uleb128 0x3b
 3403 0151 05       		.uleb128 0x5
 3404 0152 27       		.uleb128 0x27
 3405 0153 19       		.uleb128 0x19
 3406 0154 49       		.uleb128 0x49
 3407 0155 13       		.uleb128 0x13
 3408 0156 11       		.uleb128 0x11
 3409 0157 01       		.uleb128 0x1
 3410 0158 12       		.uleb128 0x12
 3411 0159 06       		.uleb128 0x6
 3412 015a 40       		.uleb128 0x40
 3413 015b 18       		.uleb128 0x18
 3414 015c 9742     		.uleb128 0x2117
 3415 015e 19       		.uleb128 0x19
 3416 015f 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 97


 3417 0160 13       		.uleb128 0x13
 3418 0161 00       		.byte	0
 3419 0162 00       		.byte	0
 3420 0163 18       		.uleb128 0x18
 3421 0164 2E       		.uleb128 0x2e
 3422 0165 00       		.byte	0
 3423 0166 3F       		.uleb128 0x3f
 3424 0167 19       		.uleb128 0x19
 3425 0168 03       		.uleb128 0x3
 3426 0169 0E       		.uleb128 0xe
 3427 016a 3A       		.uleb128 0x3a
 3428 016b 0B       		.uleb128 0xb
 3429 016c 3B       		.uleb128 0x3b
 3430 016d 05       		.uleb128 0x5
 3431 016e 27       		.uleb128 0x27
 3432 016f 19       		.uleb128 0x19
 3433 0170 11       		.uleb128 0x11
 3434 0171 01       		.uleb128 0x1
 3435 0172 12       		.uleb128 0x12
 3436 0173 06       		.uleb128 0x6
 3437 0174 40       		.uleb128 0x40
 3438 0175 18       		.uleb128 0x18
 3439 0176 9742     		.uleb128 0x2117
 3440 0178 19       		.uleb128 0x19
 3441 0179 00       		.byte	0
 3442 017a 00       		.byte	0
 3443 017b 19       		.uleb128 0x19
 3444 017c 34       		.uleb128 0x34
 3445 017d 00       		.byte	0
 3446 017e 03       		.uleb128 0x3
 3447 017f 0E       		.uleb128 0xe
 3448 0180 3A       		.uleb128 0x3a
 3449 0181 0B       		.uleb128 0xb
 3450 0182 3B       		.uleb128 0x3b
 3451 0183 05       		.uleb128 0x5
 3452 0184 49       		.uleb128 0x49
 3453 0185 13       		.uleb128 0x13
 3454 0186 02       		.uleb128 0x2
 3455 0187 18       		.uleb128 0x18
 3456 0188 00       		.byte	0
 3457 0189 00       		.byte	0
 3458 018a 1A       		.uleb128 0x1a
 3459 018b 05       		.uleb128 0x5
 3460 018c 00       		.byte	0
 3461 018d 03       		.uleb128 0x3
 3462 018e 0E       		.uleb128 0xe
 3463 018f 3A       		.uleb128 0x3a
 3464 0190 0B       		.uleb128 0xb
 3465 0191 3B       		.uleb128 0x3b
 3466 0192 05       		.uleb128 0x5
 3467 0193 49       		.uleb128 0x49
 3468 0194 13       		.uleb128 0x13
 3469 0195 02       		.uleb128 0x2
 3470 0196 18       		.uleb128 0x18
 3471 0197 00       		.byte	0
 3472 0198 00       		.byte	0
 3473 0199 1B       		.uleb128 0x1b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 98


 3474 019a 34       		.uleb128 0x34
 3475 019b 00       		.byte	0
 3476 019c 03       		.uleb128 0x3
 3477 019d 0E       		.uleb128 0xe
 3478 019e 3A       		.uleb128 0x3a
 3479 019f 0B       		.uleb128 0xb
 3480 01a0 3B       		.uleb128 0x3b
 3481 01a1 05       		.uleb128 0x5
 3482 01a2 49       		.uleb128 0x49
 3483 01a3 13       		.uleb128 0x13
 3484 01a4 1C       		.uleb128 0x1c
 3485 01a5 05       		.uleb128 0x5
 3486 01a6 00       		.byte	0
 3487 01a7 00       		.byte	0
 3488 01a8 1C       		.uleb128 0x1c
 3489 01a9 34       		.uleb128 0x34
 3490 01aa 00       		.byte	0
 3491 01ab 03       		.uleb128 0x3
 3492 01ac 0E       		.uleb128 0xe
 3493 01ad 3A       		.uleb128 0x3a
 3494 01ae 0B       		.uleb128 0xb
 3495 01af 3B       		.uleb128 0x3b
 3496 01b0 05       		.uleb128 0x5
 3497 01b1 49       		.uleb128 0x49
 3498 01b2 13       		.uleb128 0x13
 3499 01b3 1C       		.uleb128 0x1c
 3500 01b4 0B       		.uleb128 0xb
 3501 01b5 00       		.byte	0
 3502 01b6 00       		.byte	0
 3503 01b7 1D       		.uleb128 0x1d
 3504 01b8 01       		.uleb128 0x1
 3505 01b9 01       		.byte	0x1
 3506 01ba 49       		.uleb128 0x49
 3507 01bb 13       		.uleb128 0x13
 3508 01bc 01       		.uleb128 0x1
 3509 01bd 13       		.uleb128 0x13
 3510 01be 00       		.byte	0
 3511 01bf 00       		.byte	0
 3512 01c0 1E       		.uleb128 0x1e
 3513 01c1 21       		.uleb128 0x21
 3514 01c2 00       		.byte	0
 3515 01c3 49       		.uleb128 0x49
 3516 01c4 13       		.uleb128 0x13
 3517 01c5 2F       		.uleb128 0x2f
 3518 01c6 0B       		.uleb128 0xb
 3519 01c7 00       		.byte	0
 3520 01c8 00       		.byte	0
 3521 01c9 1F       		.uleb128 0x1f
 3522 01ca 34       		.uleb128 0x34
 3523 01cb 00       		.byte	0
 3524 01cc 03       		.uleb128 0x3
 3525 01cd 0E       		.uleb128 0xe
 3526 01ce 3A       		.uleb128 0x3a
 3527 01cf 0B       		.uleb128 0xb
 3528 01d0 3B       		.uleb128 0x3b
 3529 01d1 0B       		.uleb128 0xb
 3530 01d2 49       		.uleb128 0x49
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 99


 3531 01d3 13       		.uleb128 0x13
 3532 01d4 02       		.uleb128 0x2
 3533 01d5 18       		.uleb128 0x18
 3534 01d6 00       		.byte	0
 3535 01d7 00       		.byte	0
 3536 01d8 20       		.uleb128 0x20
 3537 01d9 34       		.uleb128 0x34
 3538 01da 00       		.byte	0
 3539 01db 03       		.uleb128 0x3
 3540 01dc 0E       		.uleb128 0xe
 3541 01dd 3A       		.uleb128 0x3a
 3542 01de 0B       		.uleb128 0xb
 3543 01df 3B       		.uleb128 0x3b
 3544 01e0 0B       		.uleb128 0xb
 3545 01e1 49       		.uleb128 0x49
 3546 01e2 13       		.uleb128 0x13
 3547 01e3 3F       		.uleb128 0x3f
 3548 01e4 19       		.uleb128 0x19
 3549 01e5 02       		.uleb128 0x2
 3550 01e6 18       		.uleb128 0x18
 3551 01e7 00       		.byte	0
 3552 01e8 00       		.byte	0
 3553 01e9 21       		.uleb128 0x21
 3554 01ea 2E       		.uleb128 0x2e
 3555 01eb 01       		.byte	0x1
 3556 01ec 3F       		.uleb128 0x3f
 3557 01ed 19       		.uleb128 0x19
 3558 01ee 03       		.uleb128 0x3
 3559 01ef 0E       		.uleb128 0xe
 3560 01f0 3A       		.uleb128 0x3a
 3561 01f1 0B       		.uleb128 0xb
 3562 01f2 3B       		.uleb128 0x3b
 3563 01f3 0B       		.uleb128 0xb
 3564 01f4 27       		.uleb128 0x27
 3565 01f5 19       		.uleb128 0x19
 3566 01f6 3C       		.uleb128 0x3c
 3567 01f7 19       		.uleb128 0x19
 3568 01f8 01       		.uleb128 0x1
 3569 01f9 13       		.uleb128 0x13
 3570 01fa 00       		.byte	0
 3571 01fb 00       		.byte	0
 3572 01fc 22       		.uleb128 0x22
 3573 01fd 05       		.uleb128 0x5
 3574 01fe 00       		.byte	0
 3575 01ff 49       		.uleb128 0x49
 3576 0200 13       		.uleb128 0x13
 3577 0201 00       		.byte	0
 3578 0202 00       		.byte	0
 3579 0203 23       		.uleb128 0x23
 3580 0204 2E       		.uleb128 0x2e
 3581 0205 00       		.byte	0
 3582 0206 3F       		.uleb128 0x3f
 3583 0207 19       		.uleb128 0x19
 3584 0208 03       		.uleb128 0x3
 3585 0209 0E       		.uleb128 0xe
 3586 020a 3A       		.uleb128 0x3a
 3587 020b 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 100


 3588 020c 3B       		.uleb128 0x3b
 3589 020d 0B       		.uleb128 0xb
 3590 020e 27       		.uleb128 0x27
 3591 020f 19       		.uleb128 0x19
 3592 0210 49       		.uleb128 0x49
 3593 0211 13       		.uleb128 0x13
 3594 0212 3C       		.uleb128 0x3c
 3595 0213 19       		.uleb128 0x19
 3596 0214 00       		.byte	0
 3597 0215 00       		.byte	0
 3598 0216 24       		.uleb128 0x24
 3599 0217 2E       		.uleb128 0x2e
 3600 0218 01       		.byte	0x1
 3601 0219 3F       		.uleb128 0x3f
 3602 021a 19       		.uleb128 0x19
 3603 021b 03       		.uleb128 0x3
 3604 021c 0E       		.uleb128 0xe
 3605 021d 3A       		.uleb128 0x3a
 3606 021e 0B       		.uleb128 0xb
 3607 021f 3B       		.uleb128 0x3b
 3608 0220 0B       		.uleb128 0xb
 3609 0221 27       		.uleb128 0x27
 3610 0222 19       		.uleb128 0x19
 3611 0223 49       		.uleb128 0x49
 3612 0224 13       		.uleb128 0x13
 3613 0225 3C       		.uleb128 0x3c
 3614 0226 19       		.uleb128 0x19
 3615 0227 01       		.uleb128 0x1
 3616 0228 13       		.uleb128 0x13
 3617 0229 00       		.byte	0
 3618 022a 00       		.byte	0
 3619 022b 25       		.uleb128 0x25
 3620 022c 2E       		.uleb128 0x2e
 3621 022d 01       		.byte	0x1
 3622 022e 3F       		.uleb128 0x3f
 3623 022f 19       		.uleb128 0x19
 3624 0230 03       		.uleb128 0x3
 3625 0231 0E       		.uleb128 0xe
 3626 0232 3A       		.uleb128 0x3a
 3627 0233 0B       		.uleb128 0xb
 3628 0234 3B       		.uleb128 0x3b
 3629 0235 0B       		.uleb128 0xb
 3630 0236 27       		.uleb128 0x27
 3631 0237 19       		.uleb128 0x19
 3632 0238 3C       		.uleb128 0x3c
 3633 0239 19       		.uleb128 0x19
 3634 023a 00       		.byte	0
 3635 023b 00       		.byte	0
 3636 023c 00       		.byte	0
 3637              		.section	.debug_loc,"",%progbits
 3638              	.Ldebug_loc0:
 3639              	.LLST0:
 3640 0000 00000000 		.4byte	.LVL0
 3641 0004 0C000000 		.4byte	.LVL1
 3642 0008 0100     		.2byte	0x1
 3643 000a 50       		.byte	0x50
 3644 000b 0C000000 		.4byte	.LVL1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 101


 3645 000f A0000000 		.4byte	.LVL29
 3646 0013 0400     		.2byte	0x4
 3647 0015 F3       		.byte	0xf3
 3648 0016 01       		.uleb128 0x1
 3649 0017 50       		.byte	0x50
 3650 0018 9F       		.byte	0x9f
 3651 0019 A0000000 		.4byte	.LVL29
 3652 001d A2000000 		.4byte	.LVL30
 3653 0021 0100     		.2byte	0x1
 3654 0023 50       		.byte	0x50
 3655 0024 A2000000 		.4byte	.LVL30
 3656 0028 CC000000 		.4byte	.LFE21
 3657 002c 0400     		.2byte	0x4
 3658 002e F3       		.byte	0xf3
 3659 002f 01       		.uleb128 0x1
 3660 0030 50       		.byte	0x50
 3661 0031 9F       		.byte	0x9f
 3662 0032 00000000 		.4byte	0
 3663 0036 00000000 		.4byte	0
 3664              	.LLST1:
 3665 003a 00000000 		.4byte	.LVL0
 3666 003e 66000000 		.4byte	.LVL19
 3667 0042 0100     		.2byte	0x1
 3668 0044 51       		.byte	0x51
 3669 0045 66000000 		.4byte	.LVL19
 3670 0049 A0000000 		.4byte	.LVL29
 3671 004d 0400     		.2byte	0x4
 3672 004f F3       		.byte	0xf3
 3673 0050 01       		.uleb128 0x1
 3674 0051 51       		.byte	0x51
 3675 0052 9F       		.byte	0x9f
 3676 0053 A0000000 		.4byte	.LVL29
 3677 0057 A5000000 		.4byte	.LVL31-1
 3678 005b 0100     		.2byte	0x1
 3679 005d 51       		.byte	0x51
 3680 005e A5000000 		.4byte	.LVL31-1
 3681 0062 CC000000 		.4byte	.LFE21
 3682 0066 0400     		.2byte	0x4
 3683 0068 F3       		.byte	0xf3
 3684 0069 01       		.uleb128 0x1
 3685 006a 51       		.byte	0x51
 3686 006b 9F       		.byte	0x9f
 3687 006c 00000000 		.4byte	0
 3688 0070 00000000 		.4byte	0
 3689              	.LLST2:
 3690 0074 00000000 		.4byte	.LVL0
 3691 0078 6E000000 		.4byte	.LVL22
 3692 007c 0100     		.2byte	0x1
 3693 007e 52       		.byte	0x52
 3694 007f 6E000000 		.4byte	.LVL22
 3695 0083 A0000000 		.4byte	.LVL29
 3696 0087 0400     		.2byte	0x4
 3697 0089 F3       		.byte	0xf3
 3698 008a 01       		.uleb128 0x1
 3699 008b 52       		.byte	0x52
 3700 008c 9F       		.byte	0x9f
 3701 008d A0000000 		.4byte	.LVL29
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 102


 3702 0091 A5000000 		.4byte	.LVL31-1
 3703 0095 0100     		.2byte	0x1
 3704 0097 52       		.byte	0x52
 3705 0098 A5000000 		.4byte	.LVL31-1
 3706 009c CC000000 		.4byte	.LFE21
 3707 00a0 0400     		.2byte	0x4
 3708 00a2 F3       		.byte	0xf3
 3709 00a3 01       		.uleb128 0x1
 3710 00a4 52       		.byte	0x52
 3711 00a5 9F       		.byte	0x9f
 3712 00a6 00000000 		.4byte	0
 3713 00aa 00000000 		.4byte	0
 3714              	.LLST3:
 3715 00ae 00000000 		.4byte	.LVL0
 3716 00b2 84000000 		.4byte	.LVL26
 3717 00b6 0100     		.2byte	0x1
 3718 00b8 53       		.byte	0x53
 3719 00b9 84000000 		.4byte	.LVL26
 3720 00bd 8A000000 		.4byte	.LVL27
 3721 00c1 0400     		.2byte	0x4
 3722 00c3 F3       		.byte	0xf3
 3723 00c4 01       		.uleb128 0x1
 3724 00c5 53       		.byte	0x53
 3725 00c6 9F       		.byte	0x9f
 3726 00c7 8A000000 		.4byte	.LVL27
 3727 00cb 8C000000 		.4byte	.LVL28
 3728 00cf 0100     		.2byte	0x1
 3729 00d1 53       		.byte	0x53
 3730 00d2 8C000000 		.4byte	.LVL28
 3731 00d6 A0000000 		.4byte	.LVL29
 3732 00da 0400     		.2byte	0x4
 3733 00dc F3       		.byte	0xf3
 3734 00dd 01       		.uleb128 0x1
 3735 00de 53       		.byte	0x53
 3736 00df 9F       		.byte	0x9f
 3737 00e0 A0000000 		.4byte	.LVL29
 3738 00e4 A5000000 		.4byte	.LVL31-1
 3739 00e8 0100     		.2byte	0x1
 3740 00ea 53       		.byte	0x53
 3741 00eb A5000000 		.4byte	.LVL31-1
 3742 00ef CC000000 		.4byte	.LFE21
 3743 00f3 0400     		.2byte	0x4
 3744 00f5 F3       		.byte	0xf3
 3745 00f6 01       		.uleb128 0x1
 3746 00f7 53       		.byte	0x53
 3747 00f8 9F       		.byte	0x9f
 3748 00f9 00000000 		.4byte	0
 3749 00fd 00000000 		.4byte	0
 3750              	.LLST4:
 3751 0101 00000000 		.4byte	.LVL0
 3752 0105 A0000000 		.4byte	.LVL29
 3753 0109 0200     		.2byte	0x2
 3754 010b 91       		.byte	0x91
 3755 010c 00       		.sleb128 0
 3756 010d A0000000 		.4byte	.LVL29
 3757 0111 A8000000 		.4byte	.LVL32
 3758 0115 0200     		.2byte	0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 103


 3759 0117 91       		.byte	0x91
 3760 0118 00       		.sleb128 0
 3761 0119 A8000000 		.4byte	.LVL32
 3762 011d CC000000 		.4byte	.LFE21
 3763 0121 0200     		.2byte	0x2
 3764 0123 7D       		.byte	0x7d
 3765 0124 00       		.sleb128 0
 3766 0125 00000000 		.4byte	0
 3767 0129 00000000 		.4byte	0
 3768              	.LLST5:
 3769 012d 26000000 		.4byte	.LVL2
 3770 0131 28000000 		.4byte	.LVL3
 3771 0135 0100     		.2byte	0x1
 3772 0137 50       		.byte	0x50
 3773 0138 2C000000 		.4byte	.LVL4
 3774 013c 2E000000 		.4byte	.LVL5
 3775 0140 0100     		.2byte	0x1
 3776 0142 50       		.byte	0x50
 3777 0143 36000000 		.4byte	.LVL6
 3778 0147 38000000 		.4byte	.LVL7
 3779 014b 0100     		.2byte	0x1
 3780 014d 50       		.byte	0x50
 3781 014e 3C000000 		.4byte	.LVL8
 3782 0152 3E000000 		.4byte	.LVL9
 3783 0156 0100     		.2byte	0x1
 3784 0158 50       		.byte	0x50
 3785 0159 46000000 		.4byte	.LVL10
 3786 015d 48000000 		.4byte	.LVL11
 3787 0161 0100     		.2byte	0x1
 3788 0163 50       		.byte	0x50
 3789 0164 4C000000 		.4byte	.LVL12
 3790 0168 4E000000 		.4byte	.LVL13
 3791 016c 0100     		.2byte	0x1
 3792 016e 50       		.byte	0x50
 3793 016f 56000000 		.4byte	.LVL14
 3794 0173 58000000 		.4byte	.LVL15
 3795 0177 0100     		.2byte	0x1
 3796 0179 50       		.byte	0x50
 3797 017a 5C000000 		.4byte	.LVL16
 3798 017e 5E000000 		.4byte	.LVL17
 3799 0182 0100     		.2byte	0x1
 3800 0184 50       		.byte	0x50
 3801 0185 60000000 		.4byte	.LVL18
 3802 0189 A0000000 		.4byte	.LVL29
 3803 018d 0100     		.2byte	0x1
 3804 018f 50       		.byte	0x50
 3805 0190 00000000 		.4byte	0
 3806 0194 00000000 		.4byte	0
 3807              	.LLST6:
 3808 0198 66000000 		.4byte	.LVL19
 3809 019c 6A000000 		.4byte	.LVL20
 3810 01a0 0100     		.2byte	0x1
 3811 01a2 51       		.byte	0x51
 3812 01a3 00000000 		.4byte	0
 3813 01a7 00000000 		.4byte	0
 3814              	.LLST7:
 3815 01ab 6E000000 		.4byte	.LVL22
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 104


 3816 01af 76000000 		.4byte	.LVL23
 3817 01b3 0100     		.2byte	0x1
 3818 01b5 52       		.byte	0x52
 3819 01b6 76000000 		.4byte	.LVL23
 3820 01ba 7A000000 		.4byte	.LVL24
 3821 01be 0100     		.2byte	0x1
 3822 01c0 51       		.byte	0x51
 3823 01c1 7C000000 		.4byte	.LVL25
 3824 01c5 A0000000 		.4byte	.LVL29
 3825 01c9 0100     		.2byte	0x1
 3826 01cb 52       		.byte	0x52
 3827 01cc 00000000 		.4byte	0
 3828 01d0 00000000 		.4byte	0
 3829              	.LLST8:
 3830 01d4 6A000000 		.4byte	.LVL20
 3831 01d8 6C000000 		.4byte	.LVL21
 3832 01dc 0100     		.2byte	0x1
 3833 01de 51       		.byte	0x51
 3834 01df 00000000 		.4byte	0
 3835 01e3 00000000 		.4byte	0
 3836              	.LLST9:
 3837 01e7 00000000 		.4byte	.LVL33
 3838 01eb 07000000 		.4byte	.LVL34-1
 3839 01ef 0100     		.2byte	0x1
 3840 01f1 50       		.byte	0x50
 3841 01f2 07000000 		.4byte	.LVL34-1
 3842 01f6 4C000000 		.4byte	.LFE22
 3843 01fa 0400     		.2byte	0x4
 3844 01fc F3       		.byte	0xf3
 3845 01fd 01       		.uleb128 0x1
 3846 01fe 50       		.byte	0x50
 3847 01ff 9F       		.byte	0x9f
 3848 0200 00000000 		.4byte	0
 3849 0204 00000000 		.4byte	0
 3850              	.LLST10:
 3851 0208 0A000000 		.4byte	.LVL35
 3852 020c 40000000 		.4byte	.LVL38
 3853 0210 0100     		.2byte	0x1
 3854 0212 56       		.byte	0x56
 3855 0213 00000000 		.4byte	0
 3856 0217 00000000 		.4byte	0
 3857              	.LLST11:
 3858 021b 00000000 		.4byte	.LVL39
 3859 021f 82000000 		.4byte	.LVL40
 3860 0223 0100     		.2byte	0x1
 3861 0225 50       		.byte	0x50
 3862 0226 82000000 		.4byte	.LVL40
 3863 022a CA000000 		.4byte	.LVL46
 3864 022e 0400     		.2byte	0x4
 3865 0230 F3       		.byte	0xf3
 3866 0231 01       		.uleb128 0x1
 3867 0232 50       		.byte	0x50
 3868 0233 9F       		.byte	0x9f
 3869 0234 CA000000 		.4byte	.LVL46
 3870 0238 E0000000 		.4byte	.LFE19
 3871 023c 0100     		.2byte	0x1
 3872 023e 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 105


 3873 023f 00000000 		.4byte	0
 3874 0243 00000000 		.4byte	0
 3875              	.LLST12:
 3876 0247 08000000 		.4byte	.LVL53
 3877 024b B2000000 		.4byte	.LVL57
 3878 024f 0100     		.2byte	0x1
 3879 0251 56       		.byte	0x56
 3880 0252 00000000 		.4byte	0
 3881 0256 00000000 		.4byte	0
 3882              	.LLST13:
 3883 025a 08000000 		.4byte	.LVL61
 3884 025e CE000000 		.4byte	.LVL64
 3885 0262 0100     		.2byte	0x1
 3886 0264 56       		.byte	0x56
 3887 0265 00000000 		.4byte	0
 3888 0269 00000000 		.4byte	0
 3889              	.LLST14:
 3890 026d 00000000 		.4byte	.LVL65
 3891 0271 0A000000 		.4byte	.LVL67
 3892 0275 0100     		.2byte	0x1
 3893 0277 50       		.byte	0x50
 3894 0278 0A000000 		.4byte	.LVL67
 3895 027c 18000000 		.4byte	.LFE4
 3896 0280 0400     		.2byte	0x4
 3897 0282 F3       		.byte	0xf3
 3898 0283 01       		.uleb128 0x1
 3899 0284 50       		.byte	0x50
 3900 0285 9F       		.byte	0x9f
 3901 0286 00000000 		.4byte	0
 3902 028a 00000000 		.4byte	0
 3903              	.LLST15:
 3904 028e 08000000 		.4byte	.LVL66
 3905 0292 10000000 		.4byte	.LVL68
 3906 0296 0100     		.2byte	0x1
 3907 0298 53       		.byte	0x53
 3908 0299 10000000 		.4byte	.LVL68
 3909 029d 18000000 		.4byte	.LFE4
 3910 02a1 0100     		.2byte	0x1
 3911 02a3 50       		.byte	0x50
 3912 02a4 00000000 		.4byte	0
 3913 02a8 00000000 		.4byte	0
 3914              	.LLST16:
 3915 02ac 00000000 		.4byte	.LVL69
 3916 02b0 0C000000 		.4byte	.LVL71
 3917 02b4 0100     		.2byte	0x1
 3918 02b6 50       		.byte	0x50
 3919 02b7 0C000000 		.4byte	.LVL71
 3920 02bb 18000000 		.4byte	.LFE5
 3921 02bf 0400     		.2byte	0x4
 3922 02c1 F3       		.byte	0xf3
 3923 02c2 01       		.uleb128 0x1
 3924 02c3 50       		.byte	0x50
 3925 02c4 9F       		.byte	0x9f
 3926 02c5 00000000 		.4byte	0
 3927 02c9 00000000 		.4byte	0
 3928              	.LLST17:
 3929 02cd 08000000 		.4byte	.LVL70
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 106


 3930 02d1 0E000000 		.4byte	.LVL72
 3931 02d5 0100     		.2byte	0x1
 3932 02d7 53       		.byte	0x53
 3933 02d8 0E000000 		.4byte	.LVL72
 3934 02dc 18000000 		.4byte	.LFE5
 3935 02e0 0100     		.2byte	0x1
 3936 02e2 50       		.byte	0x50
 3937 02e3 00000000 		.4byte	0
 3938 02e7 00000000 		.4byte	0
 3939              	.LLST18:
 3940 02eb 00000000 		.4byte	.LVL73
 3941 02ef 10000000 		.4byte	.LVL75
 3942 02f3 0100     		.2byte	0x1
 3943 02f5 50       		.byte	0x50
 3944 02f6 10000000 		.4byte	.LVL75
 3945 02fa 24000000 		.4byte	.LVL79
 3946 02fe 0100     		.2byte	0x1
 3947 0300 54       		.byte	0x54
 3948 0301 24000000 		.4byte	.LVL79
 3949 0305 74000000 		.4byte	.LFE6
 3950 0309 0600     		.2byte	0x6
 3951 030b F3       		.byte	0xf3
 3952 030c 03       		.uleb128 0x3
 3953 030d F5       		.byte	0xf5
 3954 030e 00       		.uleb128 0
 3955 030f 25       		.uleb128 0x25
 3956 0310 9F       		.byte	0x9f
 3957 0311 00000000 		.4byte	0
 3958 0315 00000000 		.4byte	0
 3959              	.LLST19:
 3960 0319 0A000000 		.4byte	.LVL74
 3961 031d 13000000 		.4byte	.LVL76-1
 3962 0321 0A00     		.2byte	0xa
 3963 0323 73       		.byte	0x73
 3964 0324 00       		.sleb128 0
 3965 0325 32       		.byte	0x32
 3966 0326 24       		.byte	0x24
 3967 0327 03       		.byte	0x3
 3968 0328 00000000 		.4byte	.LANCHOR0
 3969 032c 22       		.byte	0x22
 3970 032d 44000000 		.4byte	.LVL84
 3971 0331 56000000 		.4byte	.LVL86
 3972 0335 0100     		.2byte	0x1
 3973 0337 50       		.byte	0x50
 3974 0338 56000000 		.4byte	.LVL86
 3975 033c 58000000 		.4byte	.LVL87
 3976 0340 0700     		.2byte	0x7
 3977 0342 73       		.byte	0x73
 3978 0343 00       		.sleb128 0
 3979 0344 32       		.byte	0x32
 3980 0345 24       		.byte	0x24
 3981 0346 72       		.byte	0x72
 3982 0347 00       		.sleb128 0
 3983 0348 22       		.byte	0x22
 3984 0349 00000000 		.4byte	0
 3985 034d 00000000 		.4byte	0
 3986              	.LLST20:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 107


 3987 0351 54000000 		.4byte	.LVL85
 3988 0355 58000000 		.4byte	.LVL87
 3989 0359 0200     		.2byte	0x2
 3990 035b 30       		.byte	0x30
 3991 035c 9F       		.byte	0x9f
 3992 035d 5A000000 		.4byte	.LVL88
 3993 0361 74000000 		.4byte	.LFE6
 3994 0365 0100     		.2byte	0x1
 3995 0367 50       		.byte	0x50
 3996 0368 00000000 		.4byte	0
 3997 036c 00000000 		.4byte	0
 3998              	.LLST21:
 3999 0370 1C000000 		.4byte	.LVL77
 4000 0374 21000000 		.4byte	.LVL78-1
 4001 0378 0100     		.2byte	0x1
 4002 037a 50       		.byte	0x50
 4003 037b 24000000 		.4byte	.LVL79
 4004 037f 27000000 		.4byte	.LVL80-1
 4005 0383 0100     		.2byte	0x1
 4006 0385 50       		.byte	0x50
 4007 0386 27000000 		.4byte	.LVL80-1
 4008 038a 3E000000 		.4byte	.LVL82
 4009 038e 0100     		.2byte	0x1
 4010 0390 54       		.byte	0x54
 4011 0391 3E000000 		.4byte	.LVL82
 4012 0395 41000000 		.4byte	.LVL83-1
 4013 0399 0100     		.2byte	0x1
 4014 039b 50       		.byte	0x50
 4015 039c 58000000 		.4byte	.LVL87
 4016 03a0 5C000000 		.4byte	.LVL89
 4017 03a4 0100     		.2byte	0x1
 4018 03a6 54       		.byte	0x54
 4019 03a7 00000000 		.4byte	0
 4020 03ab 00000000 		.4byte	0
 4021              	.LLST22:
 4022 03af 06000000 		.4byte	.LVL90
 4023 03b3 14000000 		.4byte	.LVL92
 4024 03b7 0100     		.2byte	0x1
 4025 03b9 53       		.byte	0x53
 4026 03ba 00000000 		.4byte	0
 4027 03be 00000000 		.4byte	0
 4028              	.LLST23:
 4029 03c2 0C000000 		.4byte	.LVL91
 4030 03c6 16000000 		.4byte	.LVL93
 4031 03ca 0100     		.2byte	0x1
 4032 03cc 50       		.byte	0x50
 4033 03cd 18000000 		.4byte	.LVL94
 4034 03d1 24000000 		.4byte	.LFE7
 4035 03d5 0100     		.2byte	0x1
 4036 03d7 50       		.byte	0x50
 4037 03d8 00000000 		.4byte	0
 4038 03dc 00000000 		.4byte	0
 4039              	.LLST24:
 4040 03e0 00000000 		.4byte	.LVL95
 4041 03e4 24000000 		.4byte	.LVL99
 4042 03e8 0100     		.2byte	0x1
 4043 03ea 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 108


 4044 03eb 24000000 		.4byte	.LVL99
 4045 03ef 30000000 		.4byte	.LFE10
 4046 03f3 0400     		.2byte	0x4
 4047 03f5 F3       		.byte	0xf3
 4048 03f6 01       		.uleb128 0x1
 4049 03f7 50       		.byte	0x50
 4050 03f8 9F       		.byte	0x9f
 4051 03f9 00000000 		.4byte	0
 4052 03fd 00000000 		.4byte	0
 4053              	.LLST25:
 4054 0401 10000000 		.4byte	.LVL96
 4055 0405 12000000 		.4byte	.LVL97
 4056 0409 0100     		.2byte	0x1
 4057 040b 53       		.byte	0x53
 4058 040c 1A000000 		.4byte	.LVL98
 4059 0410 30000000 		.4byte	.LFE10
 4060 0414 0100     		.2byte	0x1
 4061 0416 53       		.byte	0x53
 4062 0417 00000000 		.4byte	0
 4063 041b 00000000 		.4byte	0
 4064              	.LLST26:
 4065 041f 08000000 		.4byte	.LVL100
 4066 0423 12000000 		.4byte	.LVL102
 4067 0427 0100     		.2byte	0x1
 4068 0429 53       		.byte	0x53
 4069 042a 16000000 		.4byte	.LVL103
 4070 042e 1C000000 		.4byte	.LVL104
 4071 0432 0100     		.2byte	0x1
 4072 0434 53       		.byte	0x53
 4073 0435 00000000 		.4byte	0
 4074 0439 00000000 		.4byte	0
 4075              	.LLST27:
 4076 043d 12000000 		.4byte	.LVL107
 4077 0441 14000000 		.4byte	.LVL108
 4078 0445 0100     		.2byte	0x1
 4079 0447 50       		.byte	0x50
 4080 0448 18000000 		.4byte	.LVL109
 4081 044c 20000000 		.4byte	.LVL110
 4082 0450 0100     		.2byte	0x1
 4083 0452 52       		.byte	0x52
 4084 0453 20000000 		.4byte	.LVL110
 4085 0457 50000000 		.4byte	.LFE12
 4086 045b 0100     		.2byte	0x1
 4087 045d 50       		.byte	0x50
 4088 045e 00000000 		.4byte	0
 4089 0462 00000000 		.4byte	0
 4090              	.LLST28:
 4091 0466 08000000 		.4byte	.LVL105
 4092 046a 0E000000 		.4byte	.LVL106
 4093 046e 0100     		.2byte	0x1
 4094 0470 53       		.byte	0x53
 4095 0471 14000000 		.4byte	.LVL108
 4096 0475 26000000 		.4byte	.LVL111
 4097 0479 0100     		.2byte	0x1
 4098 047b 53       		.byte	0x53
 4099 047c 00000000 		.4byte	0
 4100 0480 00000000 		.4byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 109


 4101              	.LLST29:
 4102 0484 10000000 		.4byte	.LVL114
 4103 0488 1A000000 		.4byte	.LVL115
 4104 048c 0700     		.2byte	0x7
 4105 048e 70       		.byte	0x70
 4106 048f 00       		.sleb128 0
 4107 0490 0A       		.byte	0xa
 4108 0491 FFFF     		.2byte	0xffff
 4109 0493 1A       		.byte	0x1a
 4110 0494 9F       		.byte	0x9f
 4111 0495 1A000000 		.4byte	.LVL115
 4112 0499 1C000000 		.4byte	.LVL116
 4113 049d 0100     		.2byte	0x1
 4114 049f 50       		.byte	0x50
 4115 04a0 24000000 		.4byte	.LVL118
 4116 04a4 2C000000 		.4byte	.LVL119
 4117 04a8 0700     		.2byte	0x7
 4118 04aa 70       		.byte	0x70
 4119 04ab 00       		.sleb128 0
 4120 04ac 0A       		.byte	0xa
 4121 04ad FFFF     		.2byte	0xffff
 4122 04af 1A       		.byte	0x1a
 4123 04b0 9F       		.byte	0x9f
 4124 04b1 2C000000 		.4byte	.LVL119
 4125 04b5 34000000 		.4byte	.LVL120
 4126 04b9 0100     		.2byte	0x1
 4127 04bb 53       		.byte	0x53
 4128 04bc 34000000 		.4byte	.LVL120
 4129 04c0 36000000 		.4byte	.LVL121
 4130 04c4 0100     		.2byte	0x1
 4131 04c6 50       		.byte	0x50
 4132 04c7 3C000000 		.4byte	.LVL123
 4133 04cb 44000000 		.4byte	.LVL124
 4134 04cf 0100     		.2byte	0x1
 4135 04d1 53       		.byte	0x53
 4136 04d2 44000000 		.4byte	.LVL124
 4137 04d6 6C000000 		.4byte	.LFE13
 4138 04da 0100     		.2byte	0x1
 4139 04dc 50       		.byte	0x50
 4140 04dd 00000000 		.4byte	0
 4141 04e1 00000000 		.4byte	0
 4142              	.LLST30:
 4143 04e5 08000000 		.4byte	.LVL112
 4144 04e9 0E000000 		.4byte	.LVL113
 4145 04ed 0100     		.2byte	0x1
 4146 04ef 53       		.byte	0x53
 4147 04f0 1C000000 		.4byte	.LVL116
 4148 04f4 22000000 		.4byte	.LVL117
 4149 04f8 0100     		.2byte	0x1
 4150 04fa 53       		.byte	0x53
 4151 04fb 36000000 		.4byte	.LVL121
 4152 04ff 38000000 		.4byte	.LVL122
 4153 0503 0100     		.2byte	0x1
 4154 0505 53       		.byte	0x53
 4155 0506 00000000 		.4byte	0
 4156 050a 00000000 		.4byte	0
 4157              	.LLST31:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 110


 4158 050e 00000000 		.4byte	.LVL127
 4159 0512 06000000 		.4byte	.LVL128
 4160 0516 0100     		.2byte	0x1
 4161 0518 50       		.byte	0x50
 4162 0519 06000000 		.4byte	.LVL128
 4163 051d 0E000000 		.4byte	.LVL129
 4164 0521 0100     		.2byte	0x1
 4165 0523 50       		.byte	0x50
 4166 0524 00000000 		.4byte	0
 4167 0528 00000000 		.4byte	0
 4168              	.LLST32:
 4169 052c 00000000 		.4byte	.LVL131
 4170 0530 06000000 		.4byte	.LVL132
 4171 0534 0100     		.2byte	0x1
 4172 0536 50       		.byte	0x50
 4173 0537 06000000 		.4byte	.LVL132
 4174 053b 08000000 		.4byte	.LVL133
 4175 053f 0600     		.2byte	0x6
 4176 0541 70       		.byte	0x70
 4177 0542 00       		.sleb128 0
 4178 0543 73       		.byte	0x73
 4179 0544 00       		.sleb128 0
 4180 0545 1C       		.byte	0x1c
 4181 0546 9F       		.byte	0x9f
 4182 0547 08000000 		.4byte	.LVL133
 4183 054b 0B000000 		.4byte	.LVL134-1
 4184 054f 0100     		.2byte	0x1
 4185 0551 50       		.byte	0x50
 4186 0552 00000000 		.4byte	0
 4187 0556 00000000 		.4byte	0
 4188              	.LLST33:
 4189 055a 00000000 		.4byte	.LVL137
 4190 055e 2C000000 		.4byte	.LVL140
 4191 0562 0100     		.2byte	0x1
 4192 0564 50       		.byte	0x50
 4193 0565 2C000000 		.4byte	.LVL140
 4194 0569 4C000000 		.4byte	.LFE18
 4195 056d 0400     		.2byte	0x4
 4196 056f F3       		.byte	0xf3
 4197 0570 01       		.uleb128 0x1
 4198 0571 50       		.byte	0x50
 4199 0572 9F       		.byte	0x9f
 4200 0573 00000000 		.4byte	0
 4201 0577 00000000 		.4byte	0
 4202              	.LLST34:
 4203 057b 3C000000 		.4byte	.LVL141
 4204 057f 3E000000 		.4byte	.LVL142
 4205 0583 0600     		.2byte	0x6
 4206 0585 70       		.byte	0x70
 4207 0586 00       		.sleb128 0
 4208 0587 73       		.byte	0x73
 4209 0588 00       		.sleb128 0
 4210 0589 1C       		.byte	0x1c
 4211 058a 9F       		.byte	0x9f
 4212 058b 3E000000 		.4byte	.LVL142
 4213 058f 4C000000 		.4byte	.LFE18
 4214 0593 0100     		.2byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 111


 4215 0595 50       		.byte	0x50
 4216 0596 00000000 		.4byte	0
 4217 059a 00000000 		.4byte	0
 4218              	.LLST35:
 4219 059e 18000000 		.4byte	.LVL138
 4220 05a2 24000000 		.4byte	.LVL139
 4221 05a6 0300     		.2byte	0x3
 4222 05a8 08       		.byte	0x8
 4223 05a9 20       		.byte	0x20
 4224 05aa 9F       		.byte	0x9f
 4225 05ab 24000000 		.4byte	.LVL139
 4226 05af 4C000000 		.4byte	.LFE18
 4227 05b3 0100     		.2byte	0x1
 4228 05b5 52       		.byte	0x52
 4229 05b6 00000000 		.4byte	0
 4230 05ba 00000000 		.4byte	0
 4231              	.LLST36:
 4232 05be 00000000 		.4byte	.LVL143
 4233 05c2 1D000000 		.4byte	.LVL144-1
 4234 05c6 0100     		.2byte	0x1
 4235 05c8 50       		.byte	0x50
 4236 05c9 1D000000 		.4byte	.LVL144-1
 4237 05cd 48000000 		.4byte	.LVL148
 4238 05d1 0400     		.2byte	0x4
 4239 05d3 F3       		.byte	0xf3
 4240 05d4 01       		.uleb128 0x1
 4241 05d5 50       		.byte	0x50
 4242 05d6 9F       		.byte	0x9f
 4243 05d7 48000000 		.4byte	.LVL148
 4244 05db 4A000000 		.4byte	.LVL149
 4245 05df 0100     		.2byte	0x1
 4246 05e1 50       		.byte	0x50
 4247 05e2 4A000000 		.4byte	.LVL149
 4248 05e6 60000000 		.4byte	.LFE20
 4249 05ea 0400     		.2byte	0x4
 4250 05ec F3       		.byte	0xf3
 4251 05ed 01       		.uleb128 0x1
 4252 05ee 50       		.byte	0x50
 4253 05ef 9F       		.byte	0x9f
 4254 05f0 00000000 		.4byte	0
 4255 05f4 00000000 		.4byte	0
 4256              	.LLST37:
 4257 05f8 00000000 		.4byte	.LVL143
 4258 05fc 1D000000 		.4byte	.LVL144-1
 4259 0600 0100     		.2byte	0x1
 4260 0602 51       		.byte	0x51
 4261 0603 1D000000 		.4byte	.LVL144-1
 4262 0607 48000000 		.4byte	.LVL148
 4263 060b 0400     		.2byte	0x4
 4264 060d F3       		.byte	0xf3
 4265 060e 01       		.uleb128 0x1
 4266 060f 51       		.byte	0x51
 4267 0610 9F       		.byte	0x9f
 4268 0611 48000000 		.4byte	.LVL148
 4269 0615 4D000000 		.4byte	.LVL150-1
 4270 0619 0100     		.2byte	0x1
 4271 061b 51       		.byte	0x51
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 112


 4272 061c 4D000000 		.4byte	.LVL150-1
 4273 0620 60000000 		.4byte	.LFE20
 4274 0624 0400     		.2byte	0x4
 4275 0626 F3       		.byte	0xf3
 4276 0627 01       		.uleb128 0x1
 4277 0628 51       		.byte	0x51
 4278 0629 9F       		.byte	0x9f
 4279 062a 00000000 		.4byte	0
 4280 062e 00000000 		.4byte	0
 4281              	.LLST38:
 4282 0632 1C000000 		.4byte	.LVL154
 4283 0636 24000000 		.4byte	.LVL156
 4284 063a 0100     		.2byte	0x1
 4285 063c 54       		.byte	0x54
 4286 063d 00000000 		.4byte	0
 4287 0641 00000000 		.4byte	0
 4288              	.LLST39:
 4289 0645 1C000000 		.4byte	.LVL160
 4290 0649 24000000 		.4byte	.LVL162
 4291 064d 0100     		.2byte	0x1
 4292 064f 54       		.byte	0x54
 4293 0650 00000000 		.4byte	0
 4294 0654 00000000 		.4byte	0
 4295              	.LLST40:
 4296 0658 1C000000 		.4byte	.LVL166
 4297 065c 1F000000 		.4byte	.LVL167-1
 4298 0660 0100     		.2byte	0x1
 4299 0662 50       		.byte	0x50
 4300 0663 1F000000 		.4byte	.LVL167-1
 4301 0667 24000000 		.4byte	.LVL168
 4302 066b 0100     		.2byte	0x1
 4303 066d 54       		.byte	0x54
 4304 066e 24000000 		.4byte	.LVL168
 4305 0672 28000000 		.4byte	.LFE25
 4306 0676 0100     		.2byte	0x1
 4307 0678 50       		.byte	0x50
 4308 0679 00000000 		.4byte	0
 4309 067d 00000000 		.4byte	0
 4310              		.section	.debug_aranges,"",%progbits
 4311 0000 E4000000 		.4byte	0xe4
 4312 0004 0200     		.2byte	0x2
 4313 0006 00000000 		.4byte	.Ldebug_info0
 4314 000a 04       		.byte	0x4
 4315 000b 00       		.byte	0
 4316 000c 0000     		.2byte	0
 4317 000e 0000     		.2byte	0
 4318 0010 00000000 		.4byte	.LFB21
 4319 0014 CC000000 		.4byte	.LFE21-.LFB21
 4320 0018 00000000 		.4byte	.LFB22
 4321 001c 4C000000 		.4byte	.LFE22-.LFB22
 4322 0020 00000000 		.4byte	.LFB19
 4323 0024 E0000000 		.4byte	.LFE19-.LFB19
 4324 0028 00000000 		.4byte	.LFB0
 4325 002c C4000000 		.4byte	.LFE0-.LFB0
 4326 0030 00000000 		.4byte	.LFB1
 4327 0034 D8000000 		.4byte	.LFE1-.LFB1
 4328 0038 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 113


 4329 003c 28000000 		.4byte	.LFE2-.LFB2
 4330 0040 00000000 		.4byte	.LFB3
 4331 0044 E4000000 		.4byte	.LFE3-.LFB3
 4332 0048 00000000 		.4byte	.LFB4
 4333 004c 18000000 		.4byte	.LFE4-.LFB4
 4334 0050 00000000 		.4byte	.LFB5
 4335 0054 18000000 		.4byte	.LFE5-.LFB5
 4336 0058 00000000 		.4byte	.LFB6
 4337 005c 74000000 		.4byte	.LFE6-.LFB6
 4338 0060 00000000 		.4byte	.LFB7
 4339 0064 24000000 		.4byte	.LFE7-.LFB7
 4340 0068 00000000 		.4byte	.LFB8
 4341 006c 10000000 		.4byte	.LFE8-.LFB8
 4342 0070 00000000 		.4byte	.LFB9
 4343 0074 10000000 		.4byte	.LFE9-.LFB9
 4344 0078 00000000 		.4byte	.LFB10
 4345 007c 30000000 		.4byte	.LFE10-.LFB10
 4346 0080 00000000 		.4byte	.LFB11
 4347 0084 48000000 		.4byte	.LFE11-.LFB11
 4348 0088 00000000 		.4byte	.LFB12
 4349 008c 50000000 		.4byte	.LFE12-.LFB12
 4350 0090 00000000 		.4byte	.LFB13
 4351 0094 6C000000 		.4byte	.LFE13-.LFB13
 4352 0098 00000000 		.4byte	.LFB14
 4353 009c 0C000000 		.4byte	.LFE14-.LFB14
 4354 00a0 00000000 		.4byte	.LFB15
 4355 00a4 0C000000 		.4byte	.LFE15-.LFB15
 4356 00a8 00000000 		.4byte	.LFB16
 4357 00ac 24000000 		.4byte	.LFE16-.LFB16
 4358 00b0 00000000 		.4byte	.LFB17
 4359 00b4 28000000 		.4byte	.LFE17-.LFB17
 4360 00b8 00000000 		.4byte	.LFB18
 4361 00bc 4C000000 		.4byte	.LFE18-.LFB18
 4362 00c0 00000000 		.4byte	.LFB20
 4363 00c4 60000000 		.4byte	.LFE20-.LFB20
 4364 00c8 00000000 		.4byte	.LFB23
 4365 00cc 28000000 		.4byte	.LFE23-.LFB23
 4366 00d0 00000000 		.4byte	.LFB24
 4367 00d4 28000000 		.4byte	.LFE24-.LFB24
 4368 00d8 00000000 		.4byte	.LFB25
 4369 00dc 28000000 		.4byte	.LFE25-.LFB25
 4370 00e0 00000000 		.4byte	0
 4371 00e4 00000000 		.4byte	0
 4372              		.section	.debug_ranges,"",%progbits
 4373              	.Ldebug_ranges0:
 4374 0000 00000000 		.4byte	.LFB21
 4375 0004 CC000000 		.4byte	.LFE21
 4376 0008 00000000 		.4byte	.LFB22
 4377 000c 4C000000 		.4byte	.LFE22
 4378 0010 00000000 		.4byte	.LFB19
 4379 0014 E0000000 		.4byte	.LFE19
 4380 0018 00000000 		.4byte	.LFB0
 4381 001c C4000000 		.4byte	.LFE0
 4382 0020 00000000 		.4byte	.LFB1
 4383 0024 D8000000 		.4byte	.LFE1
 4384 0028 00000000 		.4byte	.LFB2
 4385 002c 28000000 		.4byte	.LFE2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 114


 4386 0030 00000000 		.4byte	.LFB3
 4387 0034 E4000000 		.4byte	.LFE3
 4388 0038 00000000 		.4byte	.LFB4
 4389 003c 18000000 		.4byte	.LFE4
 4390 0040 00000000 		.4byte	.LFB5
 4391 0044 18000000 		.4byte	.LFE5
 4392 0048 00000000 		.4byte	.LFB6
 4393 004c 74000000 		.4byte	.LFE6
 4394 0050 00000000 		.4byte	.LFB7
 4395 0054 24000000 		.4byte	.LFE7
 4396 0058 00000000 		.4byte	.LFB8
 4397 005c 10000000 		.4byte	.LFE8
 4398 0060 00000000 		.4byte	.LFB9
 4399 0064 10000000 		.4byte	.LFE9
 4400 0068 00000000 		.4byte	.LFB10
 4401 006c 30000000 		.4byte	.LFE10
 4402 0070 00000000 		.4byte	.LFB11
 4403 0074 48000000 		.4byte	.LFE11
 4404 0078 00000000 		.4byte	.LFB12
 4405 007c 50000000 		.4byte	.LFE12
 4406 0080 00000000 		.4byte	.LFB13
 4407 0084 6C000000 		.4byte	.LFE13
 4408 0088 00000000 		.4byte	.LFB14
 4409 008c 0C000000 		.4byte	.LFE14
 4410 0090 00000000 		.4byte	.LFB15
 4411 0094 0C000000 		.4byte	.LFE15
 4412 0098 00000000 		.4byte	.LFB16
 4413 009c 24000000 		.4byte	.LFE16
 4414 00a0 00000000 		.4byte	.LFB17
 4415 00a4 28000000 		.4byte	.LFE17
 4416 00a8 00000000 		.4byte	.LFB18
 4417 00ac 4C000000 		.4byte	.LFE18
 4418 00b0 00000000 		.4byte	.LFB20
 4419 00b4 60000000 		.4byte	.LFE20
 4420 00b8 00000000 		.4byte	.LFB23
 4421 00bc 28000000 		.4byte	.LFE23
 4422 00c0 00000000 		.4byte	.LFB24
 4423 00c4 28000000 		.4byte	.LFE24
 4424 00c8 00000000 		.4byte	.LFB25
 4425 00cc 28000000 		.4byte	.LFE25
 4426 00d0 00000000 		.4byte	0
 4427 00d4 00000000 		.4byte	0
 4428              		.section	.debug_line,"",%progbits
 4429              	.Ldebug_line0:
 4430 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 4430      0200AA00 
 4430      00000201 
 4430      FB0E0D00 
 4430      01010101 
 4431              	.LASF99:
 4432 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\Volume_ADC.c\000"
 4432      72617465 
 4432      645F536F 
 4432      75726365 
 4432      5C50536F 
 4433              	.LASF11:
 4434 0024 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 115


 4434      313600
 4435              	.LASF40:
 4436 002b 566F6C75 		.ascii	"Volume_ADC_InitConfig\000"
 4436      6D655F41 
 4436      44435F49 
 4436      6E697443 
 4436      6F6E6669 
 4437              	.LASF60:
 4438 0041 566F6C75 		.ascii	"Volume_ADC_GetResult8\000"
 4438      6D655F41 
 4438      44435F47 
 4438      65745265 
 4438      73756C74 
 4439              	.LASF67:
 4440 0057 61646347 		.ascii	"adcGain\000"
 4440      61696E00 
 4441              	.LASF68:
 4442 005f 566F6C75 		.ascii	"Volume_ADC_CountsTo_mVolts\000"
 4442      6D655F41 
 4442      44435F43 
 4442      6F756E74 
 4442      73546F5F 
 4443              	.LASF27:
 4444 007a 696E7075 		.ascii	"inputRange\000"
 4444      7452616E 
 4444      676500
 4445              	.LASF36:
 4446 0085 566F6C75 		.ascii	"Volume_ADC_GainCompensation\000"
 4446      6D655F41 
 4446      44435F47 
 4446      61696E43 
 4446      6F6D7065 
 4447              	.LASF24:
 4448 00a1 67636F72 		.ascii	"gcor\000"
 4448      00
 4449              	.LASF84:
 4450 00a6 566F6C75 		.ascii	"Volume_ADC_convDone\000"
 4450      6D655F41 
 4450      44435F63 
 4450      6F6E7644 
 4450      6F6E6500 
 4451              	.LASF8:
 4452 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 4452      206C6F6E 
 4452      6720756E 
 4452      7369676E 
 4452      65642069 
 4453              	.LASF29:
 4454 00d1 69646561 		.ascii	"idealOddDecGain\000"
 4454      6C4F6464 
 4454      44656347 
 4454      61696E00 
 4455              	.LASF7:
 4456 00e1 6C6F6E67 		.ascii	"long long int\000"
 4456      206C6F6E 
 4456      6720696E 
 4456      7400
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 116


 4457              	.LASF1:
 4458 00ef 7369676E 		.ascii	"signed char\000"
 4458      65642063 
 4458      68617200 
 4459              	.LASF100:
 4460 00fb 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 4460      73657273 
 4460      5C4C756B 
 4460      61732043 
 4460      72657574 
 4461 0129 65445350 		.ascii	"eDSP_6CHamp\\PSoC Workspace\\Controls.cydsn\000"
 4461      5F364348 
 4461      616D705C 
 4461      50536F43 
 4461      20576F72 
 4462              	.LASF15:
 4463 0153 696E7433 		.ascii	"int32\000"
 4463      3200
 4464              	.LASF73:
 4465 0159 566F6C75 		.ascii	"Volume_ADC_CountsTo_uVolts\000"
 4465      6D655F41 
 4465      44435F43 
 4465      6F756E74 
 4465      73546F5F 
 4466              	.LASF5:
 4467 0174 6C6F6E67 		.ascii	"long int\000"
 4467      20696E74 
 4467      00
 4468              	.LASF82:
 4469 017d 566F6C75 		.ascii	"Volume_ADC_gcor\000"
 4469      6D655F41 
 4469      44435F67 
 4469      636F7200 
 4470              	.LASF71:
 4471 018d 566F6C75 		.ascii	"Volume_ADC_CountsTo_Volts\000"
 4471      6D655F41 
 4471      44435F43 
 4471      6F756E74 
 4471      73546F5F 
 4472              	.LASF20:
 4473 01a7 72656731 		.ascii	"reg16\000"
 4473      3600
 4474              	.LASF10:
 4475 01ad 75696E74 		.ascii	"uint8\000"
 4475      3800
 4476              	.LASF91:
 4477 01b3 43794465 		.ascii	"CyDelayUs\000"
 4477      6C617955 
 4477      7300
 4478              	.LASF17:
 4479 01bd 646F7562 		.ascii	"double\000"
 4479      6C6500
 4480              	.LASF81:
 4481 01c4 566F6C75 		.ascii	"Volume_ADC_Read32\000"
 4481      6D655F41 
 4481      44435F52 
 4481      65616433 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 117


 4481      3200
 4482              	.LASF45:
 4483 01d6 566F6C75 		.ascii	"Volume_ADC_SetBufferGain\000"
 4483      6D655F41 
 4483      44435F53 
 4483      65744275 
 4483      66666572 
 4484              	.LASF72:
 4485 01ef 566F6C74 		.ascii	"Volts\000"
 4485      7300
 4486              	.LASF12:
 4487 01f5 75696E74 		.ascii	"uint32\000"
 4487      333200
 4488              	.LASF102:
 4489 01fc 4379496E 		.ascii	"CyIntSetVector\000"
 4489      74536574 
 4489      56656374 
 4489      6F7200
 4490              	.LASF38:
 4491 020b 76616C75 		.ascii	"value\000"
 4491      6500
 4492              	.LASF59:
 4493 0211 7265744D 		.ascii	"retMode\000"
 4493      6F646500 
 4494              	.LASF44:
 4495 0219 566F6C75 		.ascii	"Volume_ADC_Stop\000"
 4495      6D655F41 
 4495      44435F53 
 4495      746F7000 
 4496              	.LASF9:
 4497 0229 756E7369 		.ascii	"unsigned int\000"
 4497      676E6564 
 4497      20696E74 
 4497      00
 4498              	.LASF74:
 4499 0236 75566F6C 		.ascii	"uVolts\000"
 4499      747300
 4500              	.LASF6:
 4501 023d 6C6F6E67 		.ascii	"long unsigned int\000"
 4501      20756E73 
 4501      69676E65 
 4501      6420696E 
 4501      7400
 4502              	.LASF101:
 4503 024f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4503      74657243 
 4503      72697469 
 4503      63616C53 
 4503      65637469 
 4504              	.LASF43:
 4505 0266 566F6C75 		.ascii	"Volume_ADC_Start\000"
 4505      6D655F41 
 4505      44435F53 
 4505      74617274 
 4505      00
 4506              	.LASF42:
 4507 0277 566F6C75 		.ascii	"Volume_ADC_Enable\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 118


 4507      6D655F41 
 4507      44435F45 
 4507      6E61626C 
 4507      6500
 4508              	.LASF4:
 4509 0289 73686F72 		.ascii	"short unsigned int\000"
 4509      7420756E 
 4509      7369676E 
 4509      65642069 
 4509      6E7400
 4510              	.LASF13:
 4511 029c 696E7438 		.ascii	"int8\000"
 4511      00
 4512              	.LASF34:
 4513 02a1 67636F72 		.ascii	"gcorValue\000"
 4513      56616C75 
 4513      6500
 4514              	.LASF79:
 4515 02ab 566F6C75 		.ascii	"Volume_ADC_Read8\000"
 4515      6D655F41 
 4515      44435F52 
 4515      65616438 
 4515      00
 4516              	.LASF70:
 4517 02bc 6D566F6C 		.ascii	"mVolts\000"
 4517      747300
 4518              	.LASF97:
 4519 02c3 566F6C75 		.ascii	"Volume_ADC_theACLK_SetModeRegister\000"
 4519      6D655F41 
 4519      44435F74 
 4519      68654143 
 4519      4C4B5F53 
 4520              	.LASF32:
 4521 02e6 666C6173 		.ascii	"flash\000"
 4521      6800
 4522              	.LASF21:
 4523 02ec 72656733 		.ascii	"reg32\000"
 4523      3200
 4524              	.LASF62:
 4525 02f2 566F6C75 		.ascii	"Volume_ADC_GetResult16\000"
 4525      6D655F41 
 4525      44435F47 
 4525      65745265 
 4525      73756C74 
 4526              	.LASF77:
 4527 0309 566F6C75 		.ascii	"Volume_ADC_SelectConfiguration\000"
 4527      6D655F41 
 4527      44435F53 
 4527      656C6563 
 4527      74436F6E 
 4528              	.LASF16:
 4529 0328 666C6F61 		.ascii	"float32\000"
 4529      74333200 
 4530              	.LASF23:
 4531 0330 73697A65 		.ascii	"sizetype\000"
 4531      74797065 
 4531      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 119


 4532              	.LASF83:
 4533 0339 566F6C75 		.ascii	"Volume_ADC_initVar\000"
 4533      6D655F41 
 4533      44435F69 
 4533      6E697456 
 4533      617200
 4534              	.LASF41:
 4535 034c 566F6C75 		.ascii	"Volume_ADC_Init\000"
 4535      6D655F41 
 4535      44435F49 
 4535      6E697400 
 4536              	.LASF26:
 4537 035c 566F6C75 		.ascii	"Volume_ADC_GCOR_STRUCT\000"
 4537      6D655F41 
 4537      44435F47 
 4537      434F525F 
 4537      53545255 
 4538              	.LASF86:
 4539 0373 566F6C75 		.ascii	"Volume_ADC_started\000"
 4539      6D655F41 
 4539      44435F73 
 4539      74617274 
 4539      656400
 4540              	.LASF49:
 4541 0386 636F6865 		.ascii	"coherency\000"
 4541      72656E63 
 4541      7900
 4542              	.LASF103:
 4543 0390 4379496E 		.ascii	"CyIntSetPriority\000"
 4543      74536574 
 4543      5072696F 
 4543      72697479 
 4543      00
 4544              	.LASF46:
 4545 03a1 6761696E 		.ascii	"gain\000"
 4545      00
 4546              	.LASF95:
 4547 03a6 566F6C75 		.ascii	"Volume_ADC_theACLK_SetDividerRegister\000"
 4547      6D655F41 
 4547      44435F74 
 4547      68654143 
 4547      4C4B5F53 
 4548              	.LASF57:
 4549 03cc 566F6C75 		.ascii	"Volume_ADC_StopConvert\000"
 4549      6D655F41 
 4549      44435F53 
 4549      746F7043 
 4549      6F6E7665 
 4550              	.LASF0:
 4551 03e3 666C6F61 		.ascii	"float\000"
 4551      7400
 4552              	.LASF92:
 4553 03e9 43794578 		.ascii	"CyExitCriticalSection\000"
 4553      69744372 
 4553      69746963 
 4553      616C5365 
 4553      6374696F 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 120


 4554              	.LASF87:
 4555 03ff 566F6C75 		.ascii	"Volume_ADC_Config\000"
 4555      6D655F41 
 4555      44435F43 
 4555      6F6E6669 
 4555      6700
 4556              	.LASF19:
 4557 0411 72656738 		.ascii	"reg8\000"
 4557      00
 4558              	.LASF28:
 4559 0416 69646561 		.ascii	"idealDecGain\000"
 4559      6C446563 
 4559      4761696E 
 4559      00
 4560              	.LASF33:
 4561 0423 6E6F726D 		.ascii	"normalised\000"
 4561      616C6973 
 4561      656400
 4562              	.LASF90:
 4563 042e 43794861 		.ascii	"CyHalt\000"
 4563      6C7400
 4564              	.LASF96:
 4565 0435 566F6C75 		.ascii	"Volume_ADC_Ext_CP_Clk_SetModeRegister\000"
 4565      6D655F41 
 4565      44435F45 
 4565      78745F43 
 4565      505F436C 
 4566              	.LASF2:
 4567 045b 756E7369 		.ascii	"unsigned char\000"
 4567      676E6564 
 4567      20636861 
 4567      7200
 4568              	.LASF88:
 4569 0469 566F6C75 		.ascii	"Volume_ADC_Offset\000"
 4569      6D655F41 
 4569      44435F4F 
 4569      66667365 
 4569      7400
 4570              	.LASF3:
 4571 047b 73686F72 		.ascii	"short int\000"
 4571      7420696E 
 4571      7400
 4572              	.LASF35:
 4573 0485 67636F72 		.ascii	"gcorTmp\000"
 4573      546D7000 
 4574              	.LASF56:
 4575 048d 566F6C75 		.ascii	"Volume_ADC_StartConvert\000"
 4575      6D655F41 
 4575      44435F53 
 4575      74617274 
 4575      436F6E76 
 4576              	.LASF85:
 4577 04a5 566F6C75 		.ascii	"Volume_ADC_stopConversion\000"
 4577      6D655F41 
 4577      44435F73 
 4577      746F7043 
 4577      6F6E7665 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 121


 4578              	.LASF30:
 4579 04bf 7265736F 		.ascii	"resolution\000"
 4579      6C757469 
 4579      6F6E00
 4580              	.LASF63:
 4581 04ca 566F6C75 		.ascii	"Volume_ADC_GetResult32\000"
 4581      6D655F41 
 4581      44435F47 
 4581      65745265 
 4581      73756C74 
 4582              	.LASF94:
 4583 04e1 566F6C75 		.ascii	"Volume_ADC_Ext_CP_Clk_SetDividerRegister\000"
 4583      6D655F41 
 4583      44435F45 
 4583      78745F43 
 4583      505F436C 
 4584              	.LASF75:
 4585 050a 636F6566 		.ascii	"coefA\000"
 4585      4100
 4586              	.LASF76:
 4587 0510 636F6566 		.ascii	"coefB\000"
 4587      4200
 4588              	.LASF48:
 4589 0516 566F6C75 		.ascii	"Volume_ADC_SetCoherency\000"
 4589      6D655F41 
 4589      44435F53 
 4589      6574436F 
 4589      68657265 
 4590              	.LASF18:
 4591 052e 63686172 		.ascii	"char\000"
 4591      00
 4592              	.LASF55:
 4593 0533 6756616C 		.ascii	"gValue\000"
 4593      756500
 4594              	.LASF22:
 4595 053a 63796973 		.ascii	"cyisraddress\000"
 4595      72616464 
 4595      72657373 
 4595      00
 4596              	.LASF31:
 4597 0547 636F6E66 		.ascii	"config\000"
 4597      696700
 4598              	.LASF25:
 4599 054e 6776616C 		.ascii	"gval\000"
 4599      00
 4600              	.LASF53:
 4601 0553 566F6C75 		.ascii	"Volume_ADC_SetGCOR\000"
 4601      6D655F41 
 4601      44435F53 
 4601      65744743 
 4601      4F5200
 4602              	.LASF78:
 4603 0566 72657374 		.ascii	"restart\000"
 4603      61727400 
 4604              	.LASF52:
 4605 056e 746D7056 		.ascii	"tmpValue\000"
 4605      616C7565 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 122


 4605      00
 4606              	.LASF66:
 4607 0577 566F6C75 		.ascii	"Volume_ADC_SetGain\000"
 4607      6D655F41 
 4607      44435F53 
 4607      65744761 
 4607      696E00
 4608              	.LASF65:
 4609 058a 6F666673 		.ascii	"offset\000"
 4609      657400
 4610              	.LASF89:
 4611 0591 566F6C75 		.ascii	"Volume_ADC_CountsPerVolt\000"
 4611      6D655F41 
 4611      44435F43 
 4611      6F756E74 
 4611      73506572 
 4612              	.LASF80:
 4613 05aa 566F6C75 		.ascii	"Volume_ADC_Read16\000"
 4613      6D655F41 
 4613      44435F52 
 4613      65616431 
 4613      3600
 4614              	.LASF69:
 4615 05bc 61646343 		.ascii	"adcCounts\000"
 4615      6F756E74 
 4615      7300
 4616              	.LASF37:
 4617 05c6 566F6C75 		.ascii	"Volume_ADC_SetDSMRef0Reg\000"
 4617      6D655F41 
 4617      44435F53 
 4617      65744453 
 4617      4D526566 
 4618              	.LASF39:
 4619 05df 656E6162 		.ascii	"enableInterrupts\000"
 4619      6C65496E 
 4619      74657272 
 4619      75707473 
 4619      00
 4620              	.LASF51:
 4621 05f0 73746174 		.ascii	"status\000"
 4621      757300
 4622              	.LASF98:
 4623 05f7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4623      4320342E 
 4623      392E3320 
 4623      32303135 
 4623      30333033 
 4624 062a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4624      20726576 
 4624      6973696F 
 4624      6E203232 
 4624      31323230 
 4625 065d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4625      66756E63 
 4625      74696F6E 
 4625      2D736563 
 4625      74696F6E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc3kBJMm.s 			page 123


 4626              	.LASF93:
 4627 0685 566F6C75 		.ascii	"Volume_ADC_AMux_Select\000"
 4627      6D655F41 
 4627      44435F41 
 4627      4D75785F 
 4627      53656C65 
 4628              	.LASF50:
 4629 069c 6761696E 		.ascii	"gainAdjust\000"
 4629      41646A75 
 4629      737400
 4630              	.LASF54:
 4631 06a7 566F6C75 		.ascii	"Volume_ADC_ReadGCOR\000"
 4631      6D655F41 
 4631      44435F52 
 4631      65616447 
 4631      434F5200 
 4632              	.LASF14:
 4633 06bb 696E7431 		.ascii	"int16\000"
 4633      3600
 4634              	.LASF64:
 4635 06c1 566F6C75 		.ascii	"Volume_ADC_SetOffset\000"
 4635      6D655F41 
 4635      44435F53 
 4635      65744F66 
 4635      66736574 
 4636              	.LASF58:
 4637 06d6 566F6C75 		.ascii	"Volume_ADC_IsEndConversion\000"
 4637      6D655F41 
 4637      44435F49 
 4637      73456E64 
 4637      436F6E76 
 4638              	.LASF47:
 4639 06f1 746D7052 		.ascii	"tmpReg\000"
 4639      656700
 4640              	.LASF61:
 4641 06f8 72657375 		.ascii	"result\000"
 4641      6C7400
 4642              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
