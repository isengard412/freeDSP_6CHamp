ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Volume_ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Volume_ADC_GainCompensation,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	Volume_ADC_GainCompensation, %function
  23              	Volume_ADC_GainCompensation:
  24              	.LFB21:
  25              		.file 1 "Generated_Source\\PSoC5\\Volume_ADC.c"
   1:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Volume_ADC.c **** * File Name: Volume_ADC.c
   3:Generated_Source\PSoC5/Volume_ADC.c **** * Version 3.20
   4:Generated_Source\PSoC5/Volume_ADC.c **** *
   5:Generated_Source\PSoC5/Volume_ADC.c **** * Description:
   6:Generated_Source\PSoC5/Volume_ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/Volume_ADC.c **** *  Component.
   8:Generated_Source\PSoC5/Volume_ADC.c **** *
   9:Generated_Source\PSoC5/Volume_ADC.c **** * Note:
  10:Generated_Source\PSoC5/Volume_ADC.c **** *
  11:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/Volume_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/Volume_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/Volume_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/Volume_ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/Volume_ADC.c **** 
  18:Generated_Source\PSoC5/Volume_ADC.c **** #include "Volume_ADC.h"
  19:Generated_Source\PSoC5/Volume_ADC.c **** 
  20:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/Volume_ADC.c ****     #include "Volume_ADC_theACLK.h"
  22:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/Volume_ADC.c **** 
  24:Generated_Source\PSoC5/Volume_ADC.c **** #include "Volume_ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/Volume_ADC.c **** 
  26:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/Volume_ADC.c ****     #include "Volume_ADC_AMux.h"
  28:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/Volume_ADC.c **** 
  30:Generated_Source\PSoC5/Volume_ADC.c **** 
  31:Generated_Source\PSoC5/Volume_ADC.c **** /***************************************
  32:Generated_Source\PSoC5/Volume_ADC.c **** * Global data allocation
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 2


  33:Generated_Source\PSoC5/Volume_ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/Volume_ADC.c **** 
  35:Generated_Source\PSoC5/Volume_ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_convDone = 0u;
  37:Generated_Source\PSoC5/Volume_ADC.c **** 
  38:Generated_Source\PSoC5/Volume_ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/Volume_ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/Volume_ADC.c **** */
  41:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/Volume_ADC.c **** 
  43:Generated_Source\PSoC5/Volume_ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/Volume_ADC.c **** uint8 Volume_ADC_initVar = 0u;
  45:Generated_Source\PSoC5/Volume_ADC.c **** 
  46:Generated_Source\PSoC5/Volume_ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_started = 0u;
  48:Generated_Source\PSoC5/Volume_ADC.c **** 
  49:Generated_Source\PSoC5/Volume_ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/Volume_ADC.c **** volatile uint8 Volume_ADC_Config = 1u;
  51:Generated_Source\PSoC5/Volume_ADC.c **** 
  52:Generated_Source\PSoC5/Volume_ADC.c **** volatile int32 Volume_ADC_Offset;
  53:Generated_Source\PSoC5/Volume_ADC.c **** volatile int32 Volume_ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/Volume_ADC.c **** 
  55:Generated_Source\PSoC5/Volume_ADC.c **** 
  56:Generated_Source\PSoC5/Volume_ADC.c **** /***************************************
  57:Generated_Source\PSoC5/Volume_ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/Volume_ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/Volume_ADC.c **** 
  60:Generated_Source\PSoC5/Volume_ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/Volume_ADC.c **** static Volume_ADC_GCOR_STRUCT Volume_ADC_gcor[Volume_ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/Volume_ADC.c **** 
  63:Generated_Source\PSoC5/Volume_ADC.c **** 
  64:Generated_Source\PSoC5/Volume_ADC.c **** 
  65:Generated_Source\PSoC5/Volume_ADC.c **** /***************************************
  66:Generated_Source\PSoC5/Volume_ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/Volume_ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGa
  70:Generated_Source\PSoC5/Volume_ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/Volume_ADC.c **** 
  73:Generated_Source\PSoC5/Volume_ADC.c **** 
  74:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Init
  76:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/Volume_ADC.c **** *
  78:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
  79:Generated_Source\PSoC5/Volume_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/Volume_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/Volume_ADC.c **** * Volume_ADC_Start().
  82:Generated_Source\PSoC5/Volume_ADC.c **** *
  83:Generated_Source\PSoC5/Volume_ADC.c **** *
  84:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/Volume_ADC.c **** *  None
  86:Generated_Source\PSoC5/Volume_ADC.c **** *
  87:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
  88:Generated_Source\PSoC5/Volume_ADC.c **** *  None
  89:Generated_Source\PSoC5/Volume_ADC.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 3


  90:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Init(void) 
  92:Generated_Source\PSoC5/Volume_ADC.c **** {
  93:Generated_Source\PSoC5/Volume_ADC.c **** 
  94:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Config = 1u;
  95:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_convDone = 0u;
  96:Generated_Source\PSoC5/Volume_ADC.c **** 
  97:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  98:Generated_Source\PSoC5/Volume_ADC.c **** 
  99:Generated_Source\PSoC5/Volume_ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_theACLK_SetMode(CYCLK_DUTY);
 102:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/Volume_ADC.c **** 
 104:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/Volume_ADC.c ****         CyIntSetPriority(Volume_ADC_INTC_NUMBER, Volume_ADC_INTC_PRIOR_NUMBER);
 107:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/Volume_ADC.c **** 
 109:Generated_Source\PSoC5/Volume_ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_DEM0_REG    = Volume_ADC_CFG1_DSM_DEM0;
 111:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_DEM1_REG    = Volume_ADC_CFG1_DSM_DEM1;
 112:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_MISC_REG    = Volume_ADC_CFG1_DSM_MISC;
 113:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CLK_REG    |= Volume_ADC_CFG1_DSM_CLK;
 114:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF1_REG    = Volume_ADC_CFG1_DSM_REF1;
 115:Generated_Source\PSoC5/Volume_ADC.c **** 
 116:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_OUT0_REG    = Volume_ADC_CFG1_DSM_OUT0;
 117:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_OUT1_REG    = Volume_ADC_CFG1_DSM_OUT1;
 118:Generated_Source\PSoC5/Volume_ADC.c **** 
 119:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR0_REG     = Volume_ADC_CFG1_DSM_CR0;
 120:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR1_REG     = Volume_ADC_CFG1_DSM_CR1;
 121:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR3_REG     |= Volume_ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/Volume_ADC.c **** #else
 124:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR3_REG     = Volume_ADC_CFG1_DSM_CR3;
 125:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR8_REG     = Volume_ADC_CFG1_DSM_CR8;
 127:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR9_REG     = Volume_ADC_CFG1_DSM_CR9;
 128:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR13_REG    = Volume_ADC_CFG1_DSM_CR13;
 129:Generated_Source\PSoC5/Volume_ADC.c **** 
 130:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG      = Volume_ADC_CFG1_DEC_SR;
 131:Generated_Source\PSoC5/Volume_ADC.c **** 
 132:Generated_Source\PSoC5/Volume_ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_GainCompensation(Volume_ADC_CFG1_INPUT_RANGE,
 134:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1);
 138:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_GainCompensation(Volume_ADC_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG2);
 144:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_GainCompensation(Volume_ADC_CFG3_INPUT_RANGE,
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 4


 147:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG3);
 151:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_GainCompensation(Volume_ADC_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/Volume_ADC.c ****                                           Volume_ADC_CFG4);
 158:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/Volume_ADC.c **** 
 160:Generated_Source\PSoC5/Volume_ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_GVAL_REG = Volume_ADC_gcor[Volume_ADC_Config - 1u].gval;
 162:Generated_Source\PSoC5/Volume_ADC.c ****     CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor);
 163:Generated_Source\PSoC5/Volume_ADC.c **** 
 164:Generated_Source\PSoC5/Volume_ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_InitConfig(Volume_ADC_Config);
 166:Generated_Source\PSoC5/Volume_ADC.c **** }
 167:Generated_Source\PSoC5/Volume_ADC.c **** 
 168:Generated_Source\PSoC5/Volume_ADC.c **** 
 169:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Enable
 171:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/Volume_ADC.c **** *
 173:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 174:Generated_Source\PSoC5/Volume_ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/Volume_ADC.c **** *
 176:Generated_Source\PSoC5/Volume_ADC.c **** *
 177:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 178:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 179:Generated_Source\PSoC5/Volume_ADC.c **** *
 180:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 181:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 182:Generated_Source\PSoC5/Volume_ADC.c **** *
 183:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 184:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Enable(void) 
 185:Generated_Source\PSoC5/Volume_ADC.c **** {
 186:Generated_Source\PSoC5/Volume_ADC.c **** 	uint8 config;
 187:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
 188:Generated_Source\PSoC5/Volume_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 189:Generated_Source\PSoC5/Volume_ADC.c **** 
 190:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read volatile variable to the local variable */
 191:Generated_Source\PSoC5/Volume_ADC.c ****     config = Volume_ADC_Config;
 192:Generated_Source\PSoC5/Volume_ADC.c ****     
 193:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable active mode power for ADC */
 194:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DEC_REG |= Volume_ADC_ACT_PWR_DEC_EN;
 195:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DSM_REG |= Volume_ADC_ACT_PWR_DSM_EN;
 196:Generated_Source\PSoC5/Volume_ADC.c **** 
 197:Generated_Source\PSoC5/Volume_ADC.c ****      /* Enable alternative active mode power for ADC */
 198:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DEC_REG |= Volume_ADC_STBY_PWR_DEC_EN;
 199:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG |= Volume_ADC_STBY_PWR_DSM_EN;
 200:Generated_Source\PSoC5/Volume_ADC.c **** 
 201:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG |= Volume_ADC_IGNORE_PRESA1;
 203:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 5


 204:Generated_Source\PSoC5/Volume_ADC.c **** 
 205:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR17_REG |= (Volume_ADC_DSM_EN_BUF_VREF | Volume_ADC_DSM_EN_BUF_VCM);
 206:Generated_Source\PSoC5/Volume_ADC.c **** 
 207:Generated_Source\PSoC5/Volume_ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:Generated_Source\PSoC5/Volume_ADC.c ****     #if (((Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P03) || \
 209:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P32)) || \
 210:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:Generated_Source\PSoC5/Volume_ADC.c ****           ((Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||  \
 212:Generated_Source\PSoC5/Volume_ADC.c ****            (Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) || \
 213:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:Generated_Source\PSoC5/Volume_ADC.c ****           ((Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||  \
 215:Generated_Source\PSoC5/Volume_ADC.c ****            (Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) || \
 216:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 3) && \
 217:Generated_Source\PSoC5/Volume_ADC.c ****           ((Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P03) || \
 218:Generated_Source\PSoC5/Volume_ADC.c ****            (Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P32))))
 219:Generated_Source\PSoC5/Volume_ADC.c ****         if (((config == 1u) &&
 220:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 221:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG1_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) ||
 222:Generated_Source\PSoC5/Volume_ADC.c ****             ((config == 2u) &&
 223:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 224:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) ||
 225:Generated_Source\PSoC5/Volume_ADC.c ****             ((config == 3u) &&
 226:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 227:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_REFERENCE == Volume_ADC_EXT_REF_ON_P32))) ||
 228:Generated_Source\PSoC5/Volume_ADC.c ****             ((config == 4u) &&
 229:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P03) ||
 230:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_REFERENCE == Volume_ADC_EXT_REF_ON_P32))))
 231:Generated_Source\PSoC5/Volume_ADC.c ****         {
 232:Generated_Source\PSoC5/Volume_ADC.c ****             /* Disable the REFBUF0 */
 233:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG &= (uint8)~Volume_ADC_DSM_EN_BUF_VREF;
 234:Generated_Source\PSoC5/Volume_ADC.c ****         }
 235:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* External ref */
 236:Generated_Source\PSoC5/Volume_ADC.c **** 
 237:Generated_Source\PSoC5/Volume_ADC.c ****     #if (((Volume_ADC_CFG1_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) || \
 238:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG2_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)) || \
 240:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG3_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/Volume_ADC.c ****          ((Volume_ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:Generated_Source\PSoC5/Volume_ADC.c ****           (Volume_ADC_CFG4_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF))))
 244:Generated_Source\PSoC5/Volume_ADC.c ****         if(((config == 1u) &&
 245:Generated_Source\PSoC5/Volume_ADC.c ****             (Volume_ADC_CFG1_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 246:Generated_Source\PSoC5/Volume_ADC.c ****             ((Volume_ADC_CFG1_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 247:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG1_REFERENCE != Volume_ADC_EXT_REF_ON_P32))) ||
 248:Generated_Source\PSoC5/Volume_ADC.c ****              ((config == 2u) &&
 249:Generated_Source\PSoC5/Volume_ADC.c ****               (Volume_ADC_CFG2_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 250:Generated_Source\PSoC5/Volume_ADC.c ****              ((Volume_ADC_CFG2_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 251:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_REFERENCE != Volume_ADC_EXT_REF_ON_P32))) ||
 252:Generated_Source\PSoC5/Volume_ADC.c ****              ((config == 3u) &&
 253:Generated_Source\PSoC5/Volume_ADC.c ****               (Volume_ADC_CFG3_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 254:Generated_Source\PSoC5/Volume_ADC.c ****              ((Volume_ADC_CFG3_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 255:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_REFERENCE != Volume_ADC_EXT_REF_ON_P32))) ||
 256:Generated_Source\PSoC5/Volume_ADC.c ****              ((config == 4u) &&
 257:Generated_Source\PSoC5/Volume_ADC.c ****               (Volume_ADC_CFG4_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF) &&
 258:Generated_Source\PSoC5/Volume_ADC.c ****              ((Volume_ADC_CFG4_REFERENCE != Volume_ADC_EXT_REF_ON_P03) &&
 259:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_REFERENCE != Volume_ADC_EXT_REF_ON_P32))))
 260:Generated_Source\PSoC5/Volume_ADC.c ****         {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 6


 261:Generated_Source\PSoC5/Volume_ADC.c ****             /* Enable the REFBUF1 */
 262:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF0_REG |= Volume_ADC_DSM_EN_BUF_VREF_INN;
 263:Generated_Source\PSoC5/Volume_ADC.c ****         }
 264:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:Generated_Source\PSoC5/Volume_ADC.c ****     if(config != 0u)
 266:Generated_Source\PSoC5/Volume_ADC.c ****     {
 267:Generated_Source\PSoC5/Volume_ADC.c ****         /* Suppress compiler warning */
 268:Generated_Source\PSoC5/Volume_ADC.c ****     }
 269:Generated_Source\PSoC5/Volume_ADC.c **** 
 270:Generated_Source\PSoC5/Volume_ADC.c ****     /* Wait for 3 microseconds */
 271:Generated_Source\PSoC5/Volume_ADC.c ****     CyDelayUs(Volume_ADC_PRES_DELAY_TIME);
 272:Generated_Source\PSoC5/Volume_ADC.c **** 
 273:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the press circuit */
 274:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG &= (uint8)~Volume_ADC_IGNORE_PRESA1;
 275:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 276:Generated_Source\PSoC5/Volume_ADC.c **** 
 277:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable negative pumps for DSM  */
 278:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PUMP_CR1_REG  |= ( Volume_ADC_PUMP_CR1_CLKSEL | Volume_ADC_PUMP_CR1_FORCE );
 279:Generated_Source\PSoC5/Volume_ADC.c **** 
 280:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable Modulator Chopping if required */
 281:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR2_REG = Volume_ADC_CFG1_DSM_CR2;
 282:Generated_Source\PSoC5/Volume_ADC.c **** 
 283:Generated_Source\PSoC5/Volume_ADC.c ****     /* This is only valid if there is an internal clock */
 284:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
 285:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_PWRMGR_CLK_REG |= Volume_ADC_ACT_PWR_CLK_EN;
 286:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG |= Volume_ADC_STBY_PWR_CLK_EN;
 287:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 288:Generated_Source\PSoC5/Volume_ADC.c **** 
 289:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= Volume_ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 291:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 292:Generated_Source\PSoC5/Volume_ADC.c **** 
 293:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_IRQ_REMOVE == 0u)
 294:Generated_Source\PSoC5/Volume_ADC.c ****         /* Clear a pending interrupt */
 295:Generated_Source\PSoC5/Volume_ADC.c ****         CyIntClearPending(Volume_ADC_INTC_NUMBER);
 296:Generated_Source\PSoC5/Volume_ADC.c ****         /* Enable interrupt */
 297:Generated_Source\PSoC5/Volume_ADC.c ****         CyIntEnable(Volume_ADC_INTC_NUMBER);
 298:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 299:Generated_Source\PSoC5/Volume_ADC.c **** 
 300:Generated_Source\PSoC5/Volume_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 301:Generated_Source\PSoC5/Volume_ADC.c **** 
 302:Generated_Source\PSoC5/Volume_ADC.c **** }
 303:Generated_Source\PSoC5/Volume_ADC.c **** 
 304:Generated_Source\PSoC5/Volume_ADC.c **** 
 305:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Start
 307:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 308:Generated_Source\PSoC5/Volume_ADC.c **** *
 309:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 310:Generated_Source\PSoC5/Volume_ADC.c **** *  Performs all required initialization for this component and enables
 311:Generated_Source\PSoC5/Volume_ADC.c **** *  the power. It configure all the register the first time it is called.
 312:Generated_Source\PSoC5/Volume_ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:Generated_Source\PSoC5/Volume_ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:Generated_Source\PSoC5/Volume_ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_SelectConfiguration( ) function has been called to change
 316:Generated_Source\PSoC5/Volume_ADC.c **** *  the default setting.
 317:Generated_Source\PSoC5/Volume_ADC.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 7


 318:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 319:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 320:Generated_Source\PSoC5/Volume_ADC.c **** *
 321:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 322:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 323:Generated_Source\PSoC5/Volume_ADC.c **** *
 324:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 325:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_initVar:  Used to check the initial configuration,
 326:Generated_Source\PSoC5/Volume_ADC.c **** *  modified when this function is called for the first time.
 327:Generated_Source\PSoC5/Volume_ADC.c **** *
 328:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Start(void) 
 330:Generated_Source\PSoC5/Volume_ADC.c **** {
 331:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_initVar == 0u)
 332:Generated_Source\PSoC5/Volume_ADC.c ****     {
 333:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_started == 0u)
 334:Generated_Source\PSoC5/Volume_ADC.c ****         {
 335:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Init();
 336:Generated_Source\PSoC5/Volume_ADC.c ****         }
 337:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_initVar = 1u;
 338:Generated_Source\PSoC5/Volume_ADC.c ****     }
 339:Generated_Source\PSoC5/Volume_ADC.c **** 
 340:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the ADC */
 341:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Enable();
 342:Generated_Source\PSoC5/Volume_ADC.c **** }
 343:Generated_Source\PSoC5/Volume_ADC.c **** 
 344:Generated_Source\PSoC5/Volume_ADC.c **** 
 345:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 346:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Stop
 347:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 348:Generated_Source\PSoC5/Volume_ADC.c **** *
 349:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 350:Generated_Source\PSoC5/Volume_ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:Generated_Source\PSoC5/Volume_ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:Generated_Source\PSoC5/Volume_ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:Generated_Source\PSoC5/Volume_ADC.c **** *  required.
 354:Generated_Source\PSoC5/Volume_ADC.c **** *
 355:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 356:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 357:Generated_Source\PSoC5/Volume_ADC.c **** *
 358:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 359:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 360:Generated_Source\PSoC5/Volume_ADC.c **** *
 361:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 362:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_Stop(void) 
 363:Generated_Source\PSoC5/Volume_ADC.c **** {
 364:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
 365:Generated_Source\PSoC5/Volume_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 366:Generated_Source\PSoC5/Volume_ADC.c **** 
 367:Generated_Source\PSoC5/Volume_ADC.c ****     /* Stop conversions */
 368:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_CR_REG &= (uint8)~Volume_ADC_DEC_START_CONV;
 369:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |=  Volume_ADC_DEC_INTR_CLEAR;
 370:Generated_Source\PSoC5/Volume_ADC.c **** 
 371:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:Generated_Source\PSoC5/Volume_ADC.c ****        enable PRES */
 373:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG |= Volume_ADC_IGNORE_PRESA1;
 374:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 8


 375:Generated_Source\PSoC5/Volume_ADC.c **** 
 376:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR17_REG &= (uint8)~(Volume_ADC_DSM_EN_BUF_VREF | Volume_ADC_DSM_EN_BUF_VCM);
 377:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF0_REG &= (uint8)~Volume_ADC_DSM_EN_BUF_VREF_INN;
 378:Generated_Source\PSoC5/Volume_ADC.c **** 
 379:Generated_Source\PSoC5/Volume_ADC.c ****     /* Wait for 3 microseconds. */
 380:Generated_Source\PSoC5/Volume_ADC.c ****     CyDelayUs(Volume_ADC_PRES_DELAY_TIME);
 381:Generated_Source\PSoC5/Volume_ADC.c **** 
 382:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the press circuit */
 383:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG &= (uint8)~Volume_ADC_IGNORE_PRESA1;
 384:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 385:Generated_Source\PSoC5/Volume_ADC.c **** 
 386:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to the ADC */
 387:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DSM_REG &= (uint8)~Volume_ADC_ACT_PWR_DSM_EN;
 388:Generated_Source\PSoC5/Volume_ADC.c **** 
 389:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to Decimator block */
 390:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DEC_REG &= (uint8)~Volume_ADC_ACT_PWR_DEC_EN;
 391:Generated_Source\PSoC5/Volume_ADC.c **** 
 392:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable alternative active power to the ADC */
 393:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DEC_REG &= (uint8)~Volume_ADC_STBY_PWR_DEC_EN;
 394:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG &= (uint8)~Volume_ADC_STBY_PWR_DSM_EN;
 395:Generated_Source\PSoC5/Volume_ADC.c **** 
 396:Generated_Source\PSoC5/Volume_ADC.c ****    /* Disable negative pumps for DSM  */
 397:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PUMP_CR1_REG &= (uint8)~(Volume_ADC_PUMP_CR1_CLKSEL | Volume_ADC_PUMP_CR1_FORCE );
 398:Generated_Source\PSoC5/Volume_ADC.c **** 
 399:Generated_Source\PSoC5/Volume_ADC.c ****     /* This is only valid if there is an internal clock */
 400:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
 401:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_PWRMGR_CLK_REG &= (uint8)~Volume_ADC_ACT_PWR_CLK_EN;
 402:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CLK_EN;
 403:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 404:Generated_Source\PSoC5/Volume_ADC.c **** 
 405:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable Modulator Chopping */
 406:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR2_REG &= (uint8)~Volume_ADC_DSM_MOD_CHOP_EN;
 407:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to charge pump clock */
 408:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~Volume_ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 409:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 410:Generated_Source\PSoC5/Volume_ADC.c ****     
 411:Generated_Source\PSoC5/Volume_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 412:Generated_Source\PSoC5/Volume_ADC.c **** }
 413:Generated_Source\PSoC5/Volume_ADC.c **** 
 414:Generated_Source\PSoC5/Volume_ADC.c **** 
 415:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetBufferGain
 417:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Volume_ADC.c **** *
 419:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 420:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets input buffer gain.
 421:Generated_Source\PSoC5/Volume_ADC.c **** *
 422:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 423:Generated_Source\PSoC5/Volume_ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:Generated_Source\PSoC5/Volume_ADC.c **** *
 425:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 426:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 427:Generated_Source\PSoC5/Volume_ADC.c **** *
 428:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 429:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetBufferGain(uint8 gain) 
 430:Generated_Source\PSoC5/Volume_ADC.c **** {
 431:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 9


 432:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg = Volume_ADC_DSM_BUF1_REG & (uint8)~Volume_ADC_DSM_GAIN_MASK;
 433:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= (uint8)(gain << Volume_ADC_DSM_GAIN_SHIFT) & Volume_ADC_DSM_GAIN_MASK;
 434:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_BUF1_REG = tmpReg;
 435:Generated_Source\PSoC5/Volume_ADC.c **** }
 436:Generated_Source\PSoC5/Volume_ADC.c **** 
 437:Generated_Source\PSoC5/Volume_ADC.c **** 
 438:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 439:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetCoherency
 440:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 441:Generated_Source\PSoC5/Volume_ADC.c **** *
 442:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 443:Generated_Source\PSoC5/Volume_ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:Generated_Source\PSoC5/Volume_ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:Generated_Source\PSoC5/Volume_ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:Generated_Source\PSoC5/Volume_ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:Generated_Source\PSoC5/Volume_ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:Generated_Source\PSoC5/Volume_ADC.c **** *  configuration for DMA data transfer.
 449:Generated_Source\PSoC5/Volume_ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:Generated_Source\PSoC5/Volume_ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:Generated_Source\PSoC5/Volume_ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:Generated_Source\PSoC5/Volume_ADC.c **** *  coherency can be set to any byte in the last word read.
 453:Generated_Source\PSoC5/Volume_ADC.c **** *
 454:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 455:Generated_Source\PSoC5/Volume_ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:Generated_Source\PSoC5/Volume_ADC.c **** *           00-Coherency checking off
 457:Generated_Source\PSoC5/Volume_ADC.c **** *           01-low byte is key byte
 458:Generated_Source\PSoC5/Volume_ADC.c **** *           02-middle byte is the key byte
 459:Generated_Source\PSoC5/Volume_ADC.c **** *           03-high byte is the key byte
 460:Generated_Source\PSoC5/Volume_ADC.c **** *
 461:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 462:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 463:Generated_Source\PSoC5/Volume_ADC.c **** *
 464:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetCoherency(uint8 coherency) 
 466:Generated_Source\PSoC5/Volume_ADC.c **** {
 467:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
 468:Generated_Source\PSoC5/Volume_ADC.c **** 
 469:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg = Volume_ADC_DEC_COHER_REG & (uint8)~Volume_ADC_DEC_SAMP_KEY_MASK;
 470:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= coherency & Volume_ADC_DEC_SAMP_KEY_MASK;
 471:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_COHER_REG = tmpReg;
 472:Generated_Source\PSoC5/Volume_ADC.c **** }
 473:Generated_Source\PSoC5/Volume_ADC.c **** 
 474:Generated_Source\PSoC5/Volume_ADC.c **** 
 475:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 476:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetGCOR
 477:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 478:Generated_Source\PSoC5/Volume_ADC.c **** *
 479:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 480:Generated_Source\PSoC5/Volume_ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:Generated_Source\PSoC5/Volume_ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:Generated_Source\PSoC5/Volume_ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:Generated_Source\PSoC5/Volume_ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:Generated_Source\PSoC5/Volume_ADC.c **** *  0x0000 -> 0.000
 485:Generated_Source\PSoC5/Volume_ADC.c **** *  0x8000 -> 1.000
 486:Generated_Source\PSoC5/Volume_ADC.c **** *  0xFFFF -> 1.99997
 487:Generated_Source\PSoC5/Volume_ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:Generated_Source\PSoC5/Volume_ADC.c **** *  gainAdjust and reloaded into the GCOR register.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 10


 489:Generated_Source\PSoC5/Volume_ADC.c **** *
 490:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 491:Generated_Source\PSoC5/Volume_ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:Generated_Source\PSoC5/Volume_ADC.c **** *
 493:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 494:Generated_Source\PSoC5/Volume_ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:Generated_Source\PSoC5/Volume_ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:Generated_Source\PSoC5/Volume_ADC.c **** *             0.00 to 1.9999.
 497:Generated_Source\PSoC5/Volume_ADC.c **** *
 498:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:Generated_Source\PSoC5/Volume_ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:Generated_Source\PSoC5/Volume_ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:Generated_Source\PSoC5/Volume_ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:Generated_Source\PSoC5/Volume_ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:Generated_Source\PSoC5/Volume_ADC.c **** *
 504:Generated_Source\PSoC5/Volume_ADC.c **** ******************************************************************************/
 505:Generated_Source\PSoC5/Volume_ADC.c **** uint8 Volume_ADC_SetGCOR(float32 gainAdjust) 
 506:Generated_Source\PSoC5/Volume_ADC.c **** {
 507:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 tmpReg;
 508:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 status;
 509:Generated_Source\PSoC5/Volume_ADC.c ****     float32 tmpValue;
 510:Generated_Source\PSoC5/Volume_ADC.c **** 
 511:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg = Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor;
 512:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = ((float32)tmpReg / (float32)Volume_ADC_IDEAL_GAIN_CONST);
 513:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = tmpValue * gainAdjust;
 514:Generated_Source\PSoC5/Volume_ADC.c **** 
 515:Generated_Source\PSoC5/Volume_ADC.c ****     if (tmpValue > 1.9999)
 516:Generated_Source\PSoC5/Volume_ADC.c ****     {
 517:Generated_Source\PSoC5/Volume_ADC.c ****         status = 1u;
 518:Generated_Source\PSoC5/Volume_ADC.c ****     }
 519:Generated_Source\PSoC5/Volume_ADC.c ****     else
 520:Generated_Source\PSoC5/Volume_ADC.c ****     {
 521:Generated_Source\PSoC5/Volume_ADC.c ****         tmpValue *= (float32)Volume_ADC_IDEAL_GAIN_CONST;
 522:Generated_Source\PSoC5/Volume_ADC.c **** 		tmpReg = (uint16)tmpValue;
 523:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, tmpReg);
 524:Generated_Source\PSoC5/Volume_ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:Generated_Source\PSoC5/Volume_ADC.c ****        Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor = tmpReg;
 526:Generated_Source\PSoC5/Volume_ADC.c **** 
 527:Generated_Source\PSoC5/Volume_ADC.c ****         status = 0u;
 528:Generated_Source\PSoC5/Volume_ADC.c **** 
 529:Generated_Source\PSoC5/Volume_ADC.c ****     }
 530:Generated_Source\PSoC5/Volume_ADC.c ****     return(status);
 531:Generated_Source\PSoC5/Volume_ADC.c **** }
 532:Generated_Source\PSoC5/Volume_ADC.c **** 
 533:Generated_Source\PSoC5/Volume_ADC.c **** 
 534:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
 535:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_ReadGCOR
 536:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************
 537:Generated_Source\PSoC5/Volume_ADC.c **** *
 538:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 539:Generated_Source\PSoC5/Volume_ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:Generated_Source\PSoC5/Volume_ADC.c **** *  GVAL register settings.
 541:Generated_Source\PSoC5/Volume_ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:Generated_Source\PSoC5/Volume_ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:Generated_Source\PSoC5/Volume_ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:Generated_Source\PSoC5/Volume_ADC.c **** *
 545:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 11


 546:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 547:Generated_Source\PSoC5/Volume_ADC.c **** *
 548:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 549:Generated_Source\PSoC5/Volume_ADC.c **** *  uint16:  Normalized GCOR value.
 550:Generated_Source\PSoC5/Volume_ADC.c **** *
 551:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 552:Generated_Source\PSoC5/Volume_ADC.c **** uint16 Volume_ADC_ReadGCOR(void) 
 553:Generated_Source\PSoC5/Volume_ADC.c **** {
 554:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 gValue;
 555:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 gcorValue;
 556:Generated_Source\PSoC5/Volume_ADC.c **** 
 557:Generated_Source\PSoC5/Volume_ADC.c ****     gValue = Volume_ADC_DEC_GVAL_REG;
 558:Generated_Source\PSoC5/Volume_ADC.c ****     gcorValue = CY_GET_REG16(Volume_ADC_DEC_GCOR_16B_PTR);
 559:Generated_Source\PSoC5/Volume_ADC.c **** 
 560:Generated_Source\PSoC5/Volume_ADC.c ****     if (gValue < Volume_ADC_MAX_GVAL)
 561:Generated_Source\PSoC5/Volume_ADC.c ****     {
 562:Generated_Source\PSoC5/Volume_ADC.c ****         gcorValue <<= Volume_ADC_MAX_GVAL - gValue;
 563:Generated_Source\PSoC5/Volume_ADC.c ****     }
 564:Generated_Source\PSoC5/Volume_ADC.c **** 
 565:Generated_Source\PSoC5/Volume_ADC.c ****     return gcorValue;
 566:Generated_Source\PSoC5/Volume_ADC.c **** }
 567:Generated_Source\PSoC5/Volume_ADC.c **** 
 568:Generated_Source\PSoC5/Volume_ADC.c **** 
 569:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 570:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_StartConvert
 571:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 572:Generated_Source\PSoC5/Volume_ADC.c **** *
 573:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 574:Generated_Source\PSoC5/Volume_ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:Generated_Source\PSoC5/Volume_ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:Generated_Source\PSoC5/Volume_ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:Generated_Source\PSoC5/Volume_ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:Generated_Source\PSoC5/Volume_ADC.c **** *
 579:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 580:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 581:Generated_Source\PSoC5/Volume_ADC.c **** *
 582:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 583:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 584:Generated_Source\PSoC5/Volume_ADC.c **** *
 585:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 586:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_StartConvert(void) 
 587:Generated_Source\PSoC5/Volume_ADC.c **** {
 588:Generated_Source\PSoC5/Volume_ADC.c ****     /* Start the conversion */
 589:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_CR_REG |= Volume_ADC_DEC_START_CONV;
 590:Generated_Source\PSoC5/Volume_ADC.c **** }
 591:Generated_Source\PSoC5/Volume_ADC.c **** 
 592:Generated_Source\PSoC5/Volume_ADC.c **** 
 593:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 594:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_StopConvert
 595:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 596:Generated_Source\PSoC5/Volume_ADC.c **** *
 597:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 598:Generated_Source\PSoC5/Volume_ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion.
 601:Generated_Source\PSoC5/Volume_ADC.c **** *
 602:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 12


 603:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 604:Generated_Source\PSoC5/Volume_ADC.c **** *
 605:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 606:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 607:Generated_Source\PSoC5/Volume_ADC.c **** *
 608:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 609:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_StopConvert(void) 
 610:Generated_Source\PSoC5/Volume_ADC.c **** {
 611:Generated_Source\PSoC5/Volume_ADC.c ****     /* Stop all conversions */
 612:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_CR_REG &= (uint8)~Volume_ADC_DEC_START_CONV;
 613:Generated_Source\PSoC5/Volume_ADC.c **** }
 614:Generated_Source\PSoC5/Volume_ADC.c **** 
 615:Generated_Source\PSoC5/Volume_ADC.c **** 
 616:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 617:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_IsEndConversion
 618:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 619:Generated_Source\PSoC5/Volume_ADC.c **** *
 620:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 621:Generated_Source\PSoC5/Volume_ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:Generated_Source\PSoC5/Volume_ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 623:Generated_Source\PSoC5/Volume_ADC.c **** *  ADC_GetResult32() API.
 624:Generated_Source\PSoC5/Volume_ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:Generated_Source\PSoC5/Volume_ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:Generated_Source\PSoC5/Volume_ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:Generated_Source\PSoC5/Volume_ADC.c **** *
 628:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 629:Generated_Source\PSoC5/Volume_ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:Generated_Source\PSoC5/Volume_ADC.c **** *   Volume_ADC_RETURN_STATUS -   Immediately returns conversion result
 631:Generated_Source\PSoC5/Volume_ADC.c **** *                                      status.
 632:Generated_Source\PSoC5/Volume_ADC.c **** *   Volume_ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:Generated_Source\PSoC5/Volume_ADC.c **** *                                      is complete.
 634:Generated_Source\PSoC5/Volume_ADC.c **** *
 635:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 636:Generated_Source\PSoC5/Volume_ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:Generated_Source\PSoC5/Volume_ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:Generated_Source\PSoC5/Volume_ADC.c **** *
 639:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 640:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Used to check whether conversion is complete
 641:Generated_Source\PSoC5/Volume_ADC.c **** *  or not for single sample mode with resolution is above 16
 642:Generated_Source\PSoC5/Volume_ADC.c **** *
 643:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 644:Generated_Source\PSoC5/Volume_ADC.c **** uint8 Volume_ADC_IsEndConversion(uint8 retMode) 
 645:Generated_Source\PSoC5/Volume_ADC.c **** {
 646:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 status;
 647:Generated_Source\PSoC5/Volume_ADC.c **** 
 648:Generated_Source\PSoC5/Volume_ADC.c ****     do
 649:Generated_Source\PSoC5/Volume_ADC.c ****     {
 650:Generated_Source\PSoC5/Volume_ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:Generated_Source\PSoC5/Volume_ADC.c ****         *   resolution above 16 bit
 652:Generated_Source\PSoC5/Volume_ADC.c ****         */
 653:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_stopConversion != 0u)
 654:Generated_Source\PSoC5/Volume_ADC.c ****         {
 655:Generated_Source\PSoC5/Volume_ADC.c ****             status = Volume_ADC_convDone;
 656:Generated_Source\PSoC5/Volume_ADC.c ****         }
 657:Generated_Source\PSoC5/Volume_ADC.c ****         else
 658:Generated_Source\PSoC5/Volume_ADC.c ****         {
 659:Generated_Source\PSoC5/Volume_ADC.c ****             status = Volume_ADC_DEC_SR_REG & Volume_ADC_DEC_CONV_DONE;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 13


 660:Generated_Source\PSoC5/Volume_ADC.c ****         }
 661:Generated_Source\PSoC5/Volume_ADC.c ****     }while((status != Volume_ADC_DEC_CONV_DONE) && (retMode == Volume_ADC_WAIT_FOR_RESULT));
 662:Generated_Source\PSoC5/Volume_ADC.c **** 
 663:Generated_Source\PSoC5/Volume_ADC.c ****     return(status);
 664:Generated_Source\PSoC5/Volume_ADC.c **** }
 665:Generated_Source\PSoC5/Volume_ADC.c **** 
 666:Generated_Source\PSoC5/Volume_ADC.c **** 
 667:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GetResult8
 669:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC5/Volume_ADC.c **** *
 671:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 672:Generated_Source\PSoC5/Volume_ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:Generated_Source\PSoC5/Volume_ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:Generated_Source\PSoC5/Volume_ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:Generated_Source\PSoC5/Volume_ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:Generated_Source\PSoC5/Volume_ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:Generated_Source\PSoC5/Volume_ADC.c **** *  maximum positive value is 255.
 679:Generated_Source\PSoC5/Volume_ADC.c **** *
 680:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 681:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 682:Generated_Source\PSoC5/Volume_ADC.c **** *
 683:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 684:Generated_Source\PSoC5/Volume_ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:Generated_Source\PSoC5/Volume_ADC.c **** *
 686:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 687:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Cleared in single sample mode with resolution
 688:Generated_Source\PSoC5/Volume_ADC.c **** *                              above 16 bits
 689:Generated_Source\PSoC5/Volume_ADC.c **** *
 690:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 691:Generated_Source\PSoC5/Volume_ADC.c **** int8 Volume_ADC_GetResult8( void ) 
 692:Generated_Source\PSoC5/Volume_ADC.c **** {
 693:Generated_Source\PSoC5/Volume_ADC.c ****     int8 result;
 694:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 coherency;
 695:Generated_Source\PSoC5/Volume_ADC.c **** 
 696:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read active coherency configuration */
 697:Generated_Source\PSoC5/Volume_ADC.c ****     coherency = Volume_ADC_DEC_COHER_REG & Volume_ADC_DEC_SAMP_KEY_MASK;
 698:Generated_Source\PSoC5/Volume_ADC.c **** 
 699:Generated_Source\PSoC5/Volume_ADC.c ****     result = (int8)Volume_ADC_DEC_SAMP_REG;
 700:Generated_Source\PSoC5/Volume_ADC.c **** 
 701:Generated_Source\PSoC5/Volume_ADC.c ****     if(coherency == Volume_ADC_DEC_SAMP_KEY_MID)
 702:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:Generated_Source\PSoC5/Volume_ADC.c ****         (void)Volume_ADC_DEC_SAMPM_REG;
 704:Generated_Source\PSoC5/Volume_ADC.c ****     }
 705:Generated_Source\PSoC5/Volume_ADC.c ****     else  if(coherency == Volume_ADC_DEC_SAMP_KEY_HIGH)
 706:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:Generated_Source\PSoC5/Volume_ADC.c ****         (void)Volume_ADC_DEC_SAMPH_REG;
 708:Generated_Source\PSoC5/Volume_ADC.c ****     }
 709:Generated_Source\PSoC5/Volume_ADC.c ****     else /*No action required for other coherency */
 710:Generated_Source\PSoC5/Volume_ADC.c ****     {
 711:Generated_Source\PSoC5/Volume_ADC.c ****     }
 712:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_stopConversion != 0u)
 714:Generated_Source\PSoC5/Volume_ADC.c ****     {
 715:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_convDone = 0u;
 716:Generated_Source\PSoC5/Volume_ADC.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 14


 717:Generated_Source\PSoC5/Volume_ADC.c ****     return (result);
 718:Generated_Source\PSoC5/Volume_ADC.c **** }
 719:Generated_Source\PSoC5/Volume_ADC.c **** 
 720:Generated_Source\PSoC5/Volume_ADC.c **** 
 721:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GetResult16
 723:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 724:Generated_Source\PSoC5/Volume_ADC.c **** *
 725:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 726:Generated_Source\PSoC5/Volume_ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:Generated_Source\PSoC5/Volume_ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:Generated_Source\PSoC5/Volume_ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:Generated_Source\PSoC5/Volume_ADC.c **** *  function should be used instead. This function returns only signed
 731:Generated_Source\PSoC5/Volume_ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:Generated_Source\PSoC5/Volume_ADC.c **** *  This function supports different coherency settings.
 733:Generated_Source\PSoC5/Volume_ADC.c **** *
 734:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 735:Generated_Source\PSoC5/Volume_ADC.c **** *   void
 736:Generated_Source\PSoC5/Volume_ADC.c **** *
 737:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 738:Generated_Source\PSoC5/Volume_ADC.c **** *  int16:  ADC result.
 739:Generated_Source\PSoC5/Volume_ADC.c **** *
 740:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 741:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Cleared in single sample mode with resolution
 742:Generated_Source\PSoC5/Volume_ADC.c **** *                              above 16 bits
 743:Generated_Source\PSoC5/Volume_ADC.c **** *
 744:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/Volume_ADC.c **** int16 Volume_ADC_GetResult16(void) 
 746:Generated_Source\PSoC5/Volume_ADC.c **** {
 747:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 result;
 748:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 coherency;
 749:Generated_Source\PSoC5/Volume_ADC.c **** 
 750:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read active coherency configuration */
 751:Generated_Source\PSoC5/Volume_ADC.c ****     coherency = Volume_ADC_DEC_COHER_REG & Volume_ADC_DEC_SAMP_KEY_MASK;
 752:Generated_Source\PSoC5/Volume_ADC.c **** 
 753:Generated_Source\PSoC5/Volume_ADC.c ****     if(coherency <= Volume_ADC_DEC_SAMP_KEY_LOW)
 754:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 756:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMPM_REG;
 757:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 8u) | Volume_ADC_DEC_SAMP_REG;
 758:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 759:Generated_Source\PSoC5/Volume_ADC.c ****             result = (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 760:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 761:Generated_Source\PSoC5/Volume_ADC.c ****     }
 762:Generated_Source\PSoC5/Volume_ADC.c ****     else /* MID or HIGH */
 763:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Read middle byte at the end */
 764:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 765:Generated_Source\PSoC5/Volume_ADC.c ****             result = (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 766:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 767:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMP_REG;
 768:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint16)((uint16)Volume_ADC_DEC_SAMPM_REG << 8u);
 769:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 770:Generated_Source\PSoC5/Volume_ADC.c ****         if(coherency == Volume_ADC_DEC_SAMP_KEY_HIGH)
 771:Generated_Source\PSoC5/Volume_ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:Generated_Source\PSoC5/Volume_ADC.c ****             (void)Volume_ADC_DEC_SAMPH_REG;
 773:Generated_Source\PSoC5/Volume_ADC.c ****         }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 15


 774:Generated_Source\PSoC5/Volume_ADC.c ****     }
 775:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_stopConversion != 0u)
 777:Generated_Source\PSoC5/Volume_ADC.c ****     {
 778:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_convDone = 0u;
 779:Generated_Source\PSoC5/Volume_ADC.c ****     }
 780:Generated_Source\PSoC5/Volume_ADC.c **** 
 781:Generated_Source\PSoC5/Volume_ADC.c ****     return ((int16)result);
 782:Generated_Source\PSoC5/Volume_ADC.c **** }
 783:Generated_Source\PSoC5/Volume_ADC.c **** 
 784:Generated_Source\PSoC5/Volume_ADC.c **** 
 785:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 786:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GetResult32
 787:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 788:Generated_Source\PSoC5/Volume_ADC.c **** *
 789:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 790:Generated_Source\PSoC5/Volume_ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution of 8 to 20 bits.
 792:Generated_Source\PSoC5/Volume_ADC.c **** *  This function supports different coherency settings.
 793:Generated_Source\PSoC5/Volume_ADC.c **** *
 794:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 795:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 796:Generated_Source\PSoC5/Volume_ADC.c **** *
 797:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 798:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: Result of the last ADC conversion.
 799:Generated_Source\PSoC5/Volume_ADC.c **** *
 800:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 801:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_convDone:  Cleared in single sample mode with resolution
 802:Generated_Source\PSoC5/Volume_ADC.c **** *                              above 16 bits
 803:Generated_Source\PSoC5/Volume_ADC.c **** *
 804:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 805:Generated_Source\PSoC5/Volume_ADC.c **** int32 Volume_ADC_GetResult32(void) 
 806:Generated_Source\PSoC5/Volume_ADC.c **** {
 807:Generated_Source\PSoC5/Volume_ADC.c ****     uint32 result;
 808:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 coherency;
 809:Generated_Source\PSoC5/Volume_ADC.c ****     #if (CY_PSOC3)
 810:Generated_Source\PSoC5/Volume_ADC.c **** 	    uint16 tmp;
 811:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* CY_PSOC3 */
 812:Generated_Source\PSoC5/Volume_ADC.c **** 
 813:Generated_Source\PSoC5/Volume_ADC.c ****     /* Read active coherency configuration */
 814:Generated_Source\PSoC5/Volume_ADC.c ****     coherency = Volume_ADC_DEC_COHER_REG & Volume_ADC_DEC_SAMP_KEY_MASK;
 815:Generated_Source\PSoC5/Volume_ADC.c **** 
 816:Generated_Source\PSoC5/Volume_ADC.c ****     if(coherency <= Volume_ADC_DEC_SAMP_KEY_LOW)
 817:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 819:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMPH_REG;
 820:Generated_Source\PSoC5/Volume_ADC.c ****             if((result & 0x80u) != 0u)
 821:Generated_Source\PSoC5/Volume_ADC.c ****             {   /* Sign extend */
 822:Generated_Source\PSoC5/Volume_ADC.c ****                 result |= 0xFF00u;
 823:Generated_Source\PSoC5/Volume_ADC.c ****             }
 824:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 8u) | Volume_ADC_DEC_SAMPM_REG;
 825:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 8u) | Volume_ADC_DEC_SAMP_REG;
 826:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 827:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR);
 828:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 829:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 830:Generated_Source\PSoC5/Volume_ADC.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 16


 831:Generated_Source\PSoC5/Volume_ADC.c ****     else if(coherency == Volume_ADC_DEC_SAMP_KEY_MID)
 832:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Read middle byte at the end */
 833:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 834:Generated_Source\PSoC5/Volume_ADC.c ****             result = Volume_ADC_DEC_SAMPH_REG;
 835:Generated_Source\PSoC5/Volume_ADC.c ****             if((result & 0x80u) != 0u)
 836:Generated_Source\PSoC5/Volume_ADC.c ****             {   /* Sign extend */
 837:Generated_Source\PSoC5/Volume_ADC.c ****                 result |= 0xFF00u;
 838:Generated_Source\PSoC5/Volume_ADC.c ****             }
 839:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 840:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 841:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR);
 842:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | Volume_ADC_DEC_SAMP_REG;
 843:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint32)((uint32)Volume_ADC_DEC_SAMPM_REG << 8u);
 844:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 845:Generated_Source\PSoC5/Volume_ADC.c ****     }
 846:Generated_Source\PSoC5/Volume_ADC.c ****     else /*Volume_ADC_DEC_SAMP_KEY_HIGH */
 847:Generated_Source\PSoC5/Volume_ADC.c ****     {
 848:Generated_Source\PSoC5/Volume_ADC.c ****         /* Read MSB byte at the end */
 849:Generated_Source\PSoC5/Volume_ADC.c ****         #if (CY_PSOC3)
 850:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR);
 851:Generated_Source\PSoC5/Volume_ADC.c **** 			tmp = Volume_ADC_DEC_SAMPH_REG;
 852:Generated_Source\PSoC5/Volume_ADC.c ****             if((tmp & 0x80u) != 0u)
 853:Generated_Source\PSoC5/Volume_ADC.c ****             {   /* Sign extend */
 854:Generated_Source\PSoC5/Volume_ADC.c ****                 tmp |= 0xFF00u;
 855:Generated_Source\PSoC5/Volume_ADC.c ****             }
 856:Generated_Source\PSoC5/Volume_ADC.c ****             result |= (uint32)tmp << 16u;
 857:Generated_Source\PSoC5/Volume_ADC.c ****         #else
 858:Generated_Source\PSoC5/Volume_ADC.c ****             result = CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR);
 859:Generated_Source\PSoC5/Volume_ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR) << 16u);
 860:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 861:Generated_Source\PSoC5/Volume_ADC.c ****     }
 862:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_stopConversion != 0u)
 864:Generated_Source\PSoC5/Volume_ADC.c ****     {
 865:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_convDone = 0u;
 866:Generated_Source\PSoC5/Volume_ADC.c ****     }
 867:Generated_Source\PSoC5/Volume_ADC.c **** 
 868:Generated_Source\PSoC5/Volume_ADC.c ****     return ((int32)result);
 869:Generated_Source\PSoC5/Volume_ADC.c **** }
 870:Generated_Source\PSoC5/Volume_ADC.c **** 
 871:Generated_Source\PSoC5/Volume_ADC.c **** 
 872:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 873:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetOffset
 874:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 875:Generated_Source\PSoC5/Volume_ADC.c **** *
 876:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 877:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:Generated_Source\PSoC5/Volume_ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:Generated_Source\PSoC5/Volume_ADC.c **** *  given reading before calculating the voltage conversion.
 880:Generated_Source\PSoC5/Volume_ADC.c **** *
 881:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 882:Generated_Source\PSoC5/Volume_ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:Generated_Source\PSoC5/Volume_ADC.c **** *          connected to the same input voltage.
 884:Generated_Source\PSoC5/Volume_ADC.c **** *
 885:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 886:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 887:Generated_Source\PSoC5/Volume_ADC.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 17


 888:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 889:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Modified to set the user provided offset. This
 890:Generated_Source\PSoC5/Volume_ADC.c **** *  variable is used for offset calibration purpose.
 891:Generated_Source\PSoC5/Volume_ADC.c **** *
 892:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects:
 893:Generated_Source\PSoC5/Volume_ADC.c **** *  Affects the Volume_ADC_CountsTo_Volts,
 894:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsTo_mVolts, Volume_ADC_CountsTo_uVolts functions
 895:Generated_Source\PSoC5/Volume_ADC.c **** *  by subtracting the given offset.
 896:Generated_Source\PSoC5/Volume_ADC.c **** *
 897:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetOffset(int32 offset) 
 899:Generated_Source\PSoC5/Volume_ADC.c **** {
 900:Generated_Source\PSoC5/Volume_ADC.c **** 
 901:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_Offset = offset;
 902:Generated_Source\PSoC5/Volume_ADC.c **** }
 903:Generated_Source\PSoC5/Volume_ADC.c **** 
 904:Generated_Source\PSoC5/Volume_ADC.c **** 
 905:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 906:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetGain
 907:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 908:Generated_Source\PSoC5/Volume_ADC.c **** *
 909:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 910:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:Generated_Source\PSoC5/Volume_ADC.c **** *  functions below. This value is set by default by the reference and
 912:Generated_Source\PSoC5/Volume_ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:Generated_Source\PSoC5/Volume_ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:Generated_Source\PSoC5/Volume_ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 915:Generated_Source\PSoC5/Volume_ADC.c **** *  just the ADC.
 916:Generated_Source\PSoC5/Volume_ADC.c **** *
 917:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 918:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: ADC gain in counts per volt.
 919:Generated_Source\PSoC5/Volume_ADC.c **** *
 920:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 921:Generated_Source\PSoC5/Volume_ADC.c **** *  None
 922:Generated_Source\PSoC5/Volume_ADC.c **** *
 923:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 924:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:Generated_Source\PSoC5/Volume_ADC.c **** *   per volt.
 926:Generated_Source\PSoC5/Volume_ADC.c **** *
 927:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects:
 928:Generated_Source\PSoC5/Volume_ADC.c **** *  Affects the Volume_ADC_CountsTo_Volts,
 929:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsTo_mVolts, Volume_ADC_CountsTo_uVolts functions
 930:Generated_Source\PSoC5/Volume_ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:Generated_Source\PSoC5/Volume_ADC.c **** *
 932:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 933:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SetGain(int32 adcGain) 
 934:Generated_Source\PSoC5/Volume_ADC.c **** {
 935:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_CountsPerVolt = adcGain;
 936:Generated_Source\PSoC5/Volume_ADC.c **** }
 937:Generated_Source\PSoC5/Volume_ADC.c **** 
 938:Generated_Source\PSoC5/Volume_ADC.c **** 
 939:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
 940:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_CountsTo_mVolts
 941:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
 942:Generated_Source\PSoC5/Volume_ADC.c **** *
 943:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
 944:Generated_Source\PSoC5/Volume_ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 18


 945:Generated_Source\PSoC5/Volume_ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:Generated_Source\PSoC5/Volume_ADC.c **** *  be 534 mVolts.
 947:Generated_Source\PSoC5/Volume_ADC.c **** *
 948:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
 949:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:Generated_Source\PSoC5/Volume_ADC.c **** *
 951:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
 952:Generated_Source\PSoC5/Volume_ADC.c **** *  int16:  Result in mVolts
 953:Generated_Source\PSoC5/Volume_ADC.c **** *
 954:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
 955:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Used as the offset while converting ADC counts
 957:Generated_Source\PSoC5/Volume_ADC.c **** *   to mVolts.
 958:Generated_Source\PSoC5/Volume_ADC.c **** *
 959:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
 960:Generated_Source\PSoC5/Volume_ADC.c **** int16 Volume_ADC_CountsTo_mVolts(int32 adcCounts) 
 961:Generated_Source\PSoC5/Volume_ADC.c **** {
 962:Generated_Source\PSoC5/Volume_ADC.c **** 
 963:Generated_Source\PSoC5/Volume_ADC.c ****     int16 mVolts;
 964:Generated_Source\PSoC5/Volume_ADC.c **** 
 965:Generated_Source\PSoC5/Volume_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_CFG1_DEC_DIV != 0)
 967:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG1)
 968:Generated_Source\PSoC5/Volume_ADC.c ****         {
 969:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG1_DEC_DIV;
 970:Generated_Source\PSoC5/Volume_ADC.c ****         }
 971:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG1_DEC_DIV */
 972:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG2_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 1))
 973:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG2)
 974:Generated_Source\PSoC5/Volume_ADC.c ****         {
 975:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG2_DEC_DIV;
 976:Generated_Source\PSoC5/Volume_ADC.c ****         }
 977:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
 978:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG3_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 2))
 979:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG3)
 980:Generated_Source\PSoC5/Volume_ADC.c ****         {
 981:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG3_DEC_DIV;
 982:Generated_Source\PSoC5/Volume_ADC.c ****         }
 983:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
 984:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG4_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 3))
 985:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG4)
 986:Generated_Source\PSoC5/Volume_ADC.c ****         {
 987:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG4_DEC_DIV;
 988:Generated_Source\PSoC5/Volume_ADC.c ****         }
 989:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
 990:Generated_Source\PSoC5/Volume_ADC.c **** 
 991:Generated_Source\PSoC5/Volume_ADC.c ****     /* Subtract ADC offset */
 992:Generated_Source\PSoC5/Volume_ADC.c ****     adcCounts -= Volume_ADC_Offset;
 993:Generated_Source\PSoC5/Volume_ADC.c **** 
 994:Generated_Source\PSoC5/Volume_ADC.c ****     mVolts = (int16)(( adcCounts * Volume_ADC_1MV_COUNTS ) / Volume_ADC_CountsPerVolt) ;
 995:Generated_Source\PSoC5/Volume_ADC.c **** 
 996:Generated_Source\PSoC5/Volume_ADC.c ****     return(mVolts);
 997:Generated_Source\PSoC5/Volume_ADC.c **** }
 998:Generated_Source\PSoC5/Volume_ADC.c **** 
 999:Generated_Source\PSoC5/Volume_ADC.c **** 
1000:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1001:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_CountsTo_Volts
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 19


1002:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1003:Generated_Source\PSoC5/Volume_ADC.c **** *
1004:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1005:Generated_Source\PSoC5/Volume_ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:Generated_Source\PSoC5/Volume_ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:Generated_Source\PSoC5/Volume_ADC.c **** *  returned result would be +1.2345 Volts.
1008:Generated_Source\PSoC5/Volume_ADC.c **** *
1009:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1010:Generated_Source\PSoC5/Volume_ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:Generated_Source\PSoC5/Volume_ADC.c **** *
1012:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1013:Generated_Source\PSoC5/Volume_ADC.c **** *  float32: Result in Volts
1014:Generated_Source\PSoC5/Volume_ADC.c **** *
1015:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
1016:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  used to convert to Volts.
1017:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Used as the offset while converting ADC counts
1018:Generated_Source\PSoC5/Volume_ADC.c **** *   to Volts.
1019:Generated_Source\PSoC5/Volume_ADC.c **** *
1020:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1021:Generated_Source\PSoC5/Volume_ADC.c **** float32 Volume_ADC_CountsTo_Volts(int32 adcCounts) 
1022:Generated_Source\PSoC5/Volume_ADC.c **** {
1023:Generated_Source\PSoC5/Volume_ADC.c **** 
1024:Generated_Source\PSoC5/Volume_ADC.c ****     float32 Volts;
1025:Generated_Source\PSoC5/Volume_ADC.c **** 
1026:Generated_Source\PSoC5/Volume_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_CFG1_DEC_DIV != 0)
1028:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG1)
1029:Generated_Source\PSoC5/Volume_ADC.c ****         {
1030:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG1_DEC_DIV;
1031:Generated_Source\PSoC5/Volume_ADC.c ****         }
1032:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG1_DEC_DIV */
1033:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG2_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 1))
1034:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG2)
1035:Generated_Source\PSoC5/Volume_ADC.c ****         {
1036:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG2_DEC_DIV;
1037:Generated_Source\PSoC5/Volume_ADC.c ****         }
1038:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
1039:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG3_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 2))
1040:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG3)
1041:Generated_Source\PSoC5/Volume_ADC.c ****         {
1042:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG3_DEC_DIV;
1043:Generated_Source\PSoC5/Volume_ADC.c ****         }
1044:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
1045:Generated_Source\PSoC5/Volume_ADC.c ****     #if((Volume_ADC_CFG4_DEC_DIV != 0) && (Volume_ADC_DEFAULT_NUM_CONFIGS > 3))
1046:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_Config == Volume_ADC_CFG4)
1047:Generated_Source\PSoC5/Volume_ADC.c ****         {
1048:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG4_DEC_DIV;
1049:Generated_Source\PSoC5/Volume_ADC.c ****         }
1050:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_CFG2_DEC_DIV */
1051:Generated_Source\PSoC5/Volume_ADC.c **** 
1052:Generated_Source\PSoC5/Volume_ADC.c ****     /* Subtract ADC offset */
1053:Generated_Source\PSoC5/Volume_ADC.c ****     adcCounts -= Volume_ADC_Offset;
1054:Generated_Source\PSoC5/Volume_ADC.c **** 
1055:Generated_Source\PSoC5/Volume_ADC.c ****     Volts = (float32)adcCounts / (float32)Volume_ADC_CountsPerVolt;
1056:Generated_Source\PSoC5/Volume_ADC.c **** 
1057:Generated_Source\PSoC5/Volume_ADC.c ****     return( Volts );
1058:Generated_Source\PSoC5/Volume_ADC.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 20


1059:Generated_Source\PSoC5/Volume_ADC.c **** 
1060:Generated_Source\PSoC5/Volume_ADC.c **** 
1061:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1062:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_CountsTo_uVolts
1063:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1064:Generated_Source\PSoC5/Volume_ADC.c **** *
1065:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1066:Generated_Source\PSoC5/Volume_ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:Generated_Source\PSoC5/Volume_ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:Generated_Source\PSoC5/Volume_ADC.c **** *
1069:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1070:Generated_Source\PSoC5/Volume_ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1071:Generated_Source\PSoC5/Volume_ADC.c **** *
1072:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1073:Generated_Source\PSoC5/Volume_ADC.c **** *  int32:  Result in uVolts
1074:Generated_Source\PSoC5/Volume_ADC.c **** *
1075:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
1076:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_Offset:  Used as the offset while converting ADC counts
1078:Generated_Source\PSoC5/Volume_ADC.c **** *   to mVolts.
1079:Generated_Source\PSoC5/Volume_ADC.c **** *
1080:Generated_Source\PSoC5/Volume_ADC.c **** * Theory:
1081:Generated_Source\PSoC5/Volume_ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:Generated_Source\PSoC5/Volume_ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:Generated_Source\PSoC5/Volume_ADC.c **** *
1084:Generated_Source\PSoC5/Volume_ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)Volume_ADC_CountsPerVolt / B));
1085:Generated_Source\PSoC5/Volume_ADC.c **** *
1086:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1087:Generated_Source\PSoC5/Volume_ADC.c **** int32 Volume_ADC_CountsTo_uVolts(int32 adcCounts) 
1088:Generated_Source\PSoC5/Volume_ADC.c **** {
1089:Generated_Source\PSoC5/Volume_ADC.c **** 
1090:Generated_Source\PSoC5/Volume_ADC.c ****     int32 uVolts;
1091:Generated_Source\PSoC5/Volume_ADC.c ****     int32 coefA;
1092:Generated_Source\PSoC5/Volume_ADC.c ****     int32 coefB;
1093:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 resolution;
1094:Generated_Source\PSoC5/Volume_ADC.c **** 
1095:Generated_Source\PSoC5/Volume_ADC.c ****     /* Set the resolution based on the configuration */
1096:Generated_Source\PSoC5/Volume_ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:Generated_Source\PSoC5/Volume_ADC.c ****     if (Volume_ADC_Config == Volume_ADC_CFG1)
1098:Generated_Source\PSoC5/Volume_ADC.c ****     {
1099:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG1_RESOLUTION;
1100:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG1_DEC_DIV != 0)
1101:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG1_DEC_DIV;
1102:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG1_DEC_DIV */
1103:Generated_Source\PSoC5/Volume_ADC.c ****     }
1104:Generated_Source\PSoC5/Volume_ADC.c ****     else if (Volume_ADC_Config == Volume_ADC_CFG2)
1105:Generated_Source\PSoC5/Volume_ADC.c ****     {
1106:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG2_RESOLUTION;
1107:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG2_DEC_DIV != 0)
1108:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG2_DEC_DIV;
1109:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG2_DEC_DIV */
1110:Generated_Source\PSoC5/Volume_ADC.c ****     }
1111:Generated_Source\PSoC5/Volume_ADC.c ****     else if (Volume_ADC_Config == Volume_ADC_CFG3)
1112:Generated_Source\PSoC5/Volume_ADC.c ****     {
1113:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG3_RESOLUTION;
1114:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG3_DEC_DIV != 0)
1115:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG3_DEC_DIV;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 21


1116:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG3_DEC_DIV */
1117:Generated_Source\PSoC5/Volume_ADC.c ****     }
1118:Generated_Source\PSoC5/Volume_ADC.c ****     else
1119:Generated_Source\PSoC5/Volume_ADC.c ****     {
1120:Generated_Source\PSoC5/Volume_ADC.c ****         resolution = Volume_ADC_CFG4_RESOLUTION;
1121:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG4_DEC_DIV != 0)
1122:Generated_Source\PSoC5/Volume_ADC.c ****             adcCounts /= Volume_ADC_CFG4_DEC_DIV;
1123:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_CFG4_DEC_DIV */
1124:Generated_Source\PSoC5/Volume_ADC.c ****     }
1125:Generated_Source\PSoC5/Volume_ADC.c **** 
1126:Generated_Source\PSoC5/Volume_ADC.c ****     switch (resolution)
1127:Generated_Source\PSoC5/Volume_ADC.c ****     {
1128:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_12) || \
1129:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_12) || \
1130:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_12) || \
1131:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_12) )
1132:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_12:
1133:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_2;
1134:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_2;
1135:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1136:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_12 */    
1137:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_13) || \
1138:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_13) || \
1139:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_13) || \
1140:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_13) )
1141:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_13:
1142:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_4;
1143:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_4;
1144:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1145:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_13 */    
1146:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_14) || \
1147:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_14) || \
1148:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_14) || \
1149:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_14) )
1150:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_14:
1151:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_8;
1152:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_8;
1153:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1154:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_14 */    
1155:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_15) || \
1156:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_15) || \
1157:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_15) || \
1158:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_15) )
1159:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_15:
1160:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_16;
1161:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_16;
1162:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1163:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_15 */    
1164:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_16) || \
1165:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_16) || \
1166:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_16) || \
1167:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_16) )
1168:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_16:
1169:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_32;
1170:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_32;
1171:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1172:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_16 */    
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 22


1173:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_17) || \
1174:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_17) || \
1175:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_17) || \
1176:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_17) )
1177:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_17:
1178:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_64;
1179:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_64;
1180:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1181:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_17 */    
1182:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_18) || \
1183:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_18) || \
1184:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_18) || \
1185:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_18) )
1186:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_18:
1187:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_125;
1188:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_125;
1189:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1190:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_18 */    
1191:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_19) || \
1192:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_19) || \
1193:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_19) || \
1194:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_19) )
1195:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_19:
1196:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_250;
1197:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_250;
1198:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1199:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_19 */    
1200:Generated_Source\PSoC5/Volume_ADC.c ****         #if( (Volume_ADC_CFG1_RESOLUTION == Volume_ADC__BITS_20) || \
1201:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG2_RESOLUTION == Volume_ADC__BITS_20) || \
1202:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG3_RESOLUTION == Volume_ADC__BITS_20) || \
1203:Generated_Source\PSoC5/Volume_ADC.c ****              (Volume_ADC_CFG4_RESOLUTION == Volume_ADC__BITS_20) )
1204:Generated_Source\PSoC5/Volume_ADC.c ****             case (uint8)Volume_ADC__BITS_20:
1205:Generated_Source\PSoC5/Volume_ADC.c ****                 coefA = Volume_ADC_1UV_COUNTS / Volume_ADC_DIVISOR_500;
1206:Generated_Source\PSoC5/Volume_ADC.c ****                 coefB = Volume_ADC_DIVISOR_500;
1207:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1208:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC__BITS_20 */    
1209:Generated_Source\PSoC5/Volume_ADC.c ****         default:    /* resolution < 12 */
1210:Generated_Source\PSoC5/Volume_ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:Generated_Source\PSoC5/Volume_ADC.c ****             coefA = Volume_ADC_1UV_COUNTS;
1212:Generated_Source\PSoC5/Volume_ADC.c ****             coefB = Volume_ADC_DIVISOR_1;
1213:Generated_Source\PSoC5/Volume_ADC.c ****             break;
1214:Generated_Source\PSoC5/Volume_ADC.c ****     }
1215:Generated_Source\PSoC5/Volume_ADC.c ****     coefB = Volume_ADC_CountsPerVolt / coefB;
1216:Generated_Source\PSoC5/Volume_ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * Volume_ADC_Offset) / coefB);
1217:Generated_Source\PSoC5/Volume_ADC.c **** 
1218:Generated_Source\PSoC5/Volume_ADC.c ****     return( uVolts );
1219:Generated_Source\PSoC5/Volume_ADC.c **** }
1220:Generated_Source\PSoC5/Volume_ADC.c **** 
1221:Generated_Source\PSoC5/Volume_ADC.c **** 
1222:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1223:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_InitConfig(uint8 config)
1224:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1225:Generated_Source\PSoC5/Volume_ADC.c **** *
1226:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1227:Generated_Source\PSoC5/Volume_ADC.c **** *  Initializes all registers based on customizer settings
1228:Generated_Source\PSoC5/Volume_ADC.c **** *
1229:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 23


1230:Generated_Source\PSoC5/Volume_ADC.c **** *   void
1231:Generated_Source\PSoC5/Volume_ADC.c **** *
1232:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1233:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1234:Generated_Source\PSoC5/Volume_ADC.c **** *
1235:Generated_Source\PSoC5/Volume_ADC.c **** * Global variables:
1236:Generated_Source\PSoC5/Volume_ADC.c **** *  Volume_ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:Generated_Source\PSoC5/Volume_ADC.c **** *
1238:Generated_Source\PSoC5/Volume_ADC.c **** * Side Effects: Rewrites the coherency set by Volume_ADC_SetCoherency()
1239:Generated_Source\PSoC5/Volume_ADC.c **** *   API to the default value.
1240:Generated_Source\PSoC5/Volume_ADC.c **** *
1241:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1242:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_InitConfig(uint8 config) 
1243:Generated_Source\PSoC5/Volume_ADC.c **** {
1244:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_stopConversion = 0u;
1245:Generated_Source\PSoC5/Volume_ADC.c **** 
1246:Generated_Source\PSoC5/Volume_ADC.c ****     if (config == 1u)
1247:Generated_Source\PSoC5/Volume_ADC.c ****     {
1248:Generated_Source\PSoC5/Volume_ADC.c ****         /* Default Config */
1249:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG1_DEC_CR;
1250:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG1_DEC_SHIFT1;
1251:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG1_DEC_SHIFT2;
1252:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG1_DEC_DR2;
1253:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG1_DEC_DR2H;
1254:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG1_DEC_DR1;
1255:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG1_DEC_OCOR;
1256:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG1_DEC_OCORM;
1257:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG1_DEC_OCORH;
1258:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG1_DEC_COHER;
1259:Generated_Source\PSoC5/Volume_ADC.c **** 
1260:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG1_DSM_CR4;
1261:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG1_DSM_CR5;
1262:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG1_DSM_CR6;
1263:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG1_DSM_CR7;
1264:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG1_DSM_CR10;
1265:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG1_DSM_CR11;
1266:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG1_DSM_CR12;
1267:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG1_DSM_CR14;
1268:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG1_DSM_CR15;
1269:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG1_DSM_CR16;
1270:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG1_DSM_CR17;
1271:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG1_DSM_REF0);
1273:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG1_DSM_REF2;
1274:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG1_DSM_REF3;
1275:Generated_Source\PSoC5/Volume_ADC.c **** 
1276:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG1_DSM_BUF0;
1277:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG1_DSM_BUF1;
1278:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG1_DSM_BUF2;
1279:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG1_DSM_BUF3;
1280:Generated_Source\PSoC5/Volume_ADC.c **** 
1281:Generated_Source\PSoC5/Volume_ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:Generated_Source\PSoC5/Volume_ADC.c ****         *  the input  range selected.
1283:Generated_Source\PSoC5/Volume_ADC.c ****         */
1284:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_DEFAULT_INPUT_MODE)
1285:Generated_Source\PSoC5/Volume_ADC.c ****             #if (Volume_ADC_CFG1_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1286:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_AMux_Select(1u);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 24


1287:Generated_Source\PSoC5/Volume_ADC.c ****             #else
1288:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_AMux_Select(0u);
1289:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1290:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1291:Generated_Source\PSoC5/Volume_ADC.c **** 
1292:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:Generated_Source\PSoC5/Volume_ADC.c ****         *   mode is Single sample
1294:Generated_Source\PSoC5/Volume_ADC.c ****         */
1295:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_CFG1_RESOLUTION > 16 && \
1296:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CFG1_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1297:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_stopConversion = 1u;
1298:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:Generated_Source\PSoC5/Volume_ADC.c **** 
1300:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG1_COUNTS_PER_VOLT;
1301:Generated_Source\PSoC5/Volume_ADC.c **** 
1302:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG1_CP_CLK_DIVIDER, 1u);
1303:Generated_Source\PSoC5/Volume_ADC.c **** 
1304:Generated_Source\PSoC5/Volume_ADC.c ****         /* This is only valid if there is an internal clock */
1305:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1306:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG1_ADC_CLK_DIVIDER, 1u);
1307:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1308:Generated_Source\PSoC5/Volume_ADC.c **** 
1309:Generated_Source\PSoC5/Volume_ADC.c ****         #if(Volume_ADC_IRQ_REMOVE == 0u)
1310:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set interrupt vector */
1311:Generated_Source\PSoC5/Volume_ADC.c ****             (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR1);
1312:Generated_Source\PSoC5/Volume_ADC.c ****         #endif   /* End Volume_ADC_IRQ_REMOVE */
1313:Generated_Source\PSoC5/Volume_ADC.c ****     }
1314:Generated_Source\PSoC5/Volume_ADC.c **** 
1315:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 1)
1316:Generated_Source\PSoC5/Volume_ADC.c ****         if(config == 2u)
1317:Generated_Source\PSoC5/Volume_ADC.c ****         {
1318:Generated_Source\PSoC5/Volume_ADC.c ****             /* Second Config */
1319:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG2_DEC_CR;
1320:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG2_DEC_SHIFT1;
1321:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG2_DEC_SHIFT2;
1322:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG2_DEC_DR2;
1323:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG2_DEC_DR2H;
1324:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG2_DEC_DR1;
1325:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG2_DEC_OCOR;
1326:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG2_DEC_OCORM;
1327:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG2_DEC_OCORH;
1328:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG2_DEC_COHER;
1329:Generated_Source\PSoC5/Volume_ADC.c **** 
1330:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG2_DSM_CR4;
1331:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG2_DSM_CR5;
1332:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG2_DSM_CR6;
1333:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG2_DSM_CR7;
1334:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG2_DSM_CR10;
1335:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG2_DSM_CR11;
1336:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG2_DSM_CR12;
1337:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG2_DSM_CR14;
1338:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG2_DSM_CR15;
1339:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG2_DSM_CR16;
1340:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG2_DSM_CR17;
1341:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG2_DSM_REF0);
1343:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG2_DSM_REF2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 25


1344:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG2_DSM_REF3;
1345:Generated_Source\PSoC5/Volume_ADC.c **** 
1346:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG2_DSM_BUF0;
1347:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG2_DSM_BUF1;
1348:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG2_DSM_BUF2;
1349:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG2_DSM_BUF3;
1350:Generated_Source\PSoC5/Volume_ADC.c **** 
1351:Generated_Source\PSoC5/Volume_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:Generated_Source\PSoC5/Volume_ADC.c ****             *  the input range selected.
1353:Generated_Source\PSoC5/Volume_ADC.c ****             */
1354:Generated_Source\PSoC5/Volume_ADC.c **** 
1355:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INPUT_MODE)
1356:Generated_Source\PSoC5/Volume_ADC.c ****                 #if (Volume_ADC_CFG2_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1357:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(1u);
1358:Generated_Source\PSoC5/Volume_ADC.c ****                 #else
1359:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(0u);
1360:Generated_Source\PSoC5/Volume_ADC.c ****                 #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1361:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1362:Generated_Source\PSoC5/Volume_ADC.c **** 
1363:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:Generated_Source\PSoC5/Volume_ADC.c ****             *   conversion mode is Single sample
1365:Generated_Source\PSoC5/Volume_ADC.c ****             */
1366:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_CFG2_RESOLUTION > 16 && \
1367:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_CFG2_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1368:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_stopConversion = 1u;
1369:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:Generated_Source\PSoC5/Volume_ADC.c **** 
1371:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG2_COUNTS_PER_VOLT;
1372:Generated_Source\PSoC5/Volume_ADC.c **** 
1373:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG2_CP_CLK_DIVIDER, 1u);
1374:Generated_Source\PSoC5/Volume_ADC.c **** 
1375:Generated_Source\PSoC5/Volume_ADC.c ****             /* This is only valid if there is an internal clock */
1376:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1377:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1378:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1379:Generated_Source\PSoC5/Volume_ADC.c **** 
1380:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_IRQ_REMOVE == 0u)
1381:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Set interrupt vector */
1382:Generated_Source\PSoC5/Volume_ADC.c ****                 (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR2);
1383:Generated_Source\PSoC5/Volume_ADC.c ****             #endif   /* End Volume_ADC_IRQ_REMOVE */
1384:Generated_Source\PSoC5/Volume_ADC.c ****         }
1385:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:Generated_Source\PSoC5/Volume_ADC.c **** 
1387:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 2)
1388:Generated_Source\PSoC5/Volume_ADC.c ****         if(config == 3u)
1389:Generated_Source\PSoC5/Volume_ADC.c ****         {
1390:Generated_Source\PSoC5/Volume_ADC.c ****             /* Third Config */
1391:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG3_DEC_CR;
1392:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG3_DEC_SHIFT1;
1393:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG3_DEC_SHIFT2;
1394:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG3_DEC_DR2;
1395:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG3_DEC_DR2H;
1396:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG3_DEC_DR1;
1397:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG3_DEC_OCOR;
1398:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG3_DEC_OCORM;
1399:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG3_DEC_OCORH;
1400:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG3_DEC_COHER;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 26


1401:Generated_Source\PSoC5/Volume_ADC.c **** 
1402:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG3_DSM_CR4;
1403:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG3_DSM_CR5;
1404:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG3_DSM_CR6;
1405:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG3_DSM_CR7;
1406:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG3_DSM_CR10;
1407:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG3_DSM_CR11;
1408:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG3_DSM_CR12;
1409:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG3_DSM_CR14;
1410:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG3_DSM_CR15;
1411:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG3_DSM_CR16;
1412:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG3_DSM_CR17;
1413:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG3_DSM_REF0);
1415:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG3_DSM_REF2;
1416:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG3_DSM_REF3;
1417:Generated_Source\PSoC5/Volume_ADC.c **** 
1418:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG3_DSM_BUF0;
1419:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG3_DSM_BUF1;
1420:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG3_DSM_BUF2;
1421:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG3_DSM_BUF3;
1422:Generated_Source\PSoC5/Volume_ADC.c **** 
1423:Generated_Source\PSoC5/Volume_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:Generated_Source\PSoC5/Volume_ADC.c ****             *  the input range selected.
1425:Generated_Source\PSoC5/Volume_ADC.c ****             */
1426:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INPUT_MODE)
1427:Generated_Source\PSoC5/Volume_ADC.c ****                 #if (Volume_ADC_CFG3_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1428:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(1u);
1429:Generated_Source\PSoC5/Volume_ADC.c ****                 #else
1430:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(0u);
1431:Generated_Source\PSoC5/Volume_ADC.c ****                 #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1432:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1433:Generated_Source\PSoC5/Volume_ADC.c **** 
1434:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:Generated_Source\PSoC5/Volume_ADC.c ****                conversion  mode is Single sample */
1436:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_CFG3_RESOLUTION > 16 && \
1437:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_CFG3_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1438:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_stopConversion = 1u;
1439:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:Generated_Source\PSoC5/Volume_ADC.c **** 
1441:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG3_COUNTS_PER_VOLT;
1442:Generated_Source\PSoC5/Volume_ADC.c **** 
1443:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG3_CP_CLK_DIVIDER, 1u);
1444:Generated_Source\PSoC5/Volume_ADC.c **** 
1445:Generated_Source\PSoC5/Volume_ADC.c ****             /* This is only valid if there is an internal clock */
1446:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1447:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1448:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1449:Generated_Source\PSoC5/Volume_ADC.c **** 
1450:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_IRQ_REMOVE == 0u)
1451:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Set interrupt vector */
1452:Generated_Source\PSoC5/Volume_ADC.c ****                 (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR3);
1453:Generated_Source\PSoC5/Volume_ADC.c ****             #endif   /* End Volume_ADC_IRQ_REMOVE */
1454:Generated_Source\PSoC5/Volume_ADC.c ****         }
1455:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:Generated_Source\PSoC5/Volume_ADC.c **** 
1457:Generated_Source\PSoC5/Volume_ADC.c ****     #if(Volume_ADC_DEFAULT_NUM_CONFIGS > 3)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 27


1458:Generated_Source\PSoC5/Volume_ADC.c ****         if (config == 4u)
1459:Generated_Source\PSoC5/Volume_ADC.c ****         {
1460:Generated_Source\PSoC5/Volume_ADC.c ****             /* Fourth Config */
1461:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_CR_REG      = Volume_ADC_CFG4_DEC_CR;
1462:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG4_DEC_SHIFT1;
1463:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG4_DEC_SHIFT2;
1464:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG4_DEC_DR2;
1465:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG4_DEC_DR2H;
1466:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG4_DEC_DR1;
1467:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG4_DEC_OCOR;
1468:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG4_DEC_OCORM;
1469:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG4_DEC_OCORH;
1470:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG4_DEC_COHER;
1471:Generated_Source\PSoC5/Volume_ADC.c **** 
1472:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR4_REG     = Volume_ADC_CFG4_DSM_CR4;
1473:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG4_DSM_CR5;
1474:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG4_DSM_CR6;
1475:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG4_DSM_CR7;
1476:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG4_DSM_CR10;
1477:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG4_DSM_CR11;
1478:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG4_DSM_CR12;
1479:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG4_DSM_CR14;
1480:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG4_DSM_CR15;
1481:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG4_DSM_CR16;
1482:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG4_DSM_CR17;
1483:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_SetDSMRef0Reg(Volume_ADC_CFG4_DSM_REF0);
1485:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG4_DSM_REF2;
1486:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG4_DSM_REF3;
1487:Generated_Source\PSoC5/Volume_ADC.c **** 
1488:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF0_REG    = Volume_ADC_CFG4_DSM_BUF0;
1489:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG4_DSM_BUF1;
1490:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG4_DSM_BUF2;
1491:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG4_DSM_BUF3;
1492:Generated_Source\PSoC5/Volume_ADC.c **** 
1493:Generated_Source\PSoC5/Volume_ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:Generated_Source\PSoC5/Volume_ADC.c ****             *  the input range selected.
1495:Generated_Source\PSoC5/Volume_ADC.c ****             */
1496:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INPUT_MODE)
1497:Generated_Source\PSoC5/Volume_ADC.c ****                 #if (Volume_ADC_CFG4_INPUT_RANGE == Volume_ADC_IR_VSSA_TO_2VREF)
1498:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(1u);
1499:Generated_Source\PSoC5/Volume_ADC.c ****                 #else
1500:Generated_Source\PSoC5/Volume_ADC.c ****                     Volume_ADC_AMux_Select(0u);
1501:Generated_Source\PSoC5/Volume_ADC.c ****                 #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
1502:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INPUT_MODE */
1503:Generated_Source\PSoC5/Volume_ADC.c **** 
1504:Generated_Source\PSoC5/Volume_ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:Generated_Source\PSoC5/Volume_ADC.c ****                conversion mode is Single sample */
1506:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_CFG4_RESOLUTION > 16 && \
1507:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_CFG4_CONV_MODE == Volume_ADC_MODE_SINGLE_SAMPLE)
1508:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_stopConversion = 1u;
1509:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:Generated_Source\PSoC5/Volume_ADC.c **** 
1511:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_CountsPerVolt = (int32)Volume_ADC_CFG4_COUNTS_PER_VOLT;
1512:Generated_Source\PSoC5/Volume_ADC.c **** 
1513:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Ext_CP_Clk_SetDividerRegister(Volume_ADC_CFG4_CP_CLK_DIVIDER, 1u);
1514:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 28


1515:Generated_Source\PSoC5/Volume_ADC.c ****             /* This is only valid if there is an internal clock */
1516:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_DEFAULT_INTERNAL_CLK)
1517:Generated_Source\PSoC5/Volume_ADC.c ****                 Volume_ADC_theACLK_SetDividerRegister(Volume_ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1518:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
1519:Generated_Source\PSoC5/Volume_ADC.c **** 
1520:Generated_Source\PSoC5/Volume_ADC.c ****             #if(Volume_ADC_IRQ_REMOVE == 0u)
1521:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Set interrupt vector */
1522:Generated_Source\PSoC5/Volume_ADC.c ****                 (void)CyIntSetVector(Volume_ADC_INTC_NUMBER, &Volume_ADC_ISR4);
1523:Generated_Source\PSoC5/Volume_ADC.c ****             #endif   /* End Volume_ADC_IRQ_REMOVE */
1524:Generated_Source\PSoC5/Volume_ADC.c ****         }
1525:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:Generated_Source\PSoC5/Volume_ADC.c **** }
1527:Generated_Source\PSoC5/Volume_ADC.c **** 
1528:Generated_Source\PSoC5/Volume_ADC.c **** 
1529:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1530:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SelectCofiguration
1531:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1532:Generated_Source\PSoC5/Volume_ADC.c **** *
1533:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1534:Generated_Source\PSoC5/Volume_ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:Generated_Source\PSoC5/Volume_ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:Generated_Source\PSoC5/Volume_ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:Generated_Source\PSoC5/Volume_ADC.c **** *  can be restarted depending up on the value of second parameter
1538:Generated_Source\PSoC5/Volume_ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:Generated_Source\PSoC5/Volume_ADC.c **** *  restarted. If this value is zero, then user must call Volume_ADC_Start
1540:Generated_Source\PSoC5/Volume_ADC.c **** *  and Volume_ADC_StartConvert() to restart the conversion.
1541:Generated_Source\PSoC5/Volume_ADC.c **** *
1542:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1543:Generated_Source\PSoC5/Volume_ADC.c **** *  config:  configuration user wants to select.
1544:Generated_Source\PSoC5/Volume_ADC.c **** *           Valid range: 1..4
1545:Generated_Source\PSoC5/Volume_ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:Generated_Source\PSoC5/Volume_ADC.c **** *                            0 means do not start the ADC and conversion.
1547:Generated_Source\PSoC5/Volume_ADC.c **** *
1548:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1549:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1550:Generated_Source\PSoC5/Volume_ADC.c **** *
1551:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1552:Generated_Source\PSoC5/Volume_ADC.c **** void Volume_ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:Generated_Source\PSoC5/Volume_ADC.c ****                                               
1554:Generated_Source\PSoC5/Volume_ADC.c **** {
1555:Generated_Source\PSoC5/Volume_ADC.c ****     /* Check whether the configuration number is valid or not */
1556:Generated_Source\PSoC5/Volume_ADC.c ****     if((config > 0u) && (config <= Volume_ADC_DEFAULT_NUM_CONFIGS))
1557:Generated_Source\PSoC5/Volume_ADC.c ****     {
1558:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:Generated_Source\PSoC5/Volume_ADC.c **** 		*  selected configuration
1560:Generated_Source\PSoC5/Volume_ADC.c **** 		*/
1561:Generated_Source\PSoC5/Volume_ADC.c ****         if(Volume_ADC_initVar == 0u)
1562:Generated_Source\PSoC5/Volume_ADC.c ****         {
1563:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_started = 1u;
1564:Generated_Source\PSoC5/Volume_ADC.c ****         }
1565:Generated_Source\PSoC5/Volume_ADC.c **** 
1566:Generated_Source\PSoC5/Volume_ADC.c ****         /* Update the config flag */
1567:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_Config = config;
1568:Generated_Source\PSoC5/Volume_ADC.c **** 
1569:Generated_Source\PSoC5/Volume_ADC.c ****         /* Stop the ADC  */
1570:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_Stop();
1571:Generated_Source\PSoC5/Volume_ADC.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 29


1572:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_InitConfig(config);
1574:Generated_Source\PSoC5/Volume_ADC.c **** 
1575:Generated_Source\PSoC5/Volume_ADC.c ****         /* Compensate the gain */
1576:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_GVAL_REG = Volume_ADC_gcor[config - 1u].gval;
1577:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[config - 1u].gcor);
1578:Generated_Source\PSoC5/Volume_ADC.c **** 
1579:Generated_Source\PSoC5/Volume_ADC.c ****         if(restart == 1u)
1580:Generated_Source\PSoC5/Volume_ADC.c ****         {
1581:Generated_Source\PSoC5/Volume_ADC.c ****             /* Restart the ADC */
1582:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_Start();
1583:Generated_Source\PSoC5/Volume_ADC.c **** 
1584:Generated_Source\PSoC5/Volume_ADC.c ****             /* Restart the ADC conversion */
1585:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_StartConvert();
1586:Generated_Source\PSoC5/Volume_ADC.c ****         }
1587:Generated_Source\PSoC5/Volume_ADC.c ****     }
1588:Generated_Source\PSoC5/Volume_ADC.c ****     else
1589:Generated_Source\PSoC5/Volume_ADC.c ****     {
1590:Generated_Source\PSoC5/Volume_ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:Generated_Source\PSoC5/Volume_ADC.c ****         CYASSERT(0u != 0u);
1592:Generated_Source\PSoC5/Volume_ADC.c ****     }
1593:Generated_Source\PSoC5/Volume_ADC.c **** }
1594:Generated_Source\PSoC5/Volume_ADC.c **** 
1595:Generated_Source\PSoC5/Volume_ADC.c **** 
1596:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1597:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_GainCompensation
1598:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1599:Generated_Source\PSoC5/Volume_ADC.c **** *
1600:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1601:Generated_Source\PSoC5/Volume_ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:Generated_Source\PSoC5/Volume_ADC.c **** *
1603:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1604:Generated_Source\PSoC5/Volume_ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:Generated_Source\PSoC5/Volume_ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:Generated_Source\PSoC5/Volume_ADC.c **** *                 conversion  mode.
1607:Generated_Source\PSoC5/Volume_ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:Generated_Source\PSoC5/Volume_ADC.c ****                      conversion mode.
1609:Generated_Source\PSoC5/Volume_ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:Generated_Source\PSoC5/Volume_ADC.c **** *  config:      Specifies the configuration number
1611:Generated_Source\PSoC5/Volume_ADC.c **** *               Valid range: 1..4
1612:Generated_Source\PSoC5/Volume_ADC.c **** *
1613:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1614:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1615:Generated_Source\PSoC5/Volume_ADC.c **** *
1616:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1617:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGa
1618:Generated_Source\PSoC5/Volume_ADC.c ****                               uint8 resolution, uint8 config) 
1619:Generated_Source\PSoC5/Volume_ADC.c **** {
  26              		.loc 1 1619 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 30


  35 0002 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
1620:Generated_Source\PSoC5/Volume_ADC.c ****     int8 flash;
1621:Generated_Source\PSoC5/Volume_ADC.c **** 	int32 normalised;
1622:Generated_Source\PSoC5/Volume_ADC.c **** 	uint16 gcorValue;
1623:Generated_Source\PSoC5/Volume_ADC.c ****     uint32 gcorTmp;
1624:Generated_Source\PSoC5/Volume_ADC.c **** 
1625:Generated_Source\PSoC5/Volume_ADC.c ****     if((config > 0u) && (config <= Volume_ADC_DEFAULT_NUM_CONFIGS))
  36              		.loc 1 1625 0
  37 0006 012C     		cmp	r4, #1
  38 0008 4AD1     		bne	.L2
1626:Generated_Source\PSoC5/Volume_ADC.c ****     {
1627:Generated_Source\PSoC5/Volume_ADC.c ****         switch(inputRange)
  39              		.loc 1 1627 0
  40 000a 0138     		subs	r0, r0, #1
  41              	.LVL1:
  42 000c 0928     		cmp	r0, #9
  43 000e 26D8     		bhi	.L16
  44 0010 DFE800F0 		tbb	[pc, r0]
  45              	.L5:
  46 0014 05       		.byte	(.L4-.L5)/2
  47 0015 25       		.byte	(.L16-.L5)/2
  48 0016 25       		.byte	(.L16-.L5)/2
  49 0017 05       		.byte	(.L4-.L5)/2
  50 0018 25       		.byte	(.L16-.L5)/2
  51 0019 25       		.byte	(.L16-.L5)/2
  52 001a 0D       		.byte	(.L6-.L5)/2
  53 001b 15       		.byte	(.L7-.L5)/2
  54 001c 25       		.byte	(.L16-.L5)/2
  55 001d 1D       		.byte	(.L8-.L5)/2
  56              		.p2align 1
  57              	.L4:
1628:Generated_Source\PSoC5/Volume_ADC.c ****         {
1629:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_DIFF:
1630:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VSSA_TO_2VREF:
1631:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1632:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
  58              		.loc 1 1632 0
  59 001e 0F2B     		cmp	r3, #15
  60 0020 02D9     		bls	.L9
1633:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1634:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_DIFF_16_20;
  61              		.loc 1 1634 0
  62 0022 2148     		ldr	r0, .L18
  63 0024 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  64              	.LVL2:
  65 0026 1BE0     		b	.L3
  66              	.LVL3:
  67              	.L9:
1635:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1636:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1637:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1638:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_DIFF_8_15;
  68              		.loc 1 1638 0
  69 0028 2048     		ldr	r0, .L18+4
  70 002a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  71              	.LVL4:
  72 002c 18E0     		b	.L3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 31


  73              	.LVL5:
  74              	.L6:
1639:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1640:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1641:Generated_Source\PSoC5/Volume_ADC.c **** 
1642:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_2_DIFF:
1643:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1644:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
  75              		.loc 1 1644 0
  76 002e 0F2B     		cmp	r3, #15
  77 0030 02D9     		bls	.L10
1645:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1646:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_2_DIFF_16_20;
  78              		.loc 1 1646 0
  79 0032 1F48     		ldr	r0, .L18+8
  80 0034 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  81              	.LVL6:
  82 0036 13E0     		b	.L3
  83              	.LVL7:
  84              	.L10:
1647:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1648:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1649:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1650:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_2_DIFF_8_15;
  85              		.loc 1 1650 0
  86 0038 1E48     		ldr	r0, .L18+12
  87 003a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  88              	.LVL8:
  89 003c 10E0     		b	.L3
  90              	.LVL9:
  91              	.L7:
1651:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1652:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1653:Generated_Source\PSoC5/Volume_ADC.c **** 
1654:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_4_DIFF:
1655:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1656:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
  92              		.loc 1 1656 0
  93 003e 0F2B     		cmp	r3, #15
  94 0040 02D9     		bls	.L11
1657:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1658:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_4_DIFF_16_20;
  95              		.loc 1 1658 0
  96 0042 1D48     		ldr	r0, .L18+16
  97 0044 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  98              	.LVL10:
  99 0046 0BE0     		b	.L3
 100              	.LVL11:
 101              	.L11:
1659:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1660:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1661:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1662:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_4_DIFF_8_15;
 102              		.loc 1 1662 0
 103 0048 1C48     		ldr	r0, .L18+20
 104 004a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 105              	.LVL12:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 32


 106 004c 08E0     		b	.L3
 107              	.LVL13:
 108              	.L8:
1663:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1664:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1665:Generated_Source\PSoC5/Volume_ADC.c **** 
1666:Generated_Source\PSoC5/Volume_ADC.c ****             case Volume_ADC_IR_VNEG_VREF_16_DIFF:
1667:Generated_Source\PSoC5/Volume_ADC.c ****                 /* Normalize the flash Value */
1668:Generated_Source\PSoC5/Volume_ADC.c ****                 if(resolution > 15u)
 109              		.loc 1 1668 0
 110 004e 0F2B     		cmp	r3, #15
 111 0050 02D9     		bls	.L12
1669:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1670:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 112              		.loc 1 1670 0
 113 0052 1B48     		ldr	r0, .L18+24
 114 0054 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 115              	.LVL14:
 116 0056 03E0     		b	.L3
 117              	.LVL15:
 118              	.L12:
1671:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1672:Generated_Source\PSoC5/Volume_ADC.c ****                 else
1673:Generated_Source\PSoC5/Volume_ADC.c ****                 {
1674:Generated_Source\PSoC5/Volume_ADC.c ****                     flash = Volume_ADC_DEC_TRIM_VREF_16_DIFF_8_15;
 119              		.loc 1 1674 0
 120 0058 1A48     		ldr	r0, .L18+28
 121 005a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 122              	.LVL16:
 123 005c 00E0     		b	.L3
 124              	.LVL17:
 125              	.L16:
1675:Generated_Source\PSoC5/Volume_ADC.c ****                 }
1676:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1677:Generated_Source\PSoC5/Volume_ADC.c **** 
1678:Generated_Source\PSoC5/Volume_ADC.c ****             default:
1679:Generated_Source\PSoC5/Volume_ADC.c ****                 flash = 0;
 126              		.loc 1 1679 0
 127 005e 0020     		movs	r0, #0
 128              	.L3:
 129              	.LVL18:
1680:Generated_Source\PSoC5/Volume_ADC.c ****                 break;
1681:Generated_Source\PSoC5/Volume_ADC.c ****         }
1682:Generated_Source\PSoC5/Volume_ADC.c **** 
1683:Generated_Source\PSoC5/Volume_ADC.c ****         /* Add two values */
1684:Generated_Source\PSoC5/Volume_ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 130              		.loc 1 1684 0
 131 0060 40B2     		sxtb	r0, r0
 132 0062 01EB4011 		add	r1, r1, r0, lsl #5
 133              	.LVL19:
1685:Generated_Source\PSoC5/Volume_ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 134              		.loc 1 1685 0
 135 0066 01FB02F1 		mul	r1, r1, r2
 136              	.LVL20:
1686:Generated_Source\PSoC5/Volume_ADC.c ****         gcorValue = (uint16)(gcorTmp / Volume_ADC_IDEAL_GAIN_CONST);
 137              		.loc 1 1686 0
 138 006a C90B     		lsrs	r1, r1, #15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 33


 139              	.LVL21:
 140 006c 8AB2     		uxth	r2, r1
 141              	.LVL22:
1687:Generated_Source\PSoC5/Volume_ADC.c **** 
1688:Generated_Source\PSoC5/Volume_ADC.c ****         if (resolution < (Volume_ADC_MAX_GVAL - 1u))
 142              		.loc 1 1688 0
 143 006e 0D2B     		cmp	r3, #13
 144 0070 0BD8     		bhi	.L13
1689:Generated_Source\PSoC5/Volume_ADC.c ****         {
1690:Generated_Source\PSoC5/Volume_ADC.c ****             gcorValue = (gcorValue >> (Volume_ADC_MAX_GVAL - (resolution + 1u)));
 145              		.loc 1 1690 0
 146 0072 C3F10E02 		rsb	r2, r3, #14
 147              	.LVL23:
 148 0076 89B2     		uxth	r1, r1
 149 0078 1141     		asrs	r1, r1, r2
 150              	.LVL24:
 151 007a 8AB2     		uxth	r2, r1
 152              	.LVL25:
1691:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_gcor[config - 1u].gval = (resolution + 1u);
 153              		.loc 1 1691 0
 154 007c 1249     		ldr	r1, .L18+32
 155 007e 01EB8401 		add	r1, r1, r4, lsl #2
 156 0082 0133     		adds	r3, r3, #1
 157              	.LVL26:
 158 0084 01F8023C 		strb	r3, [r1, #-2]
 159 0088 05E0     		b	.L14
 160              	.LVL27:
 161              	.L13:
1692:Generated_Source\PSoC5/Volume_ADC.c ****         }
1693:Generated_Source\PSoC5/Volume_ADC.c ****         else
1694:Generated_Source\PSoC5/Volume_ADC.c ****         {
1695:Generated_Source\PSoC5/Volume_ADC.c ****             /* Use all 16 bits */
1696:Generated_Source\PSoC5/Volume_ADC.c ****             Volume_ADC_gcor[config - 1u].gval = Volume_ADC_MAX_GVAL;
 162              		.loc 1 1696 0
 163 008a 0F4B     		ldr	r3, .L18+32
 164              	.LVL28:
 165 008c 03EB8403 		add	r3, r3, r4, lsl #2
 166 0090 0F21     		movs	r1, #15
 167 0092 03F8021C 		strb	r1, [r3, #-2]
 168              	.L14:
1697:Generated_Source\PSoC5/Volume_ADC.c ****         }
1698:Generated_Source\PSoC5/Volume_ADC.c **** 
1699:Generated_Source\PSoC5/Volume_ADC.c ****         /* Save the gain correction register value */
1700:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_gcor[config - 1u].gcor = gcorValue;
 169              		.loc 1 1700 0
 170 0096 013C     		subs	r4, r4, #1
 171 0098 0B4B     		ldr	r3, .L18+32
 172 009a 23F82420 		strh	r2, [r3, r4, lsl #2]	@ movhi
 173 009e 10BD     		pop	{r4, pc}
 174              	.LVL29:
 175              	.L2:
1701:Generated_Source\PSoC5/Volume_ADC.c ****     }
1702:Generated_Source\PSoC5/Volume_ADC.c ****     else
1703:Generated_Source\PSoC5/Volume_ADC.c ****     {
1704:Generated_Source\PSoC5/Volume_ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:Generated_Source\PSoC5/Volume_ADC.c ****         CYASSERT(0u != 0u);
 176              		.loc 1 1705 0 discriminator 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 34


 177 00a0 0020     		movs	r0, #0
 178              	.LVL30:
 179 00a2 FFF7FEFF 		bl	CyHalt
 180              	.LVL31:
 181 00a6 10BD     		pop	{r4, pc}
 182              	.LVL32:
 183              	.L19:
 184              		.align	2
 185              	.L18:
 186 00a8 18010049 		.word	1224737048
 187 00ac 1C010049 		.word	1224737052
 188 00b0 19010049 		.word	1224737049
 189 00b4 1D010049 		.word	1224737053
 190 00b8 1A010049 		.word	1224737050
 191 00bc 1E010049 		.word	1224737054
 192 00c0 1B010049 		.word	1224737051
 193 00c4 1F010049 		.word	1224737055
 194 00c8 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE21:
 197              		.size	Volume_ADC_GainCompensation, .-Volume_ADC_GainCompensation
 198              		.section	.text.Volume_ADC_SetDSMRef0Reg,"ax",%progbits
 199              		.align	2
 200              		.thumb
 201              		.thumb_func
 202              		.type	Volume_ADC_SetDSMRef0Reg, %function
 203              	Volume_ADC_SetDSMRef0Reg:
 204              	.LFB22:
1706:Generated_Source\PSoC5/Volume_ADC.c ****     }
1707:Generated_Source\PSoC5/Volume_ADC.c **** }
1708:Generated_Source\PSoC5/Volume_ADC.c **** 
1709:Generated_Source\PSoC5/Volume_ADC.c **** 
1710:Generated_Source\PSoC5/Volume_ADC.c **** /******************************************************************************
1711:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_SetDSMRef0Reg(uint8)
1712:Generated_Source\PSoC5/Volume_ADC.c **** ******************************************************************************
1713:Generated_Source\PSoC5/Volume_ADC.c **** *
1714:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1715:Generated_Source\PSoC5/Volume_ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:Generated_Source\PSoC5/Volume_ADC.c **** *
1717:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1718:Generated_Source\PSoC5/Volume_ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:Generated_Source\PSoC5/Volume_ADC.c **** *
1720:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1721:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1722:Generated_Source\PSoC5/Volume_ADC.c **** *
1723:Generated_Source\PSoC5/Volume_ADC.c **** ******************************************************************************/
1724:Generated_Source\PSoC5/Volume_ADC.c **** static void Volume_ADC_SetDSMRef0Reg(uint8 value) 
1725:Generated_Source\PSoC5/Volume_ADC.c **** {
 205              		.loc 1 1725 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL33:
 210 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 211              		.cfi_def_cfa_offset 24
 212              		.cfi_offset 3, -24
 213              		.cfi_offset 4, -20
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 35


 214              		.cfi_offset 5, -16
 215              		.cfi_offset 6, -12
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 0746     		mov	r7, r0
1726:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
1727:Generated_Source\PSoC5/Volume_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 219              		.loc 1 1727 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL34:
 222 0008 0646     		mov	r6, r0
 223              	.LVL35:
1728:Generated_Source\PSoC5/Volume_ADC.c **** 
1729:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG |= (Volume_ADC_IGNORE_PRESA1 | Volume_ADC_IGNORE_PRESD1);
 224              		.loc 1 1730 0
 225 000a 0D4D     		ldr	r5, .L22
 226 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 227 000e 43F00303 		orr	r3, r3, #3
 228 0012 2B70     		strb	r3, [r5]
1731:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= (Volume_ADC_IGNORE_PRESA2 | Volume_ADC_IGNORE_PRESD2);
 229              		.loc 1 1731 0
 230 0014 0B4C     		ldr	r4, .L22+4
 231 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 232 0018 43F00303 		orr	r3, r3, #3
 233 001c 2370     		strb	r3, [r4]
1732:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF0_REG = value;
 234              		.loc 1 1732 0
 235 001e 0A4B     		ldr	r3, .L22+8
 236 0020 1F70     		strb	r7, [r3]
1733:Generated_Source\PSoC5/Volume_ADC.c **** 
1734:Generated_Source\PSoC5/Volume_ADC.c ****     /* Wait for 3 microseconds */
1735:Generated_Source\PSoC5/Volume_ADC.c ****     CyDelayUs(Volume_ADC_PRES_DELAY_TIME);
 237              		.loc 1 1735 0
 238 0022 0320     		movs	r0, #3
 239 0024 FFF7FEFF 		bl	CyDelayUs
 240              	.LVL36:
1736:Generated_Source\PSoC5/Volume_ADC.c ****     /* Enable the press circuit */
1737:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR4_REG &= (uint8)~(Volume_ADC_IGNORE_PRESA1 | Volume_ADC_IGNORE_PRESD1);
 241              		.loc 1 1737 0
 242 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 243 002a 03F0FC03 		and	r3, r3, #252
 244 002e 2B70     		strb	r3, [r5]
1738:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~(Volume_ADC_IGNORE_PRESA2 | Volume_ADC_IGNORE_PRESD2);
 245              		.loc 1 1738 0
 246 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 247 0032 03F0FC03 		and	r3, r3, #252
 248 0036 2370     		strb	r3, [r4]
1739:Generated_Source\PSoC5/Volume_ADC.c **** 
1740:Generated_Source\PSoC5/Volume_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 249              		.loc 1 1740 0
 250 0038 3046     		mov	r0, r6
 251 003a FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL37:
 253 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 254              	.LVL38:
 255              	.L23:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 36


 256              		.align	2
 257              	.L22:
 258 0040 F8460040 		.word	1073759992
 259 0044 F9460040 		.word	1073759993
 260 0048 92580040 		.word	1073764498
 261              		.cfi_endproc
 262              	.LFE22:
 263              		.size	Volume_ADC_SetDSMRef0Reg, .-Volume_ADC_SetDSMRef0Reg
 264              		.section	.text.Volume_ADC_InitConfig,"ax",%progbits
 265              		.align	2
 266              		.thumb
 267              		.thumb_func
 268              		.type	Volume_ADC_InitConfig, %function
 269              	Volume_ADC_InitConfig:
 270              	.LFB19:
1243:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_stopConversion = 0u;
 271              		.loc 1 1243 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL39:
 276 0000 38B5     		push	{r3, r4, r5, lr}
 277              		.cfi_def_cfa_offset 16
 278              		.cfi_offset 3, -16
 279              		.cfi_offset 4, -12
 280              		.cfi_offset 5, -8
 281              		.cfi_offset 14, -4
1244:Generated_Source\PSoC5/Volume_ADC.c **** 
 282              		.loc 1 1244 0
 283 0002 0022     		movs	r2, #0
 284 0004 314B     		ldr	r3, .L27
 285 0006 1A71     		strb	r2, [r3, #4]
1246:Generated_Source\PSoC5/Volume_ADC.c ****     {
 286              		.loc 1 1246 0
 287 0008 0128     		cmp	r0, #1
 288 000a 5DD1     		bne	.L24
1249:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT1_REG  = Volume_ADC_CFG1_DEC_SHIFT1;
 289              		.loc 1 1249 0
 290 000c 3822     		movs	r2, #56
 291 000e 304B     		ldr	r3, .L27+4
 292 0010 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_SHIFT2_REG  = Volume_ADC_CFG1_DEC_SHIFT2;
 293              		.loc 1 1250 0
 294 0012 0422     		movs	r2, #4
 295 0014 0233     		adds	r3, r3, #2
 296 0016 1A70     		strb	r2, [r3]
1251:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2_REG     = Volume_ADC_CFG1_DEC_DR2;
 297              		.loc 1 1251 0
 298 0018 0622     		movs	r2, #6
 299 001a 0133     		adds	r3, r3, #1
 300 001c 1A70     		strb	r2, [r3]
1252:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR2H_REG    = Volume_ADC_CFG1_DEC_DR2H;
 301              		.loc 1 1252 0
 302 001e 0024     		movs	r4, #0
 303 0020 0133     		adds	r3, r3, #1
 304 0022 1C70     		strb	r4, [r3]
1253:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_DR1_REG     = Volume_ADC_CFG1_DEC_DR1;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 37


 305              		.loc 1 1253 0
 306 0024 0133     		adds	r3, r3, #1
 307 0026 1C70     		strb	r4, [r3]
1254:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCOR_REG    = Volume_ADC_CFG1_DEC_OCOR;
 308              		.loc 1 1254 0
 309 0028 3F22     		movs	r2, #63
 310 002a 0133     		adds	r3, r3, #1
 311 002c 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORM_REG   = Volume_ADC_CFG1_DEC_OCORM;
 312              		.loc 1 1255 0
 313 002e 0233     		adds	r3, r3, #2
 314 0030 1C70     		strb	r4, [r3]
1256:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_OCORH_REG   = Volume_ADC_CFG1_DEC_OCORH;
 315              		.loc 1 1256 0
 316 0032 0133     		adds	r3, r3, #1
 317 0034 1C70     		strb	r4, [r3]
1257:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DEC_COHER_REG   = Volume_ADC_CFG1_DEC_COHER;
 318              		.loc 1 1257 0
 319 0036 0133     		adds	r3, r3, #1
 320 0038 1C70     		strb	r4, [r3]
1258:Generated_Source\PSoC5/Volume_ADC.c **** 
 321              		.loc 1 1258 0
 322 003a 0125     		movs	r5, #1
 323 003c 0A33     		adds	r3, r3, #10
 324 003e 1D70     		strb	r5, [r3]
1260:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR5_REG     = Volume_ADC_CFG1_DSM_CR5;
 325              		.loc 1 1260 0
 326 0040 5022     		movs	r2, #80
 327 0042 03F52763 		add	r3, r3, #2672
 328 0046 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR6_REG     = Volume_ADC_CFG1_DSM_CR6;
 329              		.loc 1 1261 0
 330 0048 0722     		movs	r2, #7
 331 004a 0133     		adds	r3, r3, #1
 332 004c 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR7_REG     = Volume_ADC_CFG1_DSM_CR7;
 333              		.loc 1 1262 0
 334 004e 2922     		movs	r2, #41
 335 0050 0133     		adds	r3, r3, #1
 336 0052 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR10_REG    = Volume_ADC_CFG1_DSM_CR10;
 337              		.loc 1 1263 0
 338 0054 0133     		adds	r3, r3, #1
 339 0056 1C70     		strb	r4, [r3]
1264:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR11_REG    = Volume_ADC_CFG1_DSM_CR11;
 340              		.loc 1 1264 0
 341 0058 5522     		movs	r2, #85
 342 005a 0333     		adds	r3, r3, #3
 343 005c 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR12_REG    = Volume_ADC_CFG1_DSM_CR12;
 344              		.loc 1 1265 0
 345 005e 5A22     		movs	r2, #90
 346 0060 0133     		adds	r3, r3, #1
 347 0062 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR14_REG    = Volume_ADC_CFG1_DSM_CR14;
 348              		.loc 1 1266 0
 349 0064 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 38


 350 0066 1C70     		strb	r4, [r3]
1267:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR15_REG    = Volume_ADC_CFG1_DSM_CR15;
 351              		.loc 1 1267 0
 352 0068 0233     		adds	r3, r3, #2
 353 006a 1D70     		strb	r5, [r3]
1268:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR16_REG    = Volume_ADC_CFG1_DSM_CR16;
 354              		.loc 1 1268 0
 355 006c 1122     		movs	r2, #17
 356 006e 0133     		adds	r3, r3, #1
 357 0070 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_CR17_REG    = Volume_ADC_CFG1_DSM_CR17;
 358              		.loc 1 1269 0
 359 0072 1922     		movs	r2, #25
 360 0074 0133     		adds	r3, r3, #1
 361 0076 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/Volume_ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
 362              		.loc 1 1270 0
 363 0078 9722     		movs	r2, #151
 364 007a 0133     		adds	r3, r3, #1
 365 007c 1A70     		strb	r2, [r3]
1272:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF2_REG    = Volume_ADC_CFG1_DSM_REF2;
 366              		.loc 1 1272 0
 367 007e 4420     		movs	r0, #68
 368              	.LVL40:
 369 0080 FFF7FEFF 		bl	Volume_ADC_SetDSMRef0Reg
 370              	.LVL41:
1273:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_REF3_REG    = Volume_ADC_CFG1_DSM_REF3;
 371              		.loc 1 1273 0
 372 0084 5822     		movs	r2, #88
 373 0086 134B     		ldr	r3, .L27+8
 374 0088 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/Volume_ADC.c **** 
 375              		.loc 1 1274 0
 376 008a 0133     		adds	r3, r3, #1
 377 008c 1C70     		strb	r4, [r3]
1276:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF1_REG    = Volume_ADC_CFG1_DSM_BUF1;
 378              		.loc 1 1276 0
 379 008e 0522     		movs	r2, #5
 380 0090 0533     		adds	r3, r3, #5
 381 0092 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF2_REG    = Volume_ADC_CFG1_DSM_BUF2;
 382              		.loc 1 1277 0
 383 0094 0222     		movs	r2, #2
 384 0096 0133     		adds	r3, r3, #1
 385 0098 1A70     		strb	r2, [r3]
1278:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_DSM_BUF3_REG    = Volume_ADC_CFG1_DSM_BUF3;
 386              		.loc 1 1278 0
 387 009a 0133     		adds	r3, r3, #1
 388 009c 1C70     		strb	r4, [r3]
1279:Generated_Source\PSoC5/Volume_ADC.c **** 
 389              		.loc 1 1279 0
 390 009e 0133     		adds	r3, r3, #1
 391 00a0 1C70     		strb	r4, [r3]
1288:Generated_Source\PSoC5/Volume_ADC.c ****             #endif /* Volume_ADC_IR_VSSA_TO_2VREF) */
 392              		.loc 1 1288 0
 393 00a2 2046     		mov	r0, r4
 394 00a4 FFF7FEFF 		bl	Volume_ADC_AMux_Select
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 39


 395              	.LVL42:
1300:Generated_Source\PSoC5/Volume_ADC.c **** 
 396              		.loc 1 1300 0
 397 00a8 42F6AB12 		movw	r2, #10667
 398 00ac 0A4B     		ldr	r3, .L27+12
 399 00ae 1A60     		str	r2, [r3]
1302:Generated_Source\PSoC5/Volume_ADC.c **** 
 400              		.loc 1 1302 0
 401 00b0 0820     		movs	r0, #8
 402 00b2 2946     		mov	r1, r5
 403 00b4 FFF7FEFF 		bl	Volume_ADC_Ext_CP_Clk_SetDividerRegister
 404              	.LVL43:
1306:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 405              		.loc 1 1306 0
 406 00b8 2520     		movs	r0, #37
 407 00ba 2946     		mov	r1, r5
 408 00bc FFF7FEFF 		bl	Volume_ADC_theACLK_SetDividerRegister
 409              	.LVL44:
1311:Generated_Source\PSoC5/Volume_ADC.c ****         #endif   /* End Volume_ADC_IRQ_REMOVE */
 410              		.loc 1 1311 0
 411 00c0 1D20     		movs	r0, #29
 412 00c2 0649     		ldr	r1, .L27+16
 413 00c4 FFF7FEFF 		bl	CyIntSetVector
 414              	.LVL45:
 415              	.L24:
 416 00c8 38BD     		pop	{r3, r4, r5, pc}
 417              	.L28:
 418 00ca 00BF     		.align	2
 419              	.L27:
 420 00cc 00000000 		.word	.LANCHOR0
 421 00d0 004E0040 		.word	1073761792
 422 00d4 94580040 		.word	1073764500
 423 00d8 00000000 		.word	Volume_ADC_CountsPerVolt
 424 00dc 00000000 		.word	Volume_ADC_ISR1
 425              		.cfi_endproc
 426              	.LFE19:
 427              		.size	Volume_ADC_InitConfig, .-Volume_ADC_InitConfig
 428              		.section	.text.Volume_ADC_Init,"ax",%progbits
 429              		.align	2
 430              		.global	Volume_ADC_Init
 431              		.thumb
 432              		.thumb_func
 433              		.type	Volume_ADC_Init, %function
 434              	Volume_ADC_Init:
 435              	.LFB0:
  92:Generated_Source\PSoC5/Volume_ADC.c **** 
 436              		.loc 1 92 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 441              		.cfi_def_cfa_offset 20
 442              		.cfi_offset 4, -20
 443              		.cfi_offset 5, -16
 444              		.cfi_offset 6, -12
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 40


 447 0002 83B0     		sub	sp, sp, #12
 448              		.cfi_def_cfa_offset 32
  94:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_convDone = 0u;
 449              		.loc 1 94 0
 450 0004 284D     		ldr	r5, .L31
 451 0006 0127     		movs	r7, #1
 452 0008 2F70     		strb	r7, [r5]
  95:Generated_Source\PSoC5/Volume_ADC.c **** 
 453              		.loc 1 95 0
 454 000a 284E     		ldr	r6, .L31+4
 455 000c 0024     		movs	r4, #0
 456 000e 7471     		strb	r4, [r6, #5]
  97:Generated_Source\PSoC5/Volume_ADC.c **** 
 457              		.loc 1 97 0
 458 0010 1020     		movs	r0, #16
 459 0012 FFF7FEFF 		bl	Volume_ADC_Ext_CP_Clk_SetModeRegister
 460              	.LVL46:
 101:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 461              		.loc 1 101 0
 462 0016 1020     		movs	r0, #16
 463 0018 FFF7FEFF 		bl	Volume_ADC_theACLK_SetModeRegister
 464              	.LVL47:
 106:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 465              		.loc 1 106 0
 466 001c 1D20     		movs	r0, #29
 467 001e 0721     		movs	r1, #7
 468 0020 FFF7FEFF 		bl	CyIntSetPriority
 469              	.LVL48:
 110:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_DEM1_REG    = Volume_ADC_CFG1_DSM_DEM1;
 470              		.loc 1 110 0
 471 0024 0422     		movs	r2, #4
 472 0026 224B     		ldr	r3, .L31+8
 473 0028 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_MISC_REG    = Volume_ADC_CFG1_DSM_MISC;
 474              		.loc 1 111 0
 475 002a 0133     		adds	r3, r3, #1
 476 002c 1C70     		strb	r4, [r3]
 112:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CLK_REG    |= Volume_ADC_CFG1_DSM_CLK;
 477              		.loc 1 112 0
 478 002e 0733     		adds	r3, r3, #7
 479 0030 1C70     		strb	r4, [r3]
 113:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF1_REG    = Volume_ADC_CFG1_DSM_REF1;
 480              		.loc 1 113 0
 481 0032 204A     		ldr	r2, .L31+12
 482 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 483 0036 43F01803 		orr	r3, r3, #24
 484 003a 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/Volume_ADC.c **** 
 485              		.loc 1 114 0
 486 003c 1E4B     		ldr	r3, .L31+16
 487 003e 1C70     		strb	r4, [r3]
 116:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_OUT1_REG    = Volume_ADC_CFG1_DSM_OUT1;
 488              		.loc 1 116 0
 489 0040 03F2F523 		addw	r3, r3, #757
 490 0044 1C70     		strb	r4, [r3]
 117:Generated_Source\PSoC5/Volume_ADC.c **** 
 491              		.loc 1 117 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 41


 492 0046 0133     		adds	r3, r3, #1
 493 0048 1C70     		strb	r4, [r3]
 119:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR1_REG     = Volume_ADC_CFG1_DSM_CR1;
 494              		.loc 1 119 0
 495 004a 0A22     		movs	r2, #10
 496 004c A3F20933 		subw	r3, r3, #777
 497 0050 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/Volume_ADC.c **** #if(Volume_ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 498              		.loc 1 120 0
 499 0052 0133     		adds	r3, r3, #1
 500 0054 1C70     		strb	r4, [r3]
 124:Generated_Source\PSoC5/Volume_ADC.c **** #endif /* Volume_ADC_MI_ENABLE != 0u*/    
 501              		.loc 1 124 0
 502 0056 0233     		adds	r3, r3, #2
 503 0058 1C70     		strb	r4, [r3]
 126:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR9_REG     = Volume_ADC_CFG1_DSM_CR9;
 504              		.loc 1 126 0
 505 005a 5B22     		movs	r2, #91
 506 005c 0533     		adds	r3, r3, #5
 507 005e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_CR13_REG    = Volume_ADC_CFG1_DSM_CR13;
 508              		.loc 1 127 0
 509 0060 5E22     		movs	r2, #94
 510 0062 0133     		adds	r3, r3, #1
 511 0064 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/Volume_ADC.c **** 
 512              		.loc 1 128 0
 513 0066 0433     		adds	r3, r3, #4
 514 0068 1C70     		strb	r4, [r3]
 130:Generated_Source\PSoC5/Volume_ADC.c **** 
 515              		.loc 1 130 0
 516 006a 1422     		movs	r2, #20
 517 006c A3F68C23 		subw	r3, r3, #2700
 518 0070 1A70     		strb	r2, [r3]
 133:Generated_Source\PSoC5/Volume_ADC.c ****                                       Volume_ADC_CFG1_IDEAL_DEC_GAIN,
 519              		.loc 1 133 0
 520 0072 0097     		str	r7, [sp]
 521 0074 0320     		movs	r0, #3
 522 0076 47F60271 		movw	r1, #32514
 523 007a 4FF40042 		mov	r2, #32768
 524 007e 1023     		movs	r3, #16
 525 0080 FFF7FEFF 		bl	Volume_ADC_GainCompensation
 526              	.LVL49:
 161:Generated_Source\PSoC5/Volume_ADC.c ****     CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[Volume_ADC_Config - 1u].gcor);
 527              		.loc 1 161 0
 528 0084 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 529 0086 06EB8303 		add	r3, r6, r3, lsl #2
 530 008a 13F8022C 		ldrb	r2, [r3, #-2]	@ zero_extendqisi2
 531 008e 0B4B     		ldr	r3, .L31+20
 532 0090 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC5/Volume_ADC.c **** 
 533              		.loc 1 162 0
 534 0092 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 535 0094 013B     		subs	r3, r3, #1
 536 0096 36F82320 		ldrh	r2, [r6, r3, lsl #2]
 537 009a 094B     		ldr	r3, .L31+24
 538 009c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 42


 165:Generated_Source\PSoC5/Volume_ADC.c **** }
 539              		.loc 1 165 0
 540 009e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 541 00a0 FFF7FEFF 		bl	Volume_ADC_InitConfig
 542              	.LVL50:
 166:Generated_Source\PSoC5/Volume_ADC.c **** 
 543              		.loc 1 166 0
 544 00a4 03B0     		add	sp, sp, #12
 545              		.cfi_def_cfa_offset 20
 546              		@ sp needed
 547 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 548              	.L32:
 549              		.align	2
 550              	.L31:
 551 00a8 00000000 		.word	.LANCHOR1
 552 00ac 00000000 		.word	.LANCHOR0
 553 00b0 96580040 		.word	1073764502
 554 00b4 075B0040 		.word	1073765127
 555 00b8 93580040 		.word	1073764499
 556 00bc 0E4E0040 		.word	1073761806
 557 00c0 0C4E0040 		.word	1073761804
 558              		.cfi_endproc
 559              	.LFE0:
 560              		.size	Volume_ADC_Init, .-Volume_ADC_Init
 561              		.section	.text.Volume_ADC_Enable,"ax",%progbits
 562              		.align	2
 563              		.global	Volume_ADC_Enable
 564              		.thumb
 565              		.thumb_func
 566              		.type	Volume_ADC_Enable, %function
 567              	Volume_ADC_Enable:
 568              	.LFB1:
 185:Generated_Source\PSoC5/Volume_ADC.c **** 	uint8 config;
 569              		.loc 1 185 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573 0000 70B5     		push	{r4, r5, r6, lr}
 574              		.cfi_def_cfa_offset 16
 575              		.cfi_offset 4, -16
 576              		.cfi_offset 5, -12
 577              		.cfi_offset 6, -8
 578              		.cfi_offset 14, -4
 188:Generated_Source\PSoC5/Volume_ADC.c **** 
 579              		.loc 1 188 0
 580 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 581              	.LVL51:
 582 0006 0646     		mov	r6, r0
 583              	.LVL52:
 191:Generated_Source\PSoC5/Volume_ADC.c ****     
 584              		.loc 1 191 0
 585 0008 2A4B     		ldr	r3, .L35
 586 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 587              	.LVL53:
 194:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_PWRMGR_DSM_REG |= Volume_ADC_ACT_PWR_DSM_EN;
 588              		.loc 1 194 0
 589 000c 2A4B     		ldr	r3, .L35+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 43


 590 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 591 0010 42F00102 		orr	r2, r2, #1
 592 0014 1A70     		strb	r2, [r3]
 195:Generated_Source\PSoC5/Volume_ADC.c **** 
 593              		.loc 1 195 0
 594 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 595 0018 42F01002 		orr	r2, r2, #16
 596 001c 1A70     		strb	r2, [r3]
 198:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG |= Volume_ADC_STBY_PWR_DSM_EN;
 597              		.loc 1 198 0
 598 001e 1033     		adds	r3, r3, #16
 599 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 600 0022 42F00102 		orr	r2, r2, #1
 601 0026 1A70     		strb	r2, [r3]
 199:Generated_Source\PSoC5/Volume_ADC.c **** 
 602              		.loc 1 199 0
 603 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 604 002a 42F01002 		orr	r2, r2, #16
 605 002e 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
 606              		.loc 1 202 0
 607 0030 224D     		ldr	r5, .L35+8
 608 0032 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 609 0034 43F00203 		orr	r3, r3, #2
 610 0038 2B70     		strb	r3, [r5]
 203:Generated_Source\PSoC5/Volume_ADC.c **** 
 611              		.loc 1 203 0
 612 003a 214C     		ldr	r4, .L35+12
 613 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 614 003e 43F00203 		orr	r3, r3, #2
 615 0042 2370     		strb	r3, [r4]
 205:Generated_Source\PSoC5/Volume_ADC.c **** 
 616              		.loc 1 205 0
 617 0044 1F4A     		ldr	r2, .L35+16
 618 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 619 0048 43F00303 		orr	r3, r3, #3
 620 004c 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/Volume_ADC.c **** 
 621              		.loc 1 271 0
 622 004e 0320     		movs	r0, #3
 623 0050 FFF7FEFF 		bl	CyDelayUs
 624              	.LVL54:
 274:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 625              		.loc 1 274 0
 626 0054 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 627 0056 03F0FD03 		and	r3, r3, #253
 628 005a 2B70     		strb	r3, [r5]
 275:Generated_Source\PSoC5/Volume_ADC.c **** 
 629              		.loc 1 275 0
 630 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 631 005e 03F0FD03 		and	r3, r3, #253
 632 0062 2370     		strb	r3, [r4]
 278:Generated_Source\PSoC5/Volume_ADC.c **** 
 633              		.loc 1 278 0
 634 0064 184A     		ldr	r2, .L35+20
 635 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 636 0068 43F00603 		orr	r3, r3, #6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 44


 637 006c 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/Volume_ADC.c **** 
 638              		.loc 1 281 0
 639 006e 7A22     		movs	r2, #122
 640 0070 164B     		ldr	r3, .L35+24
 641 0072 1A70     		strb	r2, [r3]
 285:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG |= Volume_ADC_STBY_PWR_CLK_EN;
 642              		.loc 1 285 0
 643 0074 164A     		ldr	r2, .L35+28
 644 0076 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 645 0078 43F00103 		orr	r3, r3, #1
 646 007c 1370     		strb	r3, [r2]
 286:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 647              		.loc 1 286 0
 648 007e 1032     		adds	r2, r2, #16
 649 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 650 0082 43F00103 		orr	r3, r3, #1
 651 0086 1370     		strb	r3, [r2]
 290:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 652              		.loc 1 290 0
 653 0088 0F3A     		subs	r2, r2, #15
 654 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 655 008c 43F00103 		orr	r3, r3, #1
 656 0090 1370     		strb	r3, [r2]
 291:Generated_Source\PSoC5/Volume_ADC.c **** 
 657              		.loc 1 291 0
 658 0092 1032     		adds	r2, r2, #16
 659 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 660 0096 43F00103 		orr	r3, r3, #1
 661 009a 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/Volume_ADC.c ****         /* Enable interrupt */
 662              		.loc 1 295 0
 663 009c 4FF00053 		mov	r3, #536870912
 664 00a0 0C4A     		ldr	r2, .L35+32
 665 00a2 1360     		str	r3, [r2]
 297:Generated_Source\PSoC5/Volume_ADC.c ****     #endif   /* End Volume_ADC_IRQ_REMOVE */
 666              		.loc 1 297 0
 667 00a4 A2F5C072 		sub	r2, r2, #384
 668 00a8 1360     		str	r3, [r2]
 300:Generated_Source\PSoC5/Volume_ADC.c **** 
 669              		.loc 1 300 0
 670 00aa 3046     		mov	r0, r6
 671 00ac FFF7FEFF 		bl	CyExitCriticalSection
 672              	.LVL55:
 673 00b0 70BD     		pop	{r4, r5, r6, pc}
 674              	.LVL56:
 675              	.L36:
 676 00b2 00BF     		.align	2
 677              	.L35:
 678 00b4 00000000 		.word	.LANCHOR1
 679 00b8 AA430040 		.word	1073759146
 680 00bc F8460040 		.word	1073759992
 681 00c0 F9460040 		.word	1073759993
 682 00c4 91580040 		.word	1073764497
 683 00c8 77580040 		.word	1073764471
 684 00cc 82580040 		.word	1073764482
 685 00d0 A1430040 		.word	1073759137
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 45


 686 00d4 80E200E0 		.word	-536812928
 687              		.cfi_endproc
 688              	.LFE1:
 689              		.size	Volume_ADC_Enable, .-Volume_ADC_Enable
 690              		.section	.text.Volume_ADC_Start,"ax",%progbits
 691              		.align	2
 692              		.global	Volume_ADC_Start
 693              		.thumb
 694              		.thumb_func
 695              		.type	Volume_ADC_Start, %function
 696              	Volume_ADC_Start:
 697              	.LFB2:
 330:Generated_Source\PSoC5/Volume_ADC.c ****     if(Volume_ADC_initVar == 0u)
 698              		.loc 1 330 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 08B5     		push	{r3, lr}
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 3, -8
 705              		.cfi_offset 14, -4
 331:Generated_Source\PSoC5/Volume_ADC.c ****     {
 706              		.loc 1 331 0
 707 0002 084B     		ldr	r3, .L41
 708 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 709 0006 4BB9     		cbnz	r3, .L38
 333:Generated_Source\PSoC5/Volume_ADC.c ****         {
 710              		.loc 1 333 0
 711 0008 064B     		ldr	r3, .L41
 712 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 713 000c 13F0FF0F 		tst	r3, #255
 714 0010 01D1     		bne	.L39
 335:Generated_Source\PSoC5/Volume_ADC.c ****         }
 715              		.loc 1 335 0
 716 0012 FFF7FEFF 		bl	Volume_ADC_Init
 717              	.LVL57:
 718              	.L39:
 337:Generated_Source\PSoC5/Volume_ADC.c ****     }
 719              		.loc 1 337 0
 720 0016 0122     		movs	r2, #1
 721 0018 024B     		ldr	r3, .L41
 722 001a 9A71     		strb	r2, [r3, #6]
 723              	.L38:
 341:Generated_Source\PSoC5/Volume_ADC.c **** }
 724              		.loc 1 341 0
 725 001c FFF7FEFF 		bl	Volume_ADC_Enable
 726              	.LVL58:
 727 0020 08BD     		pop	{r3, pc}
 728              	.L42:
 729 0022 00BF     		.align	2
 730              	.L41:
 731 0024 00000000 		.word	.LANCHOR0
 732              		.cfi_endproc
 733              	.LFE2:
 734              		.size	Volume_ADC_Start, .-Volume_ADC_Start
 735              		.section	.text.Volume_ADC_Stop,"ax",%progbits
 736              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 46


 737              		.global	Volume_ADC_Stop
 738              		.thumb
 739              		.thumb_func
 740              		.type	Volume_ADC_Stop, %function
 741              	Volume_ADC_Stop:
 742              	.LFB3:
 363:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 enableInterrupts;
 743              		.loc 1 363 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747 0000 70B5     		push	{r4, r5, r6, lr}
 748              		.cfi_def_cfa_offset 16
 749              		.cfi_offset 4, -16
 750              		.cfi_offset 5, -12
 751              		.cfi_offset 6, -8
 752              		.cfi_offset 14, -4
 365:Generated_Source\PSoC5/Volume_ADC.c **** 
 753              		.loc 1 365 0
 754 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 755              	.LVL59:
 756 0006 0646     		mov	r6, r0
 757              	.LVL60:
 368:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |=  Volume_ADC_DEC_INTR_CLEAR;
 758              		.loc 1 368 0
 759 0008 314A     		ldr	r2, .L45
 760 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 761 000c 03F0FE03 		and	r3, r3, #254
 762 0010 1370     		strb	r3, [r2]
 369:Generated_Source\PSoC5/Volume_ADC.c **** 
 763              		.loc 1 369 0
 764 0012 0132     		adds	r2, r2, #1
 765 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 766 0016 43F00403 		orr	r3, r3, #4
 767 001a 1370     		strb	r3, [r2]
 373:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG |= Volume_ADC_IGNORE_PRESA2;
 768              		.loc 1 373 0
 769 001c 2D4D     		ldr	r5, .L45+4
 770 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 771 0020 43F00203 		orr	r3, r3, #2
 772 0024 2B70     		strb	r3, [r5]
 374:Generated_Source\PSoC5/Volume_ADC.c **** 
 773              		.loc 1 374 0
 774 0026 2C4C     		ldr	r4, .L45+8
 775 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 776 002a 43F00203 		orr	r3, r3, #2
 777 002e 2370     		strb	r3, [r4]
 376:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_REF0_REG &= (uint8)~Volume_ADC_DSM_EN_BUF_VREF_INN;
 778              		.loc 1 376 0
 779 0030 02F52962 		add	r2, r2, #2704
 780 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 781 0036 03F0FC03 		and	r3, r3, #252
 782 003a 1370     		strb	r3, [r2]
 377:Generated_Source\PSoC5/Volume_ADC.c **** 
 783              		.loc 1 377 0
 784 003c 0132     		adds	r2, r2, #1
 785 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 47


 786 0040 03F0F703 		and	r3, r3, #247
 787 0044 1370     		strb	r3, [r2]
 380:Generated_Source\PSoC5/Volume_ADC.c **** 
 788              		.loc 1 380 0
 789 0046 0320     		movs	r0, #3
 790 0048 FFF7FEFF 		bl	CyDelayUs
 791              	.LVL61:
 383:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_RESET_CR5_REG &= (uint8)~Volume_ADC_IGNORE_PRESA2;
 792              		.loc 1 383 0
 793 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 794 004e 03F0FD03 		and	r3, r3, #253
 795 0052 2B70     		strb	r3, [r5]
 384:Generated_Source\PSoC5/Volume_ADC.c **** 
 796              		.loc 1 384 0
 797 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 798 0056 03F0FD03 		and	r3, r3, #253
 799 005a 2370     		strb	r3, [r4]
 387:Generated_Source\PSoC5/Volume_ADC.c **** 
 800              		.loc 1 387 0
 801 005c 1F4B     		ldr	r3, .L45+12
 802 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 803 0060 02F0EF02 		and	r2, r2, #239
 804 0064 1A70     		strb	r2, [r3]
 390:Generated_Source\PSoC5/Volume_ADC.c **** 
 805              		.loc 1 390 0
 806 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 807 0068 02F0FE02 		and	r2, r2, #254
 808 006c 1A70     		strb	r2, [r3]
 393:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_DSM_REG &= (uint8)~Volume_ADC_STBY_PWR_DSM_EN;
 809              		.loc 1 393 0
 810 006e 1033     		adds	r3, r3, #16
 811 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 812 0072 02F0FE02 		and	r2, r2, #254
 813 0076 1A70     		strb	r2, [r3]
 394:Generated_Source\PSoC5/Volume_ADC.c **** 
 814              		.loc 1 394 0
 815 0078 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 816 007a 02F0EF02 		and	r2, r2, #239
 817 007e 1A70     		strb	r2, [r3]
 397:Generated_Source\PSoC5/Volume_ADC.c **** 
 818              		.loc 1 397 0
 819 0080 174A     		ldr	r2, .L45+16
 820 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 821 0084 03F0F903 		and	r3, r3, #249
 822 0088 1370     		strb	r3, [r2]
 401:Generated_Source\PSoC5/Volume_ADC.c ****         Volume_ADC_STBY_PWRMGR_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CLK_EN;
 823              		.loc 1 401 0
 824 008a A2F5A652 		sub	r2, r2, #5312
 825 008e 163A     		subs	r2, r2, #22
 826 0090 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 827 0092 03F0FE03 		and	r3, r3, #254
 828 0096 1370     		strb	r3, [r2]
 402:Generated_Source\PSoC5/Volume_ADC.c ****     #endif /* Volume_ADC_DEFAULT_INTERNAL_CLK */
 829              		.loc 1 402 0
 830 0098 1032     		adds	r2, r2, #16
 831 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 832 009c 03F0FE03 		and	r3, r3, #254
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 48


 833 00a0 1370     		strb	r3, [r2]
 406:Generated_Source\PSoC5/Volume_ADC.c ****     /* Disable power to charge pump clock */
 834              		.loc 1 406 0
 835 00a2 02F5A652 		add	r2, r2, #5312
 836 00a6 1132     		adds	r2, r2, #17
 837 00a8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 838 00aa 03F0F703 		and	r3, r3, #247
 839 00ae 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~Volume_ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 840              		.loc 1 408 0
 841 00b0 A2F5A752 		sub	r2, r2, #5344
 842 00b4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 843 00b6 03F0FE03 		and	r3, r3, #254
 844 00ba 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/Volume_ADC.c ****     
 845              		.loc 1 409 0
 846 00bc 1032     		adds	r2, r2, #16
 847 00be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 848 00c0 03F0FE03 		and	r3, r3, #254
 849 00c4 1370     		strb	r3, [r2]
 411:Generated_Source\PSoC5/Volume_ADC.c **** }
 850              		.loc 1 411 0
 851 00c6 3046     		mov	r0, r6
 852 00c8 FFF7FEFF 		bl	CyExitCriticalSection
 853              	.LVL62:
 854 00cc 70BD     		pop	{r4, r5, r6, pc}
 855              	.LVL63:
 856              	.L46:
 857 00ce 00BF     		.align	2
 858              	.L45:
 859 00d0 004E0040 		.word	1073761792
 860 00d4 F8460040 		.word	1073759992
 861 00d8 F9460040 		.word	1073759993
 862 00dc AA430040 		.word	1073759146
 863 00e0 77580040 		.word	1073764471
 864              		.cfi_endproc
 865              	.LFE3:
 866              		.size	Volume_ADC_Stop, .-Volume_ADC_Stop
 867              		.section	.text.Volume_ADC_SetBufferGain,"ax",%progbits
 868              		.align	2
 869              		.global	Volume_ADC_SetBufferGain
 870              		.thumb
 871              		.thumb_func
 872              		.type	Volume_ADC_SetBufferGain, %function
 873              	Volume_ADC_SetBufferGain:
 874              	.LFB4:
 430:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
 875              		.loc 1 430 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL64:
 432:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= (uint8)(gain << Volume_ADC_DSM_GAIN_SHIFT) & Volume_ADC_DSM_GAIN_MASK;
 881              		.loc 1 432 0
 882 0000 044A     		ldr	r2, .L48
 883 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 49


 884 0004 03F0F303 		and	r3, r3, #243
 885              	.LVL65:
 433:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DSM_BUF1_REG = tmpReg;
 886              		.loc 1 433 0
 887 0008 8000     		lsls	r0, r0, #2
 888              	.LVL66:
 889 000a 00F00C00 		and	r0, r0, #12
 890 000e 1843     		orrs	r0, r0, r3
 891              	.LVL67:
 434:Generated_Source\PSoC5/Volume_ADC.c **** }
 892              		.loc 1 434 0
 893 0010 1070     		strb	r0, [r2]
 894 0012 7047     		bx	lr
 895              	.L49:
 896              		.align	2
 897              	.L48:
 898 0014 9B580040 		.word	1073764507
 899              		.cfi_endproc
 900              	.LFE4:
 901              		.size	Volume_ADC_SetBufferGain, .-Volume_ADC_SetBufferGain
 902              		.section	.text.Volume_ADC_SetCoherency,"ax",%progbits
 903              		.align	2
 904              		.global	Volume_ADC_SetCoherency
 905              		.thumb
 906              		.thumb_func
 907              		.type	Volume_ADC_SetCoherency, %function
 908              	Volume_ADC_SetCoherency:
 909              	.LFB5:
 466:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 tmpReg;
 910              		.loc 1 466 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915              	.LVL68:
 469:Generated_Source\PSoC5/Volume_ADC.c ****     tmpReg |= coherency & Volume_ADC_DEC_SAMP_KEY_MASK;
 916              		.loc 1 469 0
 917 0000 044A     		ldr	r2, .L51
 918 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 919 0004 03F0FC03 		and	r3, r3, #252
 920              	.LVL69:
 470:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_COHER_REG = tmpReg;
 921              		.loc 1 470 0
 922 0008 00F00300 		and	r0, r0, #3
 923              	.LVL70:
 924 000c 1843     		orrs	r0, r0, r3
 925              	.LVL71:
 471:Generated_Source\PSoC5/Volume_ADC.c **** }
 926              		.loc 1 471 0
 927 000e 1070     		strb	r0, [r2]
 928 0010 7047     		bx	lr
 929              	.L52:
 930 0012 00BF     		.align	2
 931              	.L51:
 932 0014 144E0040 		.word	1073761812
 933              		.cfi_endproc
 934              	.LFE5:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 50


 935              		.size	Volume_ADC_SetCoherency, .-Volume_ADC_SetCoherency
 936              		.global	__aeabi_ui2f
 937              		.global	__aeabi_fmul
 938              		.global	__aeabi_f2d
 939              		.global	__aeabi_dcmpgt
 940              		.global	__aeabi_f2uiz
 941              		.section	.text.Volume_ADC_SetGCOR,"ax",%progbits
 942              		.align	2
 943              		.global	Volume_ADC_SetGCOR
 944              		.thumb
 945              		.thumb_func
 946              		.type	Volume_ADC_SetGCOR, %function
 947              	Volume_ADC_SetGCOR:
 948              	.LFB6:
 506:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 tmpReg;
 949              		.loc 1 506 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              	.LVL72:
 954 0000 10B5     		push	{r4, lr}
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 4, -8
 957              		.cfi_offset 14, -4
 958 0002 0446     		mov	r4, r0
 511:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = ((float32)tmpReg / (float32)Volume_ADC_IDEAL_GAIN_CONST);
 959              		.loc 1 511 0
 960 0004 184B     		ldr	r3, .L57+8
 961 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0008 013B     		subs	r3, r3, #1
 963              	.LVL73:
 512:Generated_Source\PSoC5/Volume_ADC.c ****     tmpValue = tmpValue * gainAdjust;
 964              		.loc 1 512 0
 965 000a 184A     		ldr	r2, .L57+12
 966 000c 32F82300 		ldrh	r0, [r2, r3, lsl #2]
 967              	.LVL74:
 968 0010 FFF7FEFF 		bl	__aeabi_ui2f
 969              	.LVL75:
 970 0014 4FF06051 		mov	r1, #939524096
 971 0018 FFF7FEFF 		bl	__aeabi_fmul
 972              	.LVL76:
 513:Generated_Source\PSoC5/Volume_ADC.c **** 
 973              		.loc 1 513 0
 974 001c 2146     		mov	r1, r4
 975 001e FFF7FEFF 		bl	__aeabi_fmul
 976              	.LVL77:
 977 0022 0446     		mov	r4, r0
 978              	.LVL78:
 515:Generated_Source\PSoC5/Volume_ADC.c ****     {
 979              		.loc 1 515 0
 980 0024 FFF7FEFF 		bl	__aeabi_f2d
 981              	.LVL79:
 982 0028 0DA3     		adr	r3, .L57
 983 002a D3E90023 		ldrd	r2, [r3]
 984 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 985              	.LVL80:
 986 0032 88B9     		cbnz	r0, .L55
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 51


 521:Generated_Source\PSoC5/Volume_ADC.c **** 		tmpReg = (uint16)tmpValue;
 987              		.loc 1 521 0
 988 0034 2046     		mov	r0, r4
 989 0036 4FF08E41 		mov	r1, #1191182336
 990 003a FFF7FEFF 		bl	__aeabi_fmul
 991              	.LVL81:
 522:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, tmpReg);
 992              		.loc 1 522 0
 993 003e FFF7FEFF 		bl	__aeabi_f2uiz
 994              	.LVL82:
 995 0042 80B2     		uxth	r0, r0
 996              	.LVL83:
 523:Generated_Source\PSoC5/Volume_ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 997              		.loc 1 523 0
 998 0044 0A4B     		ldr	r3, .L57+16
 999 0046 1880     		strh	r0, [r3]	@ movhi
 525:Generated_Source\PSoC5/Volume_ADC.c **** 
 1000              		.loc 1 525 0
 1001 0048 074B     		ldr	r3, .L57+8
 1002 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 004c 013B     		subs	r3, r3, #1
 1004 004e 074A     		ldr	r2, .L57+12
 1005 0050 22F82300 		strh	r0, [r2, r3, lsl #2]	@ movhi
 1006              	.LVL84:
 527:Generated_Source\PSoC5/Volume_ADC.c **** 
 1007              		.loc 1 527 0
 1008 0054 0020     		movs	r0, #0
 1009              	.LVL85:
 1010 0056 10BD     		pop	{r4, pc}
 1011              	.LVL86:
 1012              	.L55:
 517:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1013              		.loc 1 517 0
 1014 0058 0120     		movs	r0, #1
 1015              	.LVL87:
 531:Generated_Source\PSoC5/Volume_ADC.c **** 
 1016              		.loc 1 531 0
 1017 005a 10BD     		pop	{r4, pc}
 1018              	.LVL88:
 1019              	.L58:
 1020 005c AFF30080 		.align	3
 1021              	.L57:
 1022 0060 8F537424 		.word	611603343
 1023 0064 97FFFF3F 		.word	1073741719
 1024 0068 00000000 		.word	.LANCHOR1
 1025 006c 00000000 		.word	.LANCHOR0
 1026 0070 0C4E0040 		.word	1073761804
 1027              		.cfi_endproc
 1028              	.LFE6:
 1029              		.size	Volume_ADC_SetGCOR, .-Volume_ADC_SetGCOR
 1030 0074 AFF30080 		.section	.text.Volume_ADC_ReadGCOR,"ax",%progbits
 1031              		.align	2
 1032              		.global	Volume_ADC_ReadGCOR
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	Volume_ADC_ReadGCOR, %function
 1036              	Volume_ADC_ReadGCOR:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 52


 1037              	.LFB7:
 553:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 gValue;
 1038              		.loc 1 553 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 557:Generated_Source\PSoC5/Volume_ADC.c ****     gcorValue = CY_GET_REG16(Volume_ADC_DEC_GCOR_16B_PTR);
 1043              		.loc 1 557 0
 1044 0000 064B     		ldr	r3, .L61
 1045 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1046 0004 DBB2     		uxtb	r3, r3
 1047              	.LVL89:
 558:Generated_Source\PSoC5/Volume_ADC.c **** 
 1048              		.loc 1 558 0
 1049 0006 064A     		ldr	r2, .L61+4
 1050 0008 1088     		ldrh	r0, [r2]
 1051 000a 80B2     		uxth	r0, r0
 1052              	.LVL90:
 560:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1053              		.loc 1 560 0
 1054 000c 0E2B     		cmp	r3, #14
 1055 000e 03D8     		bhi	.L60
 562:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1056              		.loc 1 562 0
 1057 0010 C3F10F03 		rsb	r3, r3, #15
 1058              	.LVL91:
 1059 0014 9840     		lsls	r0, r0, r3
 1060              	.LVL92:
 1061 0016 80B2     		uxth	r0, r0
 1062              	.LVL93:
 1063              	.L60:
 566:Generated_Source\PSoC5/Volume_ADC.c **** 
 1064              		.loc 1 566 0
 1065 0018 7047     		bx	lr
 1066              	.L62:
 1067 001a 00BF     		.align	2
 1068              	.L61:
 1069 001c 0E4E0040 		.word	1073761806
 1070 0020 0C4E0040 		.word	1073761804
 1071              		.cfi_endproc
 1072              	.LFE7:
 1073              		.size	Volume_ADC_ReadGCOR, .-Volume_ADC_ReadGCOR
 1074              		.section	.text.Volume_ADC_StartConvert,"ax",%progbits
 1075              		.align	2
 1076              		.global	Volume_ADC_StartConvert
 1077              		.thumb
 1078              		.thumb_func
 1079              		.type	Volume_ADC_StartConvert, %function
 1080              	Volume_ADC_StartConvert:
 1081              	.LFB8:
 587:Generated_Source\PSoC5/Volume_ADC.c ****     /* Start the conversion */
 1082              		.loc 1 587 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086              		@ link register save eliminated.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 53


 589:Generated_Source\PSoC5/Volume_ADC.c **** }
 1087              		.loc 1 589 0
 1088 0000 024A     		ldr	r2, .L64
 1089 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1090 0004 43F00103 		orr	r3, r3, #1
 1091 0008 1370     		strb	r3, [r2]
 1092 000a 7047     		bx	lr
 1093              	.L65:
 1094              		.align	2
 1095              	.L64:
 1096 000c 004E0040 		.word	1073761792
 1097              		.cfi_endproc
 1098              	.LFE8:
 1099              		.size	Volume_ADC_StartConvert, .-Volume_ADC_StartConvert
 1100              		.section	.text.Volume_ADC_StopConvert,"ax",%progbits
 1101              		.align	2
 1102              		.global	Volume_ADC_StopConvert
 1103              		.thumb
 1104              		.thumb_func
 1105              		.type	Volume_ADC_StopConvert, %function
 1106              	Volume_ADC_StopConvert:
 1107              	.LFB9:
 610:Generated_Source\PSoC5/Volume_ADC.c ****     /* Stop all conversions */
 1108              		.loc 1 610 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 612:Generated_Source\PSoC5/Volume_ADC.c **** }
 1113              		.loc 1 612 0
 1114 0000 024A     		ldr	r2, .L67
 1115 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1116 0004 03F0FE03 		and	r3, r3, #254
 1117 0008 1370     		strb	r3, [r2]
 1118 000a 7047     		bx	lr
 1119              	.L68:
 1120              		.align	2
 1121              	.L67:
 1122 000c 004E0040 		.word	1073761792
 1123              		.cfi_endproc
 1124              	.LFE9:
 1125              		.size	Volume_ADC_StopConvert, .-Volume_ADC_StopConvert
 1126              		.section	.text.Volume_ADC_IsEndConversion,"ax",%progbits
 1127              		.align	2
 1128              		.global	Volume_ADC_IsEndConversion
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	Volume_ADC_IsEndConversion, %function
 1132              	Volume_ADC_IsEndConversion:
 1133              	.LFB10:
 645:Generated_Source\PSoC5/Volume_ADC.c ****     uint8 status;
 1134              		.loc 1 645 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139              	.LVL94:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 54


 1140              	.L73:
 653:Generated_Source\PSoC5/Volume_ADC.c ****         {
 1141              		.loc 1 653 0
 1142 0000 094B     		ldr	r3, .L74
 1143 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1144 0004 13F0FF0F 		tst	r3, #255
 1145 0008 03D0     		beq	.L70
 655:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1146              		.loc 1 655 0
 1147 000a 074B     		ldr	r3, .L74
 1148 000c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1149 000e DBB2     		uxtb	r3, r3
 1150              	.LVL95:
 1151 0010 03E0     		b	.L71
 1152              	.LVL96:
 1153              	.L70:
 659:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1154              		.loc 1 659 0
 1155 0012 064B     		ldr	r3, .L74+4
 1156 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1157 0016 03F00103 		and	r3, r3, #1
 1158              	.LVL97:
 1159              	.L71:
 661:Generated_Source\PSoC5/Volume_ADC.c **** 
 1160              		.loc 1 661 0
 1161 001a 012B     		cmp	r3, #1
 1162 001c 01D0     		beq	.L72
 661:Generated_Source\PSoC5/Volume_ADC.c **** 
 1163              		.loc 1 661 0 is_stmt 0 discriminator 1
 1164 001e 0028     		cmp	r0, #0
 1165 0020 EED0     		beq	.L73
 1166              	.L72:
 664:Generated_Source\PSoC5/Volume_ADC.c **** 
 1167              		.loc 1 664 0 is_stmt 1
 1168 0022 1846     		mov	r0, r3
 1169              	.LVL98:
 1170 0024 7047     		bx	lr
 1171              	.L75:
 1172 0026 00BF     		.align	2
 1173              	.L74:
 1174 0028 00000000 		.word	.LANCHOR0
 1175 002c 014E0040 		.word	1073761793
 1176              		.cfi_endproc
 1177              	.LFE10:
 1178              		.size	Volume_ADC_IsEndConversion, .-Volume_ADC_IsEndConversion
 1179              		.section	.text.Volume_ADC_GetResult8,"ax",%progbits
 1180              		.align	2
 1181              		.global	Volume_ADC_GetResult8
 1182              		.thumb
 1183              		.thumb_func
 1184              		.type	Volume_ADC_GetResult8, %function
 1185              	Volume_ADC_GetResult8:
 1186              	.LFB11:
 692:Generated_Source\PSoC5/Volume_ADC.c ****     int8 result;
 1187              		.loc 1 692 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 55


 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 697:Generated_Source\PSoC5/Volume_ADC.c **** 
 1192              		.loc 1 697 0
 1193 0000 0C4B     		ldr	r3, .L80
 1194 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 0004 03F00303 		and	r3, r3, #3
 1196              	.LVL99:
 699:Generated_Source\PSoC5/Volume_ADC.c **** 
 1197              		.loc 1 699 0
 1198 0008 0B4A     		ldr	r2, .L80+4
 1199 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1200              	.LVL100:
 701:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 1201              		.loc 1 701 0
 1202 000c 022B     		cmp	r3, #2
 1203 000e 02D1     		bne	.L77
 703:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1204              		.loc 1 703 0
 1205 0010 0A4B     		ldr	r3, .L80+8
 1206              	.LVL101:
 1207 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 0014 03E0     		b	.L78
 1209              	.LVL102:
 1210              	.L77:
 705:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 1211              		.loc 1 705 0
 1212 0016 032B     		cmp	r3, #3
 1213 0018 01D1     		bne	.L78
 707:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1214              		.loc 1 707 0
 1215 001a 094B     		ldr	r3, .L80+12
 1216              	.LVL103:
 1217 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1218              	.L78:
 713:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1219              		.loc 1 713 0
 1220 001e 094B     		ldr	r3, .L80+16
 1221 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1222 0022 13F0FF0F 		tst	r3, #255
 1223 0026 02D0     		beq	.L79
 715:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1224              		.loc 1 715 0
 1225 0028 0022     		movs	r2, #0
 1226 002a 064B     		ldr	r3, .L80+16
 1227 002c 5A71     		strb	r2, [r3, #5]
 1228              	.L79:
 718:Generated_Source\PSoC5/Volume_ADC.c **** 
 1229              		.loc 1 718 0
 1230 002e 40B2     		sxtb	r0, r0
 1231 0030 7047     		bx	lr
 1232              	.L81:
 1233 0032 00BF     		.align	2
 1234              	.L80:
 1235 0034 144E0040 		.word	1073761812
 1236 0038 104E0040 		.word	1073761808
 1237 003c 114E0040 		.word	1073761809
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 56


 1238 0040 124E0040 		.word	1073761810
 1239 0044 00000000 		.word	.LANCHOR0
 1240              		.cfi_endproc
 1241              	.LFE11:
 1242              		.size	Volume_ADC_GetResult8, .-Volume_ADC_GetResult8
 1243              		.section	.text.Volume_ADC_GetResult16,"ax",%progbits
 1244              		.align	2
 1245              		.global	Volume_ADC_GetResult16
 1246              		.thumb
 1247              		.thumb_func
 1248              		.type	Volume_ADC_GetResult16, %function
 1249              	Volume_ADC_GetResult16:
 1250              	.LFB12:
 746:Generated_Source\PSoC5/Volume_ADC.c ****     uint16 result;
 1251              		.loc 1 746 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 751:Generated_Source\PSoC5/Volume_ADC.c **** 
 1256              		.loc 1 751 0
 1257 0000 0E4B     		ldr	r3, .L86
 1258 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1259 0004 03F00303 		and	r3, r3, #3
 1260              	.LVL104:
 753:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1261              		.loc 1 753 0
 1262 0008 012B     		cmp	r3, #1
 1263 000a 03D8     		bhi	.L83
 759:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1264              		.loc 1 759 0
 1265 000c 0C4B     		ldr	r3, .L86+4
 1266              	.LVL105:
 1267 000e 1888     		ldrh	r0, [r3]
 1268 0010 80B2     		uxth	r0, r0
 1269              	.LVL106:
 1270 0012 09E0     		b	.L84
 1271              	.LVL107:
 1272              	.L83:
 767:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint16)((uint16)Volume_ADC_DEC_SAMPM_REG << 8u);
 1273              		.loc 1 767 0
 1274 0014 0A4A     		ldr	r2, .L86+4
 1275 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1276              	.LVL108:
 768:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1277              		.loc 1 768 0
 1278 0018 0A49     		ldr	r1, .L86+8
 1279 001a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1280 001c 42EA0020 		orr	r0, r2, r0, lsl #8
 1281              	.LVL109:
 770:Generated_Source\PSoC5/Volume_ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 1282              		.loc 1 770 0
 1283 0020 032B     		cmp	r3, #3
 1284 0022 01D1     		bne	.L84
 772:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1285              		.loc 1 772 0
 1286 0024 084B     		ldr	r3, .L86+12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 57


 1287              	.LVL110:
 1288 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1289              	.L84:
 776:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1290              		.loc 1 776 0
 1291 0028 084B     		ldr	r3, .L86+16
 1292 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1293 002c 13F0FF0F 		tst	r3, #255
 1294 0030 02D0     		beq	.L85
 778:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1295              		.loc 1 778 0
 1296 0032 0022     		movs	r2, #0
 1297 0034 054B     		ldr	r3, .L86+16
 1298 0036 5A71     		strb	r2, [r3, #5]
 1299              	.L85:
 782:Generated_Source\PSoC5/Volume_ADC.c **** 
 1300              		.loc 1 782 0
 1301 0038 00B2     		sxth	r0, r0
 1302 003a 7047     		bx	lr
 1303              	.L87:
 1304              		.align	2
 1305              	.L86:
 1306 003c 144E0040 		.word	1073761812
 1307 0040 104E0040 		.word	1073761808
 1308 0044 114E0040 		.word	1073761809
 1309 0048 124E0040 		.word	1073761810
 1310 004c 00000000 		.word	.LANCHOR0
 1311              		.cfi_endproc
 1312              	.LFE12:
 1313              		.size	Volume_ADC_GetResult16, .-Volume_ADC_GetResult16
 1314              		.section	.text.Volume_ADC_GetResult32,"ax",%progbits
 1315              		.align	2
 1316              		.global	Volume_ADC_GetResult32
 1317              		.thumb
 1318              		.thumb_func
 1319              		.type	Volume_ADC_GetResult32, %function
 1320              	Volume_ADC_GetResult32:
 1321              	.LFB13:
 806:Generated_Source\PSoC5/Volume_ADC.c ****     uint32 result;
 1322              		.loc 1 806 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 814:Generated_Source\PSoC5/Volume_ADC.c **** 
 1327              		.loc 1 814 0
 1328 0000 154B     		ldr	r3, .L93
 1329 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0004 03F00303 		and	r3, r3, #3
 1331              	.LVL111:
 816:Generated_Source\PSoC5/Volume_ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 1332              		.loc 1 816 0
 1333 0008 012B     		cmp	r3, #1
 1334 000a 07D8     		bhi	.L89
 827:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | (CY_GET_REG16(Volume_ADC_DEC_SAMP_16B_PTR));
 1335              		.loc 1 827 0
 1336 000c 134B     		ldr	r3, .L93+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 58


 1337              	.LVL112:
 1338 000e 1888     		ldrh	r0, [r3]
 1339              	.LVL113:
 828:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1340              		.loc 1 828 0
 1341 0010 023B     		subs	r3, r3, #2
 1342 0012 1B88     		ldrh	r3, [r3]
 1343 0014 9BB2     		uxth	r3, r3
 1344 0016 43EA0040 		orr	r0, r3, r0, lsl #16
 1345              	.LVL114:
 1346 001a 13E0     		b	.L90
 1347              	.LVL115:
 1348              	.L89:
 831:Generated_Source\PSoC5/Volume_ADC.c ****     {   /* Read middle byte at the end */
 1349              		.loc 1 831 0
 1350 001c 022B     		cmp	r3, #2
 1351 001e 0AD1     		bne	.L91
 841:Generated_Source\PSoC5/Volume_ADC.c ****             result = (result << 16u) | Volume_ADC_DEC_SAMP_REG;
 1352              		.loc 1 841 0
 1353 0020 0E4B     		ldr	r3, .L93+4
 1354              	.LVL116:
 1355 0022 1888     		ldrh	r0, [r3]
 1356              	.LVL117:
 842:Generated_Source\PSoC5/Volume_ADC.c ****             result |=  (uint32)((uint32)Volume_ADC_DEC_SAMPM_REG << 8u);
 1357              		.loc 1 842 0
 1358 0024 023B     		subs	r3, r3, #2
 1359 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1360 0028 43EA0043 		orr	r3, r3, r0, lsl #16
 1361              	.LVL118:
 843:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1362              		.loc 1 843 0
 1363 002c 0C4A     		ldr	r2, .L93+8
 1364 002e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1365 0030 43EA0020 		orr	r0, r3, r0, lsl #8
 1366              	.LVL119:
 1367 0034 06E0     		b	.L90
 1368              	.LVL120:
 1369              	.L91:
 858:Generated_Source\PSoC5/Volume_ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(Volume_ADC_DEC_SAMPH_16B_PTR) << 16u);
 1370              		.loc 1 858 0
 1371 0036 0B4B     		ldr	r3, .L93+12
 1372              	.LVL121:
 1373 0038 1888     		ldrh	r0, [r3]
 1374 003a 83B2     		uxth	r3, r0
 1375              	.LVL122:
 859:Generated_Source\PSoC5/Volume_ADC.c ****         #endif /* CY_PSOC3 */
 1376              		.loc 1 859 0
 1377 003c 074A     		ldr	r2, .L93+4
 1378 003e 1088     		ldrh	r0, [r2]
 1379 0040 43EA0040 		orr	r0, r3, r0, lsl #16
 1380              	.LVL123:
 1381              	.L90:
 863:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1382              		.loc 1 863 0
 1383 0044 084B     		ldr	r3, .L93+16
 1384 0046 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1385 0048 13F0FF0F 		tst	r3, #255
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 59


 1386 004c 02D0     		beq	.L92
 865:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1387              		.loc 1 865 0
 1388 004e 0022     		movs	r2, #0
 1389 0050 054B     		ldr	r3, .L93+16
 1390 0052 5A71     		strb	r2, [r3, #5]
 1391              	.L92:
 869:Generated_Source\PSoC5/Volume_ADC.c **** 
 1392              		.loc 1 869 0
 1393 0054 7047     		bx	lr
 1394              	.L94:
 1395 0056 00BF     		.align	2
 1396              	.L93:
 1397 0058 144E0040 		.word	1073761812
 1398 005c 124E0040 		.word	1073761810
 1399 0060 114E0040 		.word	1073761809
 1400 0064 104E0040 		.word	1073761808
 1401 0068 00000000 		.word	.LANCHOR0
 1402              		.cfi_endproc
 1403              	.LFE13:
 1404              		.size	Volume_ADC_GetResult32, .-Volume_ADC_GetResult32
 1405              		.section	.text.Volume_ADC_SetOffset,"ax",%progbits
 1406              		.align	2
 1407              		.global	Volume_ADC_SetOffset
 1408              		.thumb
 1409              		.thumb_func
 1410              		.type	Volume_ADC_SetOffset, %function
 1411              	Volume_ADC_SetOffset:
 1412              	.LFB14:
 899:Generated_Source\PSoC5/Volume_ADC.c **** 
 1413              		.loc 1 899 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              		@ link register save eliminated.
 1418              	.LVL124:
 901:Generated_Source\PSoC5/Volume_ADC.c **** }
 1419              		.loc 1 901 0
 1420 0000 014B     		ldr	r3, .L96
 1421 0002 1860     		str	r0, [r3]
 1422 0004 7047     		bx	lr
 1423              	.L97:
 1424 0006 00BF     		.align	2
 1425              	.L96:
 1426 0008 00000000 		.word	Volume_ADC_Offset
 1427              		.cfi_endproc
 1428              	.LFE14:
 1429              		.size	Volume_ADC_SetOffset, .-Volume_ADC_SetOffset
 1430              		.section	.text.Volume_ADC_SetGain,"ax",%progbits
 1431              		.align	2
 1432              		.global	Volume_ADC_SetGain
 1433              		.thumb
 1434              		.thumb_func
 1435              		.type	Volume_ADC_SetGain, %function
 1436              	Volume_ADC_SetGain:
 1437              	.LFB15:
 934:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_CountsPerVolt = adcGain;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 60


 1438              		.loc 1 934 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 1443              	.LVL125:
 935:Generated_Source\PSoC5/Volume_ADC.c **** }
 1444              		.loc 1 935 0
 1445 0000 014B     		ldr	r3, .L99
 1446 0002 1860     		str	r0, [r3]
 1447 0004 7047     		bx	lr
 1448              	.L100:
 1449 0006 00BF     		.align	2
 1450              	.L99:
 1451 0008 00000000 		.word	Volume_ADC_CountsPerVolt
 1452              		.cfi_endproc
 1453              	.LFE15:
 1454              		.size	Volume_ADC_SetGain, .-Volume_ADC_SetGain
 1455              		.section	.text.Volume_ADC_CountsTo_mVolts,"ax",%progbits
 1456              		.align	2
 1457              		.global	Volume_ADC_CountsTo_mVolts
 1458              		.thumb
 1459              		.thumb_func
 1460              		.type	Volume_ADC_CountsTo_mVolts, %function
 1461              	Volume_ADC_CountsTo_mVolts:
 1462              	.LFB16:
 961:Generated_Source\PSoC5/Volume_ADC.c **** 
 1463              		.loc 1 961 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
 1468              	.LVL126:
 992:Generated_Source\PSoC5/Volume_ADC.c **** 
 1469              		.loc 1 992 0
 1470 0000 064B     		ldr	r3, .L102
 1471 0002 1B68     		ldr	r3, [r3]
 1472 0004 C01A     		subs	r0, r0, r3
 1473              	.LVL127:
 994:Generated_Source\PSoC5/Volume_ADC.c **** 
 1474              		.loc 1 994 0
 1475 0006 4FF47A73 		mov	r3, #1000
 1476 000a 03FB00F0 		mul	r0, r3, r0
 1477              	.LVL128:
 1478 000e 044B     		ldr	r3, .L102+4
 1479 0010 1B68     		ldr	r3, [r3]
 1480 0012 90FBF3F0 		sdiv	r0, r0, r3
 1481              	.LVL129:
 997:Generated_Source\PSoC5/Volume_ADC.c **** 
 1482              		.loc 1 997 0
 1483 0016 00B2     		sxth	r0, r0
 1484 0018 7047     		bx	lr
 1485              	.L103:
 1486 001a 00BF     		.align	2
 1487              	.L102:
 1488 001c 00000000 		.word	Volume_ADC_Offset
 1489 0020 00000000 		.word	Volume_ADC_CountsPerVolt
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 61


 1490              		.cfi_endproc
 1491              	.LFE16:
 1492              		.size	Volume_ADC_CountsTo_mVolts, .-Volume_ADC_CountsTo_mVolts
 1493              		.global	__aeabi_i2f
 1494              		.global	__aeabi_fdiv
 1495              		.section	.text.Volume_ADC_CountsTo_Volts,"ax",%progbits
 1496              		.align	2
 1497              		.global	Volume_ADC_CountsTo_Volts
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	Volume_ADC_CountsTo_Volts, %function
 1501              	Volume_ADC_CountsTo_Volts:
 1502              	.LFB17:
1022:Generated_Source\PSoC5/Volume_ADC.c **** 
 1503              		.loc 1 1022 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              	.LVL130:
 1508 0000 10B5     		push	{r4, lr}
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 4, -8
 1511              		.cfi_offset 14, -4
1053:Generated_Source\PSoC5/Volume_ADC.c **** 
 1512              		.loc 1 1053 0
 1513 0002 074B     		ldr	r3, .L106
 1514 0004 1B68     		ldr	r3, [r3]
 1515              	.LVL131:
1055:Generated_Source\PSoC5/Volume_ADC.c **** 
 1516              		.loc 1 1055 0
 1517 0006 C01A     		subs	r0, r0, r3
 1518              	.LVL132:
 1519 0008 FFF7FEFF 		bl	__aeabi_i2f
 1520              	.LVL133:
 1521 000c 0446     		mov	r4, r0
 1522 000e 054B     		ldr	r3, .L106+4
 1523 0010 1868     		ldr	r0, [r3]
 1524 0012 FFF7FEFF 		bl	__aeabi_i2f
 1525              	.LVL134:
 1526 0016 0146     		mov	r1, r0
 1527 0018 2046     		mov	r0, r4
 1528 001a FFF7FEFF 		bl	__aeabi_fdiv
 1529              	.LVL135:
1058:Generated_Source\PSoC5/Volume_ADC.c **** 
 1530              		.loc 1 1058 0
 1531 001e 10BD     		pop	{r4, pc}
 1532              	.L107:
 1533              		.align	2
 1534              	.L106:
 1535 0020 00000000 		.word	Volume_ADC_Offset
 1536 0024 00000000 		.word	Volume_ADC_CountsPerVolt
 1537              		.cfi_endproc
 1538              	.LFE17:
 1539              		.size	Volume_ADC_CountsTo_Volts, .-Volume_ADC_CountsTo_Volts
 1540              		.section	.text.Volume_ADC_CountsTo_uVolts,"ax",%progbits
 1541              		.align	2
 1542              		.global	Volume_ADC_CountsTo_uVolts
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 62


 1543              		.thumb
 1544              		.thumb_func
 1545              		.type	Volume_ADC_CountsTo_uVolts, %function
 1546              	Volume_ADC_CountsTo_uVolts:
 1547              	.LFB18:
1088:Generated_Source\PSoC5/Volume_ADC.c **** 
 1548              		.loc 1 1088 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              		@ link register save eliminated.
 1553              	.LVL136:
1097:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1554              		.loc 1 1097 0
 1555 0000 0F4B     		ldr	r3, .L111
 1556 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0004 DBB2     		uxtb	r3, r3
 1558 0006 012B     		cmp	r3, #1
 1559 0008 06D0     		beq	.L109
1104:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1560              		.loc 1 1104 0
 1561 000a 0D4B     		ldr	r3, .L111
 1562 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1563 000e DBB2     		uxtb	r3, r3
 1564 0010 022B     		cmp	r3, #2
 1565 0012 01D0     		beq	.L109
1111:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1566              		.loc 1 1111 0
 1567 0014 0A4B     		ldr	r3, .L111
 1568 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569              	.L109:
 1570              	.LVL137:
1215:Generated_Source\PSoC5/Volume_ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * Volume_ADC_Offset) / coefB);
 1571              		.loc 1 1215 0
 1572 0018 0A4B     		ldr	r3, .L111+4
 1573 001a 1B68     		ldr	r3, [r3]
 1574 001c 002B     		cmp	r3, #0
 1575 001e 00DA     		bge	.L110
 1576 0020 1F33     		adds	r3, r3, #31
 1577              	.L110:
 1578 0022 5A11     		asrs	r2, r3, #5
 1579              	.LVL138:
1216:Generated_Source\PSoC5/Volume_ADC.c **** 
 1580              		.loc 1 1216 0
 1581 0024 47F61223 		movw	r3, #31250
 1582 0028 03FB00F0 		mul	r0, r3, r0
 1583              	.LVL139:
 1584 002c 90FBF2F0 		sdiv	r0, r0, r2
 1585 0030 0549     		ldr	r1, .L111+8
 1586 0032 0968     		ldr	r1, [r1]
 1587 0034 03FB01F3 		mul	r3, r3, r1
 1588 0038 93FBF2F3 		sdiv	r3, r3, r2
 1589              	.LVL140:
1219:Generated_Source\PSoC5/Volume_ADC.c **** 
 1590              		.loc 1 1219 0
 1591 003c C01A     		subs	r0, r0, r3
 1592              	.LVL141:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 63


 1593 003e 7047     		bx	lr
 1594              	.L112:
 1595              		.align	2
 1596              	.L111:
 1597 0040 00000000 		.word	.LANCHOR1
 1598 0044 00000000 		.word	Volume_ADC_CountsPerVolt
 1599 0048 00000000 		.word	Volume_ADC_Offset
 1600              		.cfi_endproc
 1601              	.LFE18:
 1602              		.size	Volume_ADC_CountsTo_uVolts, .-Volume_ADC_CountsTo_uVolts
 1603              		.section	.text.Volume_ADC_SelectConfiguration,"ax",%progbits
 1604              		.align	2
 1605              		.global	Volume_ADC_SelectConfiguration
 1606              		.thumb
 1607              		.thumb_func
 1608              		.type	Volume_ADC_SelectConfiguration, %function
 1609              	Volume_ADC_SelectConfiguration:
 1610              	.LFB20:
1554:Generated_Source\PSoC5/Volume_ADC.c ****     /* Check whether the configuration number is valid or not */
 1611              		.loc 1 1554 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615              	.LVL142:
 1616 0000 38B5     		push	{r3, r4, r5, lr}
 1617              		.cfi_def_cfa_offset 16
 1618              		.cfi_offset 3, -16
 1619              		.cfi_offset 4, -12
 1620              		.cfi_offset 5, -8
 1621              		.cfi_offset 14, -4
 1622 0002 0446     		mov	r4, r0
1556:Generated_Source\PSoC5/Volume_ADC.c ****     {
 1623              		.loc 1 1556 0
 1624 0004 0128     		cmp	r0, #1
 1625 0006 1FD1     		bne	.L114
 1626 0008 0D46     		mov	r5, r1
1561:Generated_Source\PSoC5/Volume_ADC.c ****         {
 1627              		.loc 1 1561 0
 1628 000a 114B     		ldr	r3, .L118
 1629 000c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1630 000e 13B9     		cbnz	r3, .L115
1563:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1631              		.loc 1 1563 0
 1632 0010 0122     		movs	r2, #1
 1633 0012 0F4B     		ldr	r3, .L118
 1634 0014 DA71     		strb	r2, [r3, #7]
 1635              	.L115:
1567:Generated_Source\PSoC5/Volume_ADC.c **** 
 1636              		.loc 1 1567 0
 1637 0016 0F4B     		ldr	r3, .L118+4
 1638 0018 1C70     		strb	r4, [r3]
1570:Generated_Source\PSoC5/Volume_ADC.c **** 
 1639              		.loc 1 1570 0
 1640 001a FFF7FEFF 		bl	Volume_ADC_Stop
 1641              	.LVL143:
1573:Generated_Source\PSoC5/Volume_ADC.c **** 
 1642              		.loc 1 1573 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 64


 1643 001e 2046     		mov	r0, r4
 1644 0020 FFF7FEFF 		bl	Volume_ADC_InitConfig
 1645              	.LVL144:
1576:Generated_Source\PSoC5/Volume_ADC.c ****         CY_SET_REG16(Volume_ADC_DEC_GCOR_16B_PTR, Volume_ADC_gcor[config - 1u].gcor);
 1646              		.loc 1 1576 0
 1647 0024 013C     		subs	r4, r4, #1
 1648 0026 0A4B     		ldr	r3, .L118
 1649 0028 03EB8402 		add	r2, r3, r4, lsl #2
 1650 002c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1651 002e 0A4A     		ldr	r2, .L118+8
 1652 0030 1170     		strb	r1, [r2]
1577:Generated_Source\PSoC5/Volume_ADC.c **** 
 1653              		.loc 1 1577 0
 1654 0032 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 1655 0036 094B     		ldr	r3, .L118+12
 1656 0038 1A80     		strh	r2, [r3]	@ movhi
1579:Generated_Source\PSoC5/Volume_ADC.c ****         {
 1657              		.loc 1 1579 0
 1658 003a 012D     		cmp	r5, #1
 1659 003c 07D1     		bne	.L113
1582:Generated_Source\PSoC5/Volume_ADC.c **** 
 1660              		.loc 1 1582 0
 1661 003e FFF7FEFF 		bl	Volume_ADC_Start
 1662              	.LVL145:
1585:Generated_Source\PSoC5/Volume_ADC.c ****         }
 1663              		.loc 1 1585 0
 1664 0042 FFF7FEFF 		bl	Volume_ADC_StartConvert
 1665              	.LVL146:
 1666 0046 38BD     		pop	{r3, r4, r5, pc}
 1667              	.LVL147:
 1668              	.L114:
1591:Generated_Source\PSoC5/Volume_ADC.c ****     }
 1669              		.loc 1 1591 0 discriminator 1
 1670 0048 0020     		movs	r0, #0
 1671              	.LVL148:
 1672 004a FFF7FEFF 		bl	CyHalt
 1673              	.LVL149:
 1674              	.L113:
 1675 004e 38BD     		pop	{r3, r4, r5, pc}
 1676              	.L119:
 1677              		.align	2
 1678              	.L118:
 1679 0050 00000000 		.word	.LANCHOR0
 1680 0054 00000000 		.word	.LANCHOR1
 1681 0058 0E4E0040 		.word	1073761806
 1682 005c 0C4E0040 		.word	1073761804
 1683              		.cfi_endproc
 1684              	.LFE20:
 1685              		.size	Volume_ADC_SelectConfiguration, .-Volume_ADC_SelectConfiguration
 1686              		.section	.text.Volume_ADC_Read8,"ax",%progbits
 1687              		.align	2
 1688              		.global	Volume_ADC_Read8
 1689              		.thumb
 1690              		.thumb_func
 1691              		.type	Volume_ADC_Read8, %function
 1692              	Volume_ADC_Read8:
 1693              	.LFB23:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 65


1741:Generated_Source\PSoC5/Volume_ADC.c **** }
1742:Generated_Source\PSoC5/Volume_ADC.c **** 
1743:Generated_Source\PSoC5/Volume_ADC.c **** 
1744:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1745:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Read8
1746:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1747:Generated_Source\PSoC5/Volume_ADC.c **** *
1748:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1749:Generated_Source\PSoC5/Volume_ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:Generated_Source\PSoC5/Volume_ADC.c **** *  single reading is required. When called, it will start ADC
1751:Generated_Source\PSoC5/Volume_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:Generated_Source\PSoC5/Volume_ADC.c **** *  not return until the result is ready.
1754:Generated_Source\PSoC5/Volume_ADC.c **** *
1755:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1756:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1757:Generated_Source\PSoC5/Volume_ADC.c **** *
1758:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1759:Generated_Source\PSoC5/Volume_ADC.c **** *  int8:  ADC result.
1760:Generated_Source\PSoC5/Volume_ADC.c **** *
1761:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1762:Generated_Source\PSoC5/Volume_ADC.c **** int8 Volume_ADC_Read8(void) 
1763:Generated_Source\PSoC5/Volume_ADC.c **** {
 1694              		.loc 1 1763 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698 0000 10B5     		push	{r4, lr}
 1699              		.cfi_def_cfa_offset 8
 1700              		.cfi_offset 4, -8
 1701              		.cfi_offset 14, -4
1764:Generated_Source\PSoC5/Volume_ADC.c ****     int8 result;
1765:Generated_Source\PSoC5/Volume_ADC.c **** 
1766:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear pending conversion done status */
1767:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |= Volume_ADC_DEC_INTR_CLEAR;
 1702              		.loc 1 1767 0
 1703 0002 084A     		ldr	r2, .L122
 1704 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1705 0006 43F00403 		orr	r3, r3, #4
 1706 000a 1370     		strb	r3, [r2]
1768:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StartConvert();
 1707              		.loc 1 1768 0
 1708 000c FFF7FEFF 		bl	Volume_ADC_StartConvert
 1709              	.LVL150:
1769:Generated_Source\PSoC5/Volume_ADC.c ****     (void)Volume_ADC_IsEndConversion(Volume_ADC_WAIT_FOR_RESULT);
 1710              		.loc 1 1769 0
 1711 0010 0020     		movs	r0, #0
 1712 0012 FFF7FEFF 		bl	Volume_ADC_IsEndConversion
 1713              	.LVL151:
1770:Generated_Source\PSoC5/Volume_ADC.c ****      result = Volume_ADC_GetResult8();
 1714              		.loc 1 1770 0
 1715 0016 FFF7FEFF 		bl	Volume_ADC_GetResult8
 1716              	.LVL152:
 1717 001a 0446     		mov	r4, r0
 1718              	.LVL153:
1771:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StopConvert();
 1719              		.loc 1 1771 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 66


 1720 001c FFF7FEFF 		bl	Volume_ADC_StopConvert
 1721              	.LVL154:
1772:Generated_Source\PSoC5/Volume_ADC.c ****     
1773:Generated_Source\PSoC5/Volume_ADC.c ****      return(result);
1774:Generated_Source\PSoC5/Volume_ADC.c **** }
 1722              		.loc 1 1774 0
 1723 0020 2046     		mov	r0, r4
 1724 0022 10BD     		pop	{r4, pc}
 1725              	.LVL155:
 1726              	.L123:
 1727              		.align	2
 1728              	.L122:
 1729 0024 014E0040 		.word	1073761793
 1730              		.cfi_endproc
 1731              	.LFE23:
 1732              		.size	Volume_ADC_Read8, .-Volume_ADC_Read8
 1733              		.section	.text.Volume_ADC_Read16,"ax",%progbits
 1734              		.align	2
 1735              		.global	Volume_ADC_Read16
 1736              		.thumb
 1737              		.thumb_func
 1738              		.type	Volume_ADC_Read16, %function
 1739              	Volume_ADC_Read16:
 1740              	.LFB24:
1775:Generated_Source\PSoC5/Volume_ADC.c **** 
1776:Generated_Source\PSoC5/Volume_ADC.c **** 
1777:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1778:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Read16
1779:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1780:Generated_Source\PSoC5/Volume_ADC.c **** *
1781:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1782:Generated_Source\PSoC5/Volume_ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:Generated_Source\PSoC5/Volume_ADC.c **** *  single reading is required. When called, it will start ADC
1784:Generated_Source\PSoC5/Volume_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:Generated_Source\PSoC5/Volume_ADC.c **** *  not return until the result is ready.
1787:Generated_Source\PSoC5/Volume_ADC.c **** *
1788:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1789:Generated_Source\PSoC5/Volume_ADC.c **** *   void
1790:Generated_Source\PSoC5/Volume_ADC.c **** *
1791:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1792:Generated_Source\PSoC5/Volume_ADC.c **** *  int16:  ADC result.
1793:Generated_Source\PSoC5/Volume_ADC.c **** *
1794:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1795:Generated_Source\PSoC5/Volume_ADC.c **** int16 Volume_ADC_Read16(void) 
1796:Generated_Source\PSoC5/Volume_ADC.c **** {
 1741              		.loc 1 1796 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 0
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745 0000 10B5     		push	{r4, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 4, -8
 1748              		.cfi_offset 14, -4
1797:Generated_Source\PSoC5/Volume_ADC.c ****     int16 result;
1798:Generated_Source\PSoC5/Volume_ADC.c **** 
1799:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear pending conversion done status */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 67


1800:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |= Volume_ADC_DEC_INTR_CLEAR;
 1749              		.loc 1 1800 0
 1750 0002 084A     		ldr	r2, .L126
 1751 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1752 0006 43F00403 		orr	r3, r3, #4
 1753 000a 1370     		strb	r3, [r2]
1801:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StartConvert();
 1754              		.loc 1 1801 0
 1755 000c FFF7FEFF 		bl	Volume_ADC_StartConvert
 1756              	.LVL156:
1802:Generated_Source\PSoC5/Volume_ADC.c ****     (void)Volume_ADC_IsEndConversion(Volume_ADC_WAIT_FOR_RESULT);
 1757              		.loc 1 1802 0
 1758 0010 0020     		movs	r0, #0
 1759 0012 FFF7FEFF 		bl	Volume_ADC_IsEndConversion
 1760              	.LVL157:
1803:Generated_Source\PSoC5/Volume_ADC.c ****      result = Volume_ADC_GetResult16();
 1761              		.loc 1 1803 0
 1762 0016 FFF7FEFF 		bl	Volume_ADC_GetResult16
 1763              	.LVL158:
 1764 001a 0446     		mov	r4, r0
 1765              	.LVL159:
1804:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StopConvert();
 1766              		.loc 1 1804 0
 1767 001c FFF7FEFF 		bl	Volume_ADC_StopConvert
 1768              	.LVL160:
1805:Generated_Source\PSoC5/Volume_ADC.c ****     
1806:Generated_Source\PSoC5/Volume_ADC.c ****      return(result);
1807:Generated_Source\PSoC5/Volume_ADC.c **** }
 1769              		.loc 1 1807 0
 1770 0020 2046     		mov	r0, r4
 1771 0022 10BD     		pop	{r4, pc}
 1772              	.LVL161:
 1773              	.L127:
 1774              		.align	2
 1775              	.L126:
 1776 0024 014E0040 		.word	1073761793
 1777              		.cfi_endproc
 1778              	.LFE24:
 1779              		.size	Volume_ADC_Read16, .-Volume_ADC_Read16
 1780              		.section	.text.Volume_ADC_Read32,"ax",%progbits
 1781              		.align	2
 1782              		.global	Volume_ADC_Read32
 1783              		.thumb
 1784              		.thumb_func
 1785              		.type	Volume_ADC_Read32, %function
 1786              	Volume_ADC_Read32:
 1787              	.LFB25:
1808:Generated_Source\PSoC5/Volume_ADC.c **** 
1809:Generated_Source\PSoC5/Volume_ADC.c **** 
1810:Generated_Source\PSoC5/Volume_ADC.c **** /*******************************************************************************
1811:Generated_Source\PSoC5/Volume_ADC.c **** * Function Name: Volume_ADC_Read32
1812:Generated_Source\PSoC5/Volume_ADC.c **** ********************************************************************************
1813:Generated_Source\PSoC5/Volume_ADC.c **** *
1814:Generated_Source\PSoC5/Volume_ADC.c **** * Summary:
1815:Generated_Source\PSoC5/Volume_ADC.c **** *  This function simplifies getting results from the ADC when only a
1816:Generated_Source\PSoC5/Volume_ADC.c **** *  single reading is required. When called, it will start ADC
1817:Generated_Source\PSoC5/Volume_ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 68


1818:Generated_Source\PSoC5/Volume_ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:Generated_Source\PSoC5/Volume_ADC.c **** *  not return until the result is ready.
1820:Generated_Source\PSoC5/Volume_ADC.c **** *
1821:Generated_Source\PSoC5/Volume_ADC.c **** * Parameters:
1822:Generated_Source\PSoC5/Volume_ADC.c **** *  None
1823:Generated_Source\PSoC5/Volume_ADC.c **** *
1824:Generated_Source\PSoC5/Volume_ADC.c **** * Return:
1825:Generated_Source\PSoC5/Volume_ADC.c **** *  int32: ADC result.
1826:Generated_Source\PSoC5/Volume_ADC.c **** *
1827:Generated_Source\PSoC5/Volume_ADC.c **** *******************************************************************************/
1828:Generated_Source\PSoC5/Volume_ADC.c **** int32 Volume_ADC_Read32(void) 
1829:Generated_Source\PSoC5/Volume_ADC.c **** {
 1788              		.loc 1 1829 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 0
 1791              		@ frame_needed = 0, uses_anonymous_args = 0
 1792 0000 10B5     		push	{r4, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 4, -8
 1795              		.cfi_offset 14, -4
1830:Generated_Source\PSoC5/Volume_ADC.c ****     int32 result;
1831:Generated_Source\PSoC5/Volume_ADC.c ****     
1832:Generated_Source\PSoC5/Volume_ADC.c ****     /* Clear pending conversion done status */
1833:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_DEC_SR_REG |= Volume_ADC_DEC_INTR_CLEAR;
 1796              		.loc 1 1833 0
 1797 0002 084A     		ldr	r2, .L130
 1798 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1799 0006 43F00403 		orr	r3, r3, #4
 1800 000a 1370     		strb	r3, [r2]
1834:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StartConvert();
 1801              		.loc 1 1834 0
 1802 000c FFF7FEFF 		bl	Volume_ADC_StartConvert
 1803              	.LVL162:
1835:Generated_Source\PSoC5/Volume_ADC.c ****     (void)Volume_ADC_IsEndConversion(Volume_ADC_WAIT_FOR_RESULT);
 1804              		.loc 1 1835 0
 1805 0010 0020     		movs	r0, #0
 1806 0012 FFF7FEFF 		bl	Volume_ADC_IsEndConversion
 1807              	.LVL163:
1836:Generated_Source\PSoC5/Volume_ADC.c ****      result = Volume_ADC_GetResult32();
 1808              		.loc 1 1836 0
 1809 0016 FFF7FEFF 		bl	Volume_ADC_GetResult32
 1810              	.LVL164:
 1811 001a 0446     		mov	r4, r0
 1812              	.LVL165:
1837:Generated_Source\PSoC5/Volume_ADC.c ****     Volume_ADC_StopConvert();
 1813              		.loc 1 1837 0
 1814 001c FFF7FEFF 		bl	Volume_ADC_StopConvert
 1815              	.LVL166:
1838:Generated_Source\PSoC5/Volume_ADC.c ****     
1839:Generated_Source\PSoC5/Volume_ADC.c ****      return(result);
1840:Generated_Source\PSoC5/Volume_ADC.c **** }
 1816              		.loc 1 1840 0
 1817 0020 2046     		mov	r0, r4
 1818 0022 10BD     		pop	{r4, pc}
 1819              	.LVL167:
 1820              	.L131:
 1821              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 69


 1822              	.L130:
 1823 0024 014E0040 		.word	1073761793
 1824              		.cfi_endproc
 1825              	.LFE25:
 1826              		.size	Volume_ADC_Read32, .-Volume_ADC_Read32
 1827              		.comm	Volume_ADC_CountsPerVolt,4,4
 1828              		.comm	Volume_ADC_Offset,4,4
 1829              		.global	Volume_ADC_Config
 1830              		.global	Volume_ADC_started
 1831              		.global	Volume_ADC_initVar
 1832              		.global	Volume_ADC_stopConversion
 1833              		.global	Volume_ADC_convDone
 1834              		.data
 1835              		.set	.LANCHOR1,. + 0
 1836              		.type	Volume_ADC_Config, %object
 1837              		.size	Volume_ADC_Config, 1
 1838              	Volume_ADC_Config:
 1839 0000 01       		.byte	1
 1840              		.bss
 1841              		.align	2
 1842              		.set	.LANCHOR0,. + 0
 1843              		.type	Volume_ADC_gcor, %object
 1844              		.size	Volume_ADC_gcor, 4
 1845              	Volume_ADC_gcor:
 1846 0000 00000000 		.space	4
 1847              		.type	Volume_ADC_stopConversion, %object
 1848              		.size	Volume_ADC_stopConversion, 1
 1849              	Volume_ADC_stopConversion:
 1850 0004 00       		.space	1
 1851              		.type	Volume_ADC_convDone, %object
 1852              		.size	Volume_ADC_convDone, 1
 1853              	Volume_ADC_convDone:
 1854 0005 00       		.space	1
 1855              		.type	Volume_ADC_initVar, %object
 1856              		.size	Volume_ADC_initVar, 1
 1857              	Volume_ADC_initVar:
 1858 0006 00       		.space	1
 1859              		.type	Volume_ADC_started, %object
 1860              		.size	Volume_ADC_started, 1
 1861              	Volume_ADC_started:
 1862 0007 00       		.space	1
 1863              		.text
 1864              	.Letext0:
 1865              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1866              		.file 3 "Generated_Source\\PSoC5\\Volume_ADC.h"
 1867              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 1868              		.file 5 "Generated_Source\\PSoC5\\Volume_ADC_AMux.h"
 1869              		.file 6 "Generated_Source\\PSoC5\\Volume_ADC_Ext_CP_Clk.h"
 1870              		.file 7 "Generated_Source\\PSoC5\\Volume_ADC_theACLK.h"
 1871              		.section	.debug_info,"",%progbits
 1872              	.Ldebug_info0:
 1873 0000 700A0000 		.4byte	0xa70
 1874 0004 0400     		.2byte	0x4
 1875 0006 00000000 		.4byte	.Ldebug_abbrev0
 1876 000a 04       		.byte	0x4
 1877 000b 01       		.uleb128 0x1
 1878 000c F7050000 		.4byte	.LASF98
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 70


 1879 0010 01       		.byte	0x1
 1880 0011 00000000 		.4byte	.LASF99
 1881 0015 FB000000 		.4byte	.LASF100
 1882 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1883 001d 00000000 		.4byte	0
 1884 0021 00000000 		.4byte	.Ldebug_line0
 1885 0025 02       		.uleb128 0x2
 1886 0026 04       		.byte	0x4
 1887 0027 04       		.byte	0x4
 1888 0028 E3030000 		.4byte	.LASF0
 1889 002c 02       		.uleb128 0x2
 1890 002d 01       		.byte	0x1
 1891 002e 06       		.byte	0x6
 1892 002f EF000000 		.4byte	.LASF1
 1893 0033 02       		.uleb128 0x2
 1894 0034 01       		.byte	0x1
 1895 0035 08       		.byte	0x8
 1896 0036 5B040000 		.4byte	.LASF2
 1897 003a 02       		.uleb128 0x2
 1898 003b 02       		.byte	0x2
 1899 003c 05       		.byte	0x5
 1900 003d 7B040000 		.4byte	.LASF3
 1901 0041 02       		.uleb128 0x2
 1902 0042 02       		.byte	0x2
 1903 0043 07       		.byte	0x7
 1904 0044 89020000 		.4byte	.LASF4
 1905 0048 02       		.uleb128 0x2
 1906 0049 04       		.byte	0x4
 1907 004a 05       		.byte	0x5
 1908 004b 74010000 		.4byte	.LASF5
 1909 004f 02       		.uleb128 0x2
 1910 0050 04       		.byte	0x4
 1911 0051 07       		.byte	0x7
 1912 0052 3D020000 		.4byte	.LASF6
 1913 0056 02       		.uleb128 0x2
 1914 0057 08       		.byte	0x8
 1915 0058 05       		.byte	0x5
 1916 0059 E1000000 		.4byte	.LASF7
 1917 005d 02       		.uleb128 0x2
 1918 005e 08       		.byte	0x8
 1919 005f 07       		.byte	0x7
 1920 0060 BA000000 		.4byte	.LASF8
 1921 0064 03       		.uleb128 0x3
 1922 0065 04       		.byte	0x4
 1923 0066 05       		.byte	0x5
 1924 0067 696E7400 		.ascii	"int\000"
 1925 006b 02       		.uleb128 0x2
 1926 006c 04       		.byte	0x4
 1927 006d 07       		.byte	0x7
 1928 006e 29020000 		.4byte	.LASF9
 1929 0072 04       		.uleb128 0x4
 1930 0073 AD010000 		.4byte	.LASF10
 1931 0077 02       		.byte	0x2
 1932 0078 9201     		.2byte	0x192
 1933 007a 33000000 		.4byte	0x33
 1934 007e 04       		.uleb128 0x4
 1935 007f 24000000 		.4byte	.LASF11
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 71


 1936 0083 02       		.byte	0x2
 1937 0084 9301     		.2byte	0x193
 1938 0086 41000000 		.4byte	0x41
 1939 008a 04       		.uleb128 0x4
 1940 008b F5010000 		.4byte	.LASF12
 1941 008f 02       		.byte	0x2
 1942 0090 9401     		.2byte	0x194
 1943 0092 4F000000 		.4byte	0x4f
 1944 0096 04       		.uleb128 0x4
 1945 0097 9C020000 		.4byte	.LASF13
 1946 009b 02       		.byte	0x2
 1947 009c 9501     		.2byte	0x195
 1948 009e 2C000000 		.4byte	0x2c
 1949 00a2 04       		.uleb128 0x4
 1950 00a3 BB060000 		.4byte	.LASF14
 1951 00a7 02       		.byte	0x2
 1952 00a8 9601     		.2byte	0x196
 1953 00aa 3A000000 		.4byte	0x3a
 1954 00ae 04       		.uleb128 0x4
 1955 00af 53010000 		.4byte	.LASF15
 1956 00b3 02       		.byte	0x2
 1957 00b4 9701     		.2byte	0x197
 1958 00b6 48000000 		.4byte	0x48
 1959 00ba 04       		.uleb128 0x4
 1960 00bb 28030000 		.4byte	.LASF16
 1961 00bf 02       		.byte	0x2
 1962 00c0 9801     		.2byte	0x198
 1963 00c2 25000000 		.4byte	0x25
 1964 00c6 02       		.uleb128 0x2
 1965 00c7 08       		.byte	0x8
 1966 00c8 04       		.byte	0x4
 1967 00c9 BD010000 		.4byte	.LASF17
 1968 00cd 02       		.uleb128 0x2
 1969 00ce 01       		.byte	0x1
 1970 00cf 08       		.byte	0x8
 1971 00d0 2E050000 		.4byte	.LASF18
 1972 00d4 04       		.uleb128 0x4
 1973 00d5 11040000 		.4byte	.LASF19
 1974 00d9 02       		.byte	0x2
 1975 00da 3C02     		.2byte	0x23c
 1976 00dc E0000000 		.4byte	0xe0
 1977 00e0 05       		.uleb128 0x5
 1978 00e1 72000000 		.4byte	0x72
 1979 00e5 04       		.uleb128 0x4
 1980 00e6 A7010000 		.4byte	.LASF20
 1981 00ea 02       		.byte	0x2
 1982 00eb 3D02     		.2byte	0x23d
 1983 00ed F1000000 		.4byte	0xf1
 1984 00f1 05       		.uleb128 0x5
 1985 00f2 7E000000 		.4byte	0x7e
 1986 00f6 04       		.uleb128 0x4
 1987 00f7 EC020000 		.4byte	.LASF21
 1988 00fb 02       		.byte	0x2
 1989 00fc 3E02     		.2byte	0x23e
 1990 00fe 02010000 		.4byte	0x102
 1991 0102 05       		.uleb128 0x5
 1992 0103 8A000000 		.4byte	0x8a
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 72


 1993 0107 04       		.uleb128 0x4
 1994 0108 3A050000 		.4byte	.LASF22
 1995 010c 02       		.byte	0x2
 1996 010d 4E02     		.2byte	0x24e
 1997 010f 13010000 		.4byte	0x113
 1998 0113 06       		.uleb128 0x6
 1999 0114 04       		.byte	0x4
 2000 0115 19010000 		.4byte	0x119
 2001 0119 07       		.uleb128 0x7
 2002 011a 02       		.uleb128 0x2
 2003 011b 04       		.byte	0x4
 2004 011c 07       		.byte	0x7
 2005 011d 30030000 		.4byte	.LASF23
 2006 0121 08       		.uleb128 0x8
 2007 0122 04       		.byte	0x4
 2008 0123 03       		.byte	0x3
 2009 0124 2F       		.byte	0x2f
 2010 0125 42010000 		.4byte	0x142
 2011 0129 09       		.uleb128 0x9
 2012 012a A1000000 		.4byte	.LASF24
 2013 012e 03       		.byte	0x3
 2014 012f 31       		.byte	0x31
 2015 0130 7E000000 		.4byte	0x7e
 2016 0134 00       		.byte	0
 2017 0135 09       		.uleb128 0x9
 2018 0136 4E050000 		.4byte	.LASF25
 2019 013a 03       		.byte	0x3
 2020 013b 32       		.byte	0x32
 2021 013c 72000000 		.4byte	0x72
 2022 0140 02       		.byte	0x2
 2023 0141 00       		.byte	0
 2024 0142 0A       		.uleb128 0xa
 2025 0143 5C030000 		.4byte	.LASF26
 2026 0147 03       		.byte	0x3
 2027 0148 33       		.byte	0x33
 2028 0149 21010000 		.4byte	0x121
 2029 014d 0B       		.uleb128 0xb
 2030 014e 85000000 		.4byte	.LASF36
 2031 0152 01       		.byte	0x1
 2032 0153 5106     		.2byte	0x651
 2033 0155 00000000 		.4byte	.LFB21
 2034 0159 CC000000 		.4byte	.LFE21-.LFB21
 2035 015d 01       		.uleb128 0x1
 2036 015e 9C       		.byte	0x9c
 2037 015f 03020000 		.4byte	0x203
 2038 0163 0C       		.uleb128 0xc
 2039 0164 7A000000 		.4byte	.LASF27
 2040 0168 01       		.byte	0x1
 2041 0169 5106     		.2byte	0x651
 2042 016b 72000000 		.4byte	0x72
 2043 016f 00000000 		.4byte	.LLST0
 2044 0173 0C       		.uleb128 0xc
 2045 0174 16040000 		.4byte	.LASF28
 2046 0178 01       		.byte	0x1
 2047 0179 5106     		.2byte	0x651
 2048 017b 7E000000 		.4byte	0x7e
 2049 017f 3A000000 		.4byte	.LLST1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 73


 2050 0183 0C       		.uleb128 0xc
 2051 0184 D1000000 		.4byte	.LASF29
 2052 0188 01       		.byte	0x1
 2053 0189 5106     		.2byte	0x651
 2054 018b 7E000000 		.4byte	0x7e
 2055 018f 74000000 		.4byte	.LLST2
 2056 0193 0C       		.uleb128 0xc
 2057 0194 BF040000 		.4byte	.LASF30
 2058 0198 01       		.byte	0x1
 2059 0199 5206     		.2byte	0x652
 2060 019b 72000000 		.4byte	0x72
 2061 019f AE000000 		.4byte	.LLST3
 2062 01a3 0C       		.uleb128 0xc
 2063 01a4 47050000 		.4byte	.LASF31
 2064 01a8 01       		.byte	0x1
 2065 01a9 5206     		.2byte	0x652
 2066 01ab 72000000 		.4byte	0x72
 2067 01af 01010000 		.4byte	.LLST4
 2068 01b3 0D       		.uleb128 0xd
 2069 01b4 E6020000 		.4byte	.LASF32
 2070 01b8 01       		.byte	0x1
 2071 01b9 5406     		.2byte	0x654
 2072 01bb 96000000 		.4byte	0x96
 2073 01bf 2D010000 		.4byte	.LLST5
 2074 01c3 0D       		.uleb128 0xd
 2075 01c4 23040000 		.4byte	.LASF33
 2076 01c8 01       		.byte	0x1
 2077 01c9 5506     		.2byte	0x655
 2078 01cb AE000000 		.4byte	0xae
 2079 01cf 98010000 		.4byte	.LLST6
 2080 01d3 0D       		.uleb128 0xd
 2081 01d4 A1020000 		.4byte	.LASF34
 2082 01d8 01       		.byte	0x1
 2083 01d9 5606     		.2byte	0x656
 2084 01db 7E000000 		.4byte	0x7e
 2085 01df AB010000 		.4byte	.LLST7
 2086 01e3 0D       		.uleb128 0xd
 2087 01e4 85040000 		.4byte	.LASF35
 2088 01e8 01       		.byte	0x1
 2089 01e9 5706     		.2byte	0x657
 2090 01eb 8A000000 		.4byte	0x8a
 2091 01ef D4010000 		.4byte	.LLST8
 2092 01f3 0E       		.uleb128 0xe
 2093 01f4 A6000000 		.4byte	.LVL31
 2094 01f8 AA090000 		.4byte	0x9aa
 2095 01fc 0F       		.uleb128 0xf
 2096 01fd 01       		.uleb128 0x1
 2097 01fe 50       		.byte	0x50
 2098 01ff 01       		.uleb128 0x1
 2099 0200 30       		.byte	0x30
 2100 0201 00       		.byte	0
 2101 0202 00       		.byte	0
 2102 0203 0B       		.uleb128 0xb
 2103 0204 C6050000 		.4byte	.LASF37
 2104 0208 01       		.byte	0x1
 2105 0209 BC06     		.2byte	0x6bc
 2106 020b 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 74


 2107 020f 4C000000 		.4byte	.LFE22-.LFB22
 2108 0213 01       		.uleb128 0x1
 2109 0214 9C       		.byte	0x9c
 2110 0215 66020000 		.4byte	0x266
 2111 0219 0C       		.uleb128 0xc
 2112 021a 0B020000 		.4byte	.LASF38
 2113 021e 01       		.byte	0x1
 2114 021f BC06     		.2byte	0x6bc
 2115 0221 72000000 		.4byte	0x72
 2116 0225 E7010000 		.4byte	.LLST9
 2117 0229 0D       		.uleb128 0xd
 2118 022a DF050000 		.4byte	.LASF39
 2119 022e 01       		.byte	0x1
 2120 022f BE06     		.2byte	0x6be
 2121 0231 72000000 		.4byte	0x72
 2122 0235 08020000 		.4byte	.LLST10
 2123 0239 10       		.uleb128 0x10
 2124 023a 08000000 		.4byte	.LVL34
 2125 023e BB090000 		.4byte	0x9bb
 2126 0242 11       		.uleb128 0x11
 2127 0243 28000000 		.4byte	.LVL36
 2128 0247 C6090000 		.4byte	0x9c6
 2129 024b 55020000 		.4byte	0x255
 2130 024f 0F       		.uleb128 0xf
 2131 0250 01       		.uleb128 0x1
 2132 0251 50       		.byte	0x50
 2133 0252 01       		.uleb128 0x1
 2134 0253 33       		.byte	0x33
 2135 0254 00       		.byte	0
 2136 0255 0E       		.uleb128 0xe
 2137 0256 3E000000 		.4byte	.LVL37
 2138 025a D7090000 		.4byte	0x9d7
 2139 025e 0F       		.uleb128 0xf
 2140 025f 01       		.uleb128 0x1
 2141 0260 50       		.byte	0x50
 2142 0261 02       		.uleb128 0x2
 2143 0262 76       		.byte	0x76
 2144 0263 00       		.sleb128 0
 2145 0264 00       		.byte	0
 2146 0265 00       		.byte	0
 2147 0266 0B       		.uleb128 0xb
 2148 0267 2B000000 		.4byte	.LASF40
 2149 026b 01       		.byte	0x1
 2150 026c DA04     		.2byte	0x4da
 2151 026e 00000000 		.4byte	.LFB19
 2152 0272 E0000000 		.4byte	.LFE19-.LFB19
 2153 0276 01       		.uleb128 0x1
 2154 0277 9C       		.byte	0x9c
 2155 0278 F7020000 		.4byte	0x2f7
 2156 027c 0C       		.uleb128 0xc
 2157 027d 47050000 		.4byte	.LASF31
 2158 0281 01       		.byte	0x1
 2159 0282 DA04     		.2byte	0x4da
 2160 0284 72000000 		.4byte	0x72
 2161 0288 1B020000 		.4byte	.LLST11
 2162 028c 11       		.uleb128 0x11
 2163 028d 84000000 		.4byte	.LVL41
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 75


 2164 0291 03020000 		.4byte	0x203
 2165 0295 A0020000 		.4byte	0x2a0
 2166 0299 0F       		.uleb128 0xf
 2167 029a 01       		.uleb128 0x1
 2168 029b 50       		.byte	0x50
 2169 029c 02       		.uleb128 0x2
 2170 029d 08       		.byte	0x8
 2171 029e 44       		.byte	0x44
 2172 029f 00       		.byte	0
 2173 02a0 11       		.uleb128 0x11
 2174 02a1 A8000000 		.4byte	.LVL42
 2175 02a5 E8090000 		.4byte	0x9e8
 2176 02a9 B4020000 		.4byte	0x2b4
 2177 02ad 0F       		.uleb128 0xf
 2178 02ae 01       		.uleb128 0x1
 2179 02af 50       		.byte	0x50
 2180 02b0 02       		.uleb128 0x2
 2181 02b1 74       		.byte	0x74
 2182 02b2 00       		.sleb128 0
 2183 02b3 00       		.byte	0
 2184 02b4 11       		.uleb128 0x11
 2185 02b5 B8000000 		.4byte	.LVL43
 2186 02b9 F9090000 		.4byte	0x9f9
 2187 02bd CD020000 		.4byte	0x2cd
 2188 02c1 0F       		.uleb128 0xf
 2189 02c2 01       		.uleb128 0x1
 2190 02c3 51       		.byte	0x51
 2191 02c4 02       		.uleb128 0x2
 2192 02c5 75       		.byte	0x75
 2193 02c6 00       		.sleb128 0
 2194 02c7 0F       		.uleb128 0xf
 2195 02c8 01       		.uleb128 0x1
 2196 02c9 50       		.byte	0x50
 2197 02ca 01       		.uleb128 0x1
 2198 02cb 38       		.byte	0x38
 2199 02cc 00       		.byte	0
 2200 02cd 11       		.uleb128 0x11
 2201 02ce C0000000 		.4byte	.LVL44
 2202 02d2 0F0A0000 		.4byte	0xa0f
 2203 02d6 E7020000 		.4byte	0x2e7
 2204 02da 0F       		.uleb128 0xf
 2205 02db 01       		.uleb128 0x1
 2206 02dc 51       		.byte	0x51
 2207 02dd 02       		.uleb128 0x2
 2208 02de 75       		.byte	0x75
 2209 02df 00       		.sleb128 0
 2210 02e0 0F       		.uleb128 0xf
 2211 02e1 01       		.uleb128 0x1
 2212 02e2 50       		.byte	0x50
 2213 02e3 02       		.uleb128 0x2
 2214 02e4 08       		.byte	0x8
 2215 02e5 25       		.byte	0x25
 2216 02e6 00       		.byte	0
 2217 02e7 0E       		.uleb128 0xe
 2218 02e8 C8000000 		.4byte	.LVL45
 2219 02ec 250A0000 		.4byte	0xa25
 2220 02f0 0F       		.uleb128 0xf
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 76


 2221 02f1 01       		.uleb128 0x1
 2222 02f2 50       		.byte	0x50
 2223 02f3 01       		.uleb128 0x1
 2224 02f4 4D       		.byte	0x4d
 2225 02f5 00       		.byte	0
 2226 02f6 00       		.byte	0
 2227 02f7 12       		.uleb128 0x12
 2228 02f8 4C030000 		.4byte	.LASF41
 2229 02fc 01       		.byte	0x1
 2230 02fd 5B       		.byte	0x5b
 2231 02fe 00000000 		.4byte	.LFB0
 2232 0302 C4000000 		.4byte	.LFE0-.LFB0
 2233 0306 01       		.uleb128 0x1
 2234 0307 9C       		.byte	0x9c
 2235 0308 81030000 		.4byte	0x381
 2236 030c 11       		.uleb128 0x11
 2237 030d 16000000 		.4byte	.LVL46
 2238 0311 3F0A0000 		.4byte	0xa3f
 2239 0315 1F030000 		.4byte	0x31f
 2240 0319 0F       		.uleb128 0xf
 2241 031a 01       		.uleb128 0x1
 2242 031b 50       		.byte	0x50
 2243 031c 01       		.uleb128 0x1
 2244 031d 40       		.byte	0x40
 2245 031e 00       		.byte	0
 2246 031f 11       		.uleb128 0x11
 2247 0320 1C000000 		.4byte	.LVL47
 2248 0324 500A0000 		.4byte	0xa50
 2249 0328 32030000 		.4byte	0x332
 2250 032c 0F       		.uleb128 0xf
 2251 032d 01       		.uleb128 0x1
 2252 032e 50       		.byte	0x50
 2253 032f 01       		.uleb128 0x1
 2254 0330 40       		.byte	0x40
 2255 0331 00       		.byte	0
 2256 0332 11       		.uleb128 0x11
 2257 0333 24000000 		.4byte	.LVL48
 2258 0337 610A0000 		.4byte	0xa61
 2259 033b 4A030000 		.4byte	0x34a
 2260 033f 0F       		.uleb128 0xf
 2261 0340 01       		.uleb128 0x1
 2262 0341 51       		.byte	0x51
 2263 0342 01       		.uleb128 0x1
 2264 0343 37       		.byte	0x37
 2265 0344 0F       		.uleb128 0xf
 2266 0345 01       		.uleb128 0x1
 2267 0346 50       		.byte	0x50
 2268 0347 01       		.uleb128 0x1
 2269 0348 4D       		.byte	0x4d
 2270 0349 00       		.byte	0
 2271 034a 11       		.uleb128 0x11
 2272 034b 84000000 		.4byte	.LVL49
 2273 034f 4D010000 		.4byte	0x14d
 2274 0353 77030000 		.4byte	0x377
 2275 0357 0F       		.uleb128 0xf
 2276 0358 01       		.uleb128 0x1
 2277 0359 53       		.byte	0x53
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 77


 2278 035a 01       		.uleb128 0x1
 2279 035b 40       		.byte	0x40
 2280 035c 0F       		.uleb128 0xf
 2281 035d 01       		.uleb128 0x1
 2282 035e 52       		.byte	0x52
 2283 035f 03       		.uleb128 0x3
 2284 0360 0B       		.byte	0xb
 2285 0361 0080     		.2byte	0x8000
 2286 0363 0F       		.uleb128 0xf
 2287 0364 01       		.uleb128 0x1
 2288 0365 51       		.byte	0x51
 2289 0366 03       		.uleb128 0x3
 2290 0367 0A       		.byte	0xa
 2291 0368 027F     		.2byte	0x7f02
 2292 036a 0F       		.uleb128 0xf
 2293 036b 01       		.uleb128 0x1
 2294 036c 50       		.byte	0x50
 2295 036d 01       		.uleb128 0x1
 2296 036e 33       		.byte	0x33
 2297 036f 0F       		.uleb128 0xf
 2298 0370 02       		.uleb128 0x2
 2299 0371 7D       		.byte	0x7d
 2300 0372 00       		.sleb128 0
 2301 0373 02       		.uleb128 0x2
 2302 0374 77       		.byte	0x77
 2303 0375 00       		.sleb128 0
 2304 0376 00       		.byte	0
 2305 0377 10       		.uleb128 0x10
 2306 0378 A4000000 		.4byte	.LVL50
 2307 037c 66020000 		.4byte	0x266
 2308 0380 00       		.byte	0
 2309 0381 12       		.uleb128 0x12
 2310 0382 77020000 		.4byte	.LASF42
 2311 0386 01       		.byte	0x1
 2312 0387 B8       		.byte	0xb8
 2313 0388 00000000 		.4byte	.LFB1
 2314 038c D8000000 		.4byte	.LFE1-.LFB1
 2315 0390 01       		.uleb128 0x1
 2316 0391 9C       		.byte	0x9c
 2317 0392 DD030000 		.4byte	0x3dd
 2318 0396 13       		.uleb128 0x13
 2319 0397 47050000 		.4byte	.LASF31
 2320 039b 01       		.byte	0x1
 2321 039c BA       		.byte	0xba
 2322 039d 72000000 		.4byte	0x72
 2323 03a1 14       		.uleb128 0x14
 2324 03a2 DF050000 		.4byte	.LASF39
 2325 03a6 01       		.byte	0x1
 2326 03a7 BB       		.byte	0xbb
 2327 03a8 72000000 		.4byte	0x72
 2328 03ac 3C020000 		.4byte	.LLST12
 2329 03b0 10       		.uleb128 0x10
 2330 03b1 06000000 		.4byte	.LVL51
 2331 03b5 BB090000 		.4byte	0x9bb
 2332 03b9 11       		.uleb128 0x11
 2333 03ba 54000000 		.4byte	.LVL54
 2334 03be C6090000 		.4byte	0x9c6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 78


 2335 03c2 CC030000 		.4byte	0x3cc
 2336 03c6 0F       		.uleb128 0xf
 2337 03c7 01       		.uleb128 0x1
 2338 03c8 50       		.byte	0x50
 2339 03c9 01       		.uleb128 0x1
 2340 03ca 33       		.byte	0x33
 2341 03cb 00       		.byte	0
 2342 03cc 0E       		.uleb128 0xe
 2343 03cd B0000000 		.4byte	.LVL55
 2344 03d1 D7090000 		.4byte	0x9d7
 2345 03d5 0F       		.uleb128 0xf
 2346 03d6 01       		.uleb128 0x1
 2347 03d7 50       		.byte	0x50
 2348 03d8 02       		.uleb128 0x2
 2349 03d9 76       		.byte	0x76
 2350 03da 00       		.sleb128 0
 2351 03db 00       		.byte	0
 2352 03dc 00       		.byte	0
 2353 03dd 15       		.uleb128 0x15
 2354 03de 66020000 		.4byte	.LASF43
 2355 03e2 01       		.byte	0x1
 2356 03e3 4901     		.2byte	0x149
 2357 03e5 00000000 		.4byte	.LFB2
 2358 03e9 28000000 		.4byte	.LFE2-.LFB2
 2359 03ed 01       		.uleb128 0x1
 2360 03ee 9C       		.byte	0x9c
 2361 03ef 06040000 		.4byte	0x406
 2362 03f3 10       		.uleb128 0x10
 2363 03f4 16000000 		.4byte	.LVL57
 2364 03f8 F7020000 		.4byte	0x2f7
 2365 03fc 10       		.uleb128 0x10
 2366 03fd 20000000 		.4byte	.LVL58
 2367 0401 81030000 		.4byte	0x381
 2368 0405 00       		.byte	0
 2369 0406 15       		.uleb128 0x15
 2370 0407 19020000 		.4byte	.LASF44
 2371 040b 01       		.byte	0x1
 2372 040c 6A01     		.2byte	0x16a
 2373 040e 00000000 		.4byte	.LFB3
 2374 0412 E4000000 		.4byte	.LFE3-.LFB3
 2375 0416 01       		.uleb128 0x1
 2376 0417 9C       		.byte	0x9c
 2377 0418 59040000 		.4byte	0x459
 2378 041c 0D       		.uleb128 0xd
 2379 041d DF050000 		.4byte	.LASF39
 2380 0421 01       		.byte	0x1
 2381 0422 6C01     		.2byte	0x16c
 2382 0424 72000000 		.4byte	0x72
 2383 0428 4F020000 		.4byte	.LLST13
 2384 042c 10       		.uleb128 0x10
 2385 042d 06000000 		.4byte	.LVL59
 2386 0431 BB090000 		.4byte	0x9bb
 2387 0435 11       		.uleb128 0x11
 2388 0436 4C000000 		.4byte	.LVL61
 2389 043a C6090000 		.4byte	0x9c6
 2390 043e 48040000 		.4byte	0x448
 2391 0442 0F       		.uleb128 0xf
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 79


 2392 0443 01       		.uleb128 0x1
 2393 0444 50       		.byte	0x50
 2394 0445 01       		.uleb128 0x1
 2395 0446 33       		.byte	0x33
 2396 0447 00       		.byte	0
 2397 0448 0E       		.uleb128 0xe
 2398 0449 CC000000 		.4byte	.LVL62
 2399 044d D7090000 		.4byte	0x9d7
 2400 0451 0F       		.uleb128 0xf
 2401 0452 01       		.uleb128 0x1
 2402 0453 50       		.byte	0x50
 2403 0454 02       		.uleb128 0x2
 2404 0455 76       		.byte	0x76
 2405 0456 00       		.sleb128 0
 2406 0457 00       		.byte	0
 2407 0458 00       		.byte	0
 2408 0459 15       		.uleb128 0x15
 2409 045a D6010000 		.4byte	.LASF45
 2410 045e 01       		.byte	0x1
 2411 045f AD01     		.2byte	0x1ad
 2412 0461 00000000 		.4byte	.LFB4
 2413 0465 18000000 		.4byte	.LFE4-.LFB4
 2414 0469 01       		.uleb128 0x1
 2415 046a 9C       		.byte	0x9c
 2416 046b 90040000 		.4byte	0x490
 2417 046f 0C       		.uleb128 0xc
 2418 0470 A1030000 		.4byte	.LASF46
 2419 0474 01       		.byte	0x1
 2420 0475 AD01     		.2byte	0x1ad
 2421 0477 72000000 		.4byte	0x72
 2422 047b 62020000 		.4byte	.LLST14
 2423 047f 0D       		.uleb128 0xd
 2424 0480 F1060000 		.4byte	.LASF47
 2425 0484 01       		.byte	0x1
 2426 0485 AF01     		.2byte	0x1af
 2427 0487 72000000 		.4byte	0x72
 2428 048b 83020000 		.4byte	.LLST15
 2429 048f 00       		.byte	0
 2430 0490 15       		.uleb128 0x15
 2431 0491 16050000 		.4byte	.LASF48
 2432 0495 01       		.byte	0x1
 2433 0496 D101     		.2byte	0x1d1
 2434 0498 00000000 		.4byte	.LFB5
 2435 049c 18000000 		.4byte	.LFE5-.LFB5
 2436 04a0 01       		.uleb128 0x1
 2437 04a1 9C       		.byte	0x9c
 2438 04a2 C7040000 		.4byte	0x4c7
 2439 04a6 0C       		.uleb128 0xc
 2440 04a7 86030000 		.4byte	.LASF49
 2441 04ab 01       		.byte	0x1
 2442 04ac D101     		.2byte	0x1d1
 2443 04ae 72000000 		.4byte	0x72
 2444 04b2 A1020000 		.4byte	.LLST16
 2445 04b6 0D       		.uleb128 0xd
 2446 04b7 F1060000 		.4byte	.LASF47
 2447 04bb 01       		.byte	0x1
 2448 04bc D301     		.2byte	0x1d3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 80


 2449 04be 72000000 		.4byte	0x72
 2450 04c2 C2020000 		.4byte	.LLST17
 2451 04c6 00       		.byte	0
 2452 04c7 16       		.uleb128 0x16
 2453 04c8 53050000 		.4byte	.LASF53
 2454 04cc 01       		.byte	0x1
 2455 04cd F901     		.2byte	0x1f9
 2456 04cf 72000000 		.4byte	0x72
 2457 04d3 00000000 		.4byte	.LFB6
 2458 04d7 74000000 		.4byte	.LFE6-.LFB6
 2459 04db 01       		.uleb128 0x1
 2460 04dc 9C       		.byte	0x9c
 2461 04dd 22050000 		.4byte	0x522
 2462 04e1 0C       		.uleb128 0xc
 2463 04e2 9C060000 		.4byte	.LASF50
 2464 04e6 01       		.byte	0x1
 2465 04e7 F901     		.2byte	0x1f9
 2466 04e9 BA000000 		.4byte	0xba
 2467 04ed E0020000 		.4byte	.LLST18
 2468 04f1 0D       		.uleb128 0xd
 2469 04f2 F1060000 		.4byte	.LASF47
 2470 04f6 01       		.byte	0x1
 2471 04f7 FB01     		.2byte	0x1fb
 2472 04f9 7E000000 		.4byte	0x7e
 2473 04fd 0E030000 		.4byte	.LLST19
 2474 0501 0D       		.uleb128 0xd
 2475 0502 F0050000 		.4byte	.LASF51
 2476 0506 01       		.byte	0x1
 2477 0507 FC01     		.2byte	0x1fc
 2478 0509 72000000 		.4byte	0x72
 2479 050d 46030000 		.4byte	.LLST20
 2480 0511 0D       		.uleb128 0xd
 2481 0512 6E050000 		.4byte	.LASF52
 2482 0516 01       		.byte	0x1
 2483 0517 FD01     		.2byte	0x1fd
 2484 0519 BA000000 		.4byte	0xba
 2485 051d 65030000 		.4byte	.LLST21
 2486 0521 00       		.byte	0
 2487 0522 17       		.uleb128 0x17
 2488 0523 A7060000 		.4byte	.LASF54
 2489 0527 01       		.byte	0x1
 2490 0528 2802     		.2byte	0x228
 2491 052a 7E000000 		.4byte	0x7e
 2492 052e 00000000 		.4byte	.LFB7
 2493 0532 24000000 		.4byte	.LFE7-.LFB7
 2494 0536 01       		.uleb128 0x1
 2495 0537 9C       		.byte	0x9c
 2496 0538 5D050000 		.4byte	0x55d
 2497 053c 0D       		.uleb128 0xd
 2498 053d 33050000 		.4byte	.LASF55
 2499 0541 01       		.byte	0x1
 2500 0542 2A02     		.2byte	0x22a
 2501 0544 72000000 		.4byte	0x72
 2502 0548 A4030000 		.4byte	.LLST22
 2503 054c 0D       		.uleb128 0xd
 2504 054d A1020000 		.4byte	.LASF34
 2505 0551 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 81


 2506 0552 2B02     		.2byte	0x22b
 2507 0554 7E000000 		.4byte	0x7e
 2508 0558 B7030000 		.4byte	.LLST23
 2509 055c 00       		.byte	0
 2510 055d 18       		.uleb128 0x18
 2511 055e 8D040000 		.4byte	.LASF56
 2512 0562 01       		.byte	0x1
 2513 0563 4A02     		.2byte	0x24a
 2514 0565 00000000 		.4byte	.LFB8
 2515 0569 10000000 		.4byte	.LFE8-.LFB8
 2516 056d 01       		.uleb128 0x1
 2517 056e 9C       		.byte	0x9c
 2518 056f 18       		.uleb128 0x18
 2519 0570 CC030000 		.4byte	.LASF57
 2520 0574 01       		.byte	0x1
 2521 0575 6102     		.2byte	0x261
 2522 0577 00000000 		.4byte	.LFB9
 2523 057b 10000000 		.4byte	.LFE9-.LFB9
 2524 057f 01       		.uleb128 0x1
 2525 0580 9C       		.byte	0x9c
 2526 0581 17       		.uleb128 0x17
 2527 0582 D6060000 		.4byte	.LASF58
 2528 0586 01       		.byte	0x1
 2529 0587 8402     		.2byte	0x284
 2530 0589 72000000 		.4byte	0x72
 2531 058d 00000000 		.4byte	.LFB10
 2532 0591 30000000 		.4byte	.LFE10-.LFB10
 2533 0595 01       		.uleb128 0x1
 2534 0596 9C       		.byte	0x9c
 2535 0597 BC050000 		.4byte	0x5bc
 2536 059b 0C       		.uleb128 0xc
 2537 059c 11020000 		.4byte	.LASF59
 2538 05a0 01       		.byte	0x1
 2539 05a1 8402     		.2byte	0x284
 2540 05a3 72000000 		.4byte	0x72
 2541 05a7 D5030000 		.4byte	.LLST24
 2542 05ab 0D       		.uleb128 0xd
 2543 05ac F0050000 		.4byte	.LASF51
 2544 05b0 01       		.byte	0x1
 2545 05b1 8602     		.2byte	0x286
 2546 05b3 72000000 		.4byte	0x72
 2547 05b7 F6030000 		.4byte	.LLST25
 2548 05bb 00       		.byte	0
 2549 05bc 17       		.uleb128 0x17
 2550 05bd 41000000 		.4byte	.LASF60
 2551 05c1 01       		.byte	0x1
 2552 05c2 B302     		.2byte	0x2b3
 2553 05c4 96000000 		.4byte	0x96
 2554 05c8 00000000 		.4byte	.LFB11
 2555 05cc 48000000 		.4byte	.LFE11-.LFB11
 2556 05d0 01       		.uleb128 0x1
 2557 05d1 9C       		.byte	0x9c
 2558 05d2 F5050000 		.4byte	0x5f5
 2559 05d6 19       		.uleb128 0x19
 2560 05d7 F8060000 		.4byte	.LASF61
 2561 05db 01       		.byte	0x1
 2562 05dc B502     		.2byte	0x2b5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 82


 2563 05de 96000000 		.4byte	0x96
 2564 05e2 01       		.uleb128 0x1
 2565 05e3 50       		.byte	0x50
 2566 05e4 0D       		.uleb128 0xd
 2567 05e5 86030000 		.4byte	.LASF49
 2568 05e9 01       		.byte	0x1
 2569 05ea B602     		.2byte	0x2b6
 2570 05ec 72000000 		.4byte	0x72
 2571 05f0 14040000 		.4byte	.LLST26
 2572 05f4 00       		.byte	0
 2573 05f5 17       		.uleb128 0x17
 2574 05f6 F2020000 		.4byte	.LASF62
 2575 05fa 01       		.byte	0x1
 2576 05fb E902     		.2byte	0x2e9
 2577 05fd A2000000 		.4byte	0xa2
 2578 0601 00000000 		.4byte	.LFB12
 2579 0605 50000000 		.4byte	.LFE12-.LFB12
 2580 0609 01       		.uleb128 0x1
 2581 060a 9C       		.byte	0x9c
 2582 060b 30060000 		.4byte	0x630
 2583 060f 0D       		.uleb128 0xd
 2584 0610 F8060000 		.4byte	.LASF61
 2585 0614 01       		.byte	0x1
 2586 0615 EB02     		.2byte	0x2eb
 2587 0617 7E000000 		.4byte	0x7e
 2588 061b 32040000 		.4byte	.LLST27
 2589 061f 0D       		.uleb128 0xd
 2590 0620 86030000 		.4byte	.LASF49
 2591 0624 01       		.byte	0x1
 2592 0625 EC02     		.2byte	0x2ec
 2593 0627 72000000 		.4byte	0x72
 2594 062b 5B040000 		.4byte	.LLST28
 2595 062f 00       		.byte	0
 2596 0630 17       		.uleb128 0x17
 2597 0631 CA040000 		.4byte	.LASF63
 2598 0635 01       		.byte	0x1
 2599 0636 2503     		.2byte	0x325
 2600 0638 AE000000 		.4byte	0xae
 2601 063c 00000000 		.4byte	.LFB13
 2602 0640 6C000000 		.4byte	.LFE13-.LFB13
 2603 0644 01       		.uleb128 0x1
 2604 0645 9C       		.byte	0x9c
 2605 0646 6B060000 		.4byte	0x66b
 2606 064a 0D       		.uleb128 0xd
 2607 064b F8060000 		.4byte	.LASF61
 2608 064f 01       		.byte	0x1
 2609 0650 2703     		.2byte	0x327
 2610 0652 8A000000 		.4byte	0x8a
 2611 0656 79040000 		.4byte	.LLST29
 2612 065a 0D       		.uleb128 0xd
 2613 065b 86030000 		.4byte	.LASF49
 2614 065f 01       		.byte	0x1
 2615 0660 2803     		.2byte	0x328
 2616 0662 72000000 		.4byte	0x72
 2617 0666 DA040000 		.4byte	.LLST30
 2618 066a 00       		.byte	0
 2619 066b 15       		.uleb128 0x15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 83


 2620 066c C1060000 		.4byte	.LASF64
 2621 0670 01       		.byte	0x1
 2622 0671 8203     		.2byte	0x382
 2623 0673 00000000 		.4byte	.LFB14
 2624 0677 0C000000 		.4byte	.LFE14-.LFB14
 2625 067b 01       		.uleb128 0x1
 2626 067c 9C       		.byte	0x9c
 2627 067d 90060000 		.4byte	0x690
 2628 0681 1A       		.uleb128 0x1a
 2629 0682 8A050000 		.4byte	.LASF65
 2630 0686 01       		.byte	0x1
 2631 0687 8203     		.2byte	0x382
 2632 0689 AE000000 		.4byte	0xae
 2633 068d 01       		.uleb128 0x1
 2634 068e 50       		.byte	0x50
 2635 068f 00       		.byte	0
 2636 0690 15       		.uleb128 0x15
 2637 0691 77050000 		.4byte	.LASF66
 2638 0695 01       		.byte	0x1
 2639 0696 A503     		.2byte	0x3a5
 2640 0698 00000000 		.4byte	.LFB15
 2641 069c 0C000000 		.4byte	.LFE15-.LFB15
 2642 06a0 01       		.uleb128 0x1
 2643 06a1 9C       		.byte	0x9c
 2644 06a2 B5060000 		.4byte	0x6b5
 2645 06a6 1A       		.uleb128 0x1a
 2646 06a7 57000000 		.4byte	.LASF67
 2647 06ab 01       		.byte	0x1
 2648 06ac A503     		.2byte	0x3a5
 2649 06ae AE000000 		.4byte	0xae
 2650 06b2 01       		.uleb128 0x1
 2651 06b3 50       		.byte	0x50
 2652 06b4 00       		.byte	0
 2653 06b5 17       		.uleb128 0x17
 2654 06b6 5F000000 		.4byte	.LASF68
 2655 06ba 01       		.byte	0x1
 2656 06bb C003     		.2byte	0x3c0
 2657 06bd A2000000 		.4byte	0xa2
 2658 06c1 00000000 		.4byte	.LFB16
 2659 06c5 24000000 		.4byte	.LFE16-.LFB16
 2660 06c9 01       		.uleb128 0x1
 2661 06ca 9C       		.byte	0x9c
 2662 06cb EE060000 		.4byte	0x6ee
 2663 06cf 0C       		.uleb128 0xc
 2664 06d0 BC050000 		.4byte	.LASF69
 2665 06d4 01       		.byte	0x1
 2666 06d5 C003     		.2byte	0x3c0
 2667 06d7 AE000000 		.4byte	0xae
 2668 06db 03050000 		.4byte	.LLST31
 2669 06df 19       		.uleb128 0x19
 2670 06e0 BC020000 		.4byte	.LASF70
 2671 06e4 01       		.byte	0x1
 2672 06e5 C303     		.2byte	0x3c3
 2673 06e7 A2000000 		.4byte	0xa2
 2674 06eb 01       		.uleb128 0x1
 2675 06ec 50       		.byte	0x50
 2676 06ed 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 84


 2677 06ee 16       		.uleb128 0x16
 2678 06ef 8D010000 		.4byte	.LASF71
 2679 06f3 01       		.byte	0x1
 2680 06f4 FD03     		.2byte	0x3fd
 2681 06f6 BA000000 		.4byte	0xba
 2682 06fa 00000000 		.4byte	.LFB17
 2683 06fe 28000000 		.4byte	.LFE17-.LFB17
 2684 0702 01       		.uleb128 0x1
 2685 0703 9C       		.byte	0x9c
 2686 0704 27070000 		.4byte	0x727
 2687 0708 0C       		.uleb128 0xc
 2688 0709 BC050000 		.4byte	.LASF69
 2689 070d 01       		.byte	0x1
 2690 070e FD03     		.2byte	0x3fd
 2691 0710 AE000000 		.4byte	0xae
 2692 0714 21050000 		.4byte	.LLST32
 2693 0718 19       		.uleb128 0x19
 2694 0719 EF010000 		.4byte	.LASF72
 2695 071d 01       		.byte	0x1
 2696 071e 0004     		.2byte	0x400
 2697 0720 BA000000 		.4byte	0xba
 2698 0724 01       		.uleb128 0x1
 2699 0725 50       		.byte	0x50
 2700 0726 00       		.byte	0
 2701 0727 17       		.uleb128 0x17
 2702 0728 59010000 		.4byte	.LASF73
 2703 072c 01       		.byte	0x1
 2704 072d 3F04     		.2byte	0x43f
 2705 072f AE000000 		.4byte	0xae
 2706 0733 00000000 		.4byte	.LFB18
 2707 0737 4C000000 		.4byte	.LFE18-.LFB18
 2708 073b 01       		.uleb128 0x1
 2709 073c 9C       		.byte	0x9c
 2710 073d 8D070000 		.4byte	0x78d
 2711 0741 0C       		.uleb128 0xc
 2712 0742 BC050000 		.4byte	.LASF69
 2713 0746 01       		.byte	0x1
 2714 0747 3F04     		.2byte	0x43f
 2715 0749 AE000000 		.4byte	0xae
 2716 074d 4F050000 		.4byte	.LLST33
 2717 0751 0D       		.uleb128 0xd
 2718 0752 36020000 		.4byte	.LASF74
 2719 0756 01       		.byte	0x1
 2720 0757 4204     		.2byte	0x442
 2721 0759 AE000000 		.4byte	0xae
 2722 075d 70050000 		.4byte	.LLST34
 2723 0761 1B       		.uleb128 0x1b
 2724 0762 0A050000 		.4byte	.LASF75
 2725 0766 01       		.byte	0x1
 2726 0767 4304     		.2byte	0x443
 2727 0769 AE000000 		.4byte	0xae
 2728 076d 127A     		.2byte	0x7a12
 2729 076f 0D       		.uleb128 0xd
 2730 0770 10050000 		.4byte	.LASF76
 2731 0774 01       		.byte	0x1
 2732 0775 4404     		.2byte	0x444
 2733 0777 AE000000 		.4byte	0xae
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 85


 2734 077b 93050000 		.4byte	.LLST35
 2735 077f 1C       		.uleb128 0x1c
 2736 0780 BF040000 		.4byte	.LASF30
 2737 0784 01       		.byte	0x1
 2738 0785 4504     		.2byte	0x445
 2739 0787 72000000 		.4byte	0x72
 2740 078b 10       		.byte	0x10
 2741 078c 00       		.byte	0
 2742 078d 15       		.uleb128 0x15
 2743 078e 09030000 		.4byte	.LASF77
 2744 0792 01       		.byte	0x1
 2745 0793 1006     		.2byte	0x610
 2746 0795 00000000 		.4byte	.LFB20
 2747 0799 60000000 		.4byte	.LFE20-.LFB20
 2748 079d 01       		.uleb128 0x1
 2749 079e 9C       		.byte	0x9c
 2750 079f 02080000 		.4byte	0x802
 2751 07a3 0C       		.uleb128 0xc
 2752 07a4 47050000 		.4byte	.LASF31
 2753 07a8 01       		.byte	0x1
 2754 07a9 1006     		.2byte	0x610
 2755 07ab 72000000 		.4byte	0x72
 2756 07af B3050000 		.4byte	.LLST36
 2757 07b3 0C       		.uleb128 0xc
 2758 07b4 66050000 		.4byte	.LASF78
 2759 07b8 01       		.byte	0x1
 2760 07b9 1006     		.2byte	0x610
 2761 07bb 72000000 		.4byte	0x72
 2762 07bf ED050000 		.4byte	.LLST37
 2763 07c3 10       		.uleb128 0x10
 2764 07c4 1E000000 		.4byte	.LVL143
 2765 07c8 06040000 		.4byte	0x406
 2766 07cc 11       		.uleb128 0x11
 2767 07cd 24000000 		.4byte	.LVL144
 2768 07d1 66020000 		.4byte	0x266
 2769 07d5 E0070000 		.4byte	0x7e0
 2770 07d9 0F       		.uleb128 0xf
 2771 07da 01       		.uleb128 0x1
 2772 07db 50       		.byte	0x50
 2773 07dc 02       		.uleb128 0x2
 2774 07dd 74       		.byte	0x74
 2775 07de 00       		.sleb128 0
 2776 07df 00       		.byte	0
 2777 07e0 10       		.uleb128 0x10
 2778 07e1 42000000 		.4byte	.LVL145
 2779 07e5 DD030000 		.4byte	0x3dd
 2780 07e9 10       		.uleb128 0x10
 2781 07ea 46000000 		.4byte	.LVL146
 2782 07ee 5D050000 		.4byte	0x55d
 2783 07f2 0E       		.uleb128 0xe
 2784 07f3 4E000000 		.4byte	.LVL149
 2785 07f7 AA090000 		.4byte	0x9aa
 2786 07fb 0F       		.uleb128 0xf
 2787 07fc 01       		.uleb128 0x1
 2788 07fd 50       		.byte	0x50
 2789 07fe 01       		.uleb128 0x1
 2790 07ff 30       		.byte	0x30
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 86


 2791 0800 00       		.byte	0
 2792 0801 00       		.byte	0
 2793 0802 17       		.uleb128 0x17
 2794 0803 AB020000 		.4byte	.LASF79
 2795 0807 01       		.byte	0x1
 2796 0808 E206     		.2byte	0x6e2
 2797 080a 96000000 		.4byte	0x96
 2798 080e 00000000 		.4byte	.LFB23
 2799 0812 28000000 		.4byte	.LFE23-.LFB23
 2800 0816 01       		.uleb128 0x1
 2801 0817 9C       		.byte	0x9c
 2802 0818 5B080000 		.4byte	0x85b
 2803 081c 0D       		.uleb128 0xd
 2804 081d F8060000 		.4byte	.LASF61
 2805 0821 01       		.byte	0x1
 2806 0822 E406     		.2byte	0x6e4
 2807 0824 96000000 		.4byte	0x96
 2808 0828 27060000 		.4byte	.LLST38
 2809 082c 10       		.uleb128 0x10
 2810 082d 10000000 		.4byte	.LVL150
 2811 0831 5D050000 		.4byte	0x55d
 2812 0835 11       		.uleb128 0x11
 2813 0836 16000000 		.4byte	.LVL151
 2814 083a 81050000 		.4byte	0x581
 2815 083e 48080000 		.4byte	0x848
 2816 0842 0F       		.uleb128 0xf
 2817 0843 01       		.uleb128 0x1
 2818 0844 50       		.byte	0x50
 2819 0845 01       		.uleb128 0x1
 2820 0846 30       		.byte	0x30
 2821 0847 00       		.byte	0
 2822 0848 10       		.uleb128 0x10
 2823 0849 1A000000 		.4byte	.LVL152
 2824 084d BC050000 		.4byte	0x5bc
 2825 0851 10       		.uleb128 0x10
 2826 0852 20000000 		.4byte	.LVL154
 2827 0856 6F050000 		.4byte	0x56f
 2828 085a 00       		.byte	0
 2829 085b 17       		.uleb128 0x17
 2830 085c AA050000 		.4byte	.LASF80
 2831 0860 01       		.byte	0x1
 2832 0861 0307     		.2byte	0x703
 2833 0863 A2000000 		.4byte	0xa2
 2834 0867 00000000 		.4byte	.LFB24
 2835 086b 28000000 		.4byte	.LFE24-.LFB24
 2836 086f 01       		.uleb128 0x1
 2837 0870 9C       		.byte	0x9c
 2838 0871 B4080000 		.4byte	0x8b4
 2839 0875 0D       		.uleb128 0xd
 2840 0876 F8060000 		.4byte	.LASF61
 2841 087a 01       		.byte	0x1
 2842 087b 0507     		.2byte	0x705
 2843 087d A2000000 		.4byte	0xa2
 2844 0881 3A060000 		.4byte	.LLST39
 2845 0885 10       		.uleb128 0x10
 2846 0886 10000000 		.4byte	.LVL156
 2847 088a 5D050000 		.4byte	0x55d
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 87


 2848 088e 11       		.uleb128 0x11
 2849 088f 16000000 		.4byte	.LVL157
 2850 0893 81050000 		.4byte	0x581
 2851 0897 A1080000 		.4byte	0x8a1
 2852 089b 0F       		.uleb128 0xf
 2853 089c 01       		.uleb128 0x1
 2854 089d 50       		.byte	0x50
 2855 089e 01       		.uleb128 0x1
 2856 089f 30       		.byte	0x30
 2857 08a0 00       		.byte	0
 2858 08a1 10       		.uleb128 0x10
 2859 08a2 1A000000 		.4byte	.LVL158
 2860 08a6 F5050000 		.4byte	0x5f5
 2861 08aa 10       		.uleb128 0x10
 2862 08ab 20000000 		.4byte	.LVL160
 2863 08af 6F050000 		.4byte	0x56f
 2864 08b3 00       		.byte	0
 2865 08b4 17       		.uleb128 0x17
 2866 08b5 C4010000 		.4byte	.LASF81
 2867 08b9 01       		.byte	0x1
 2868 08ba 2407     		.2byte	0x724
 2869 08bc AE000000 		.4byte	0xae
 2870 08c0 00000000 		.4byte	.LFB25
 2871 08c4 28000000 		.4byte	.LFE25-.LFB25
 2872 08c8 01       		.uleb128 0x1
 2873 08c9 9C       		.byte	0x9c
 2874 08ca 0D090000 		.4byte	0x90d
 2875 08ce 0D       		.uleb128 0xd
 2876 08cf F8060000 		.4byte	.LASF61
 2877 08d3 01       		.byte	0x1
 2878 08d4 2607     		.2byte	0x726
 2879 08d6 AE000000 		.4byte	0xae
 2880 08da 4D060000 		.4byte	.LLST40
 2881 08de 10       		.uleb128 0x10
 2882 08df 10000000 		.4byte	.LVL162
 2883 08e3 5D050000 		.4byte	0x55d
 2884 08e7 11       		.uleb128 0x11
 2885 08e8 16000000 		.4byte	.LVL163
 2886 08ec 81050000 		.4byte	0x581
 2887 08f0 FA080000 		.4byte	0x8fa
 2888 08f4 0F       		.uleb128 0xf
 2889 08f5 01       		.uleb128 0x1
 2890 08f6 50       		.byte	0x50
 2891 08f7 01       		.uleb128 0x1
 2892 08f8 30       		.byte	0x30
 2893 08f9 00       		.byte	0
 2894 08fa 10       		.uleb128 0x10
 2895 08fb 1A000000 		.4byte	.LVL164
 2896 08ff 30060000 		.4byte	0x630
 2897 0903 10       		.uleb128 0x10
 2898 0904 20000000 		.4byte	.LVL166
 2899 0908 6F050000 		.4byte	0x56f
 2900 090c 00       		.byte	0
 2901 090d 1D       		.uleb128 0x1d
 2902 090e 42010000 		.4byte	0x142
 2903 0912 1D090000 		.4byte	0x91d
 2904 0916 1E       		.uleb128 0x1e
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 88


 2905 0917 1A010000 		.4byte	0x11a
 2906 091b 00       		.byte	0
 2907 091c 00       		.byte	0
 2908 091d 1F       		.uleb128 0x1f
 2909 091e 7D010000 		.4byte	.LASF82
 2910 0922 01       		.byte	0x1
 2911 0923 3D       		.byte	0x3d
 2912 0924 0D090000 		.4byte	0x90d
 2913 0928 05       		.uleb128 0x5
 2914 0929 03       		.byte	0x3
 2915 092a 00000000 		.4byte	Volume_ADC_gcor
 2916 092e 20       		.uleb128 0x20
 2917 092f 39030000 		.4byte	.LASF83
 2918 0933 01       		.byte	0x1
 2919 0934 2C       		.byte	0x2c
 2920 0935 72000000 		.4byte	0x72
 2921 0939 05       		.uleb128 0x5
 2922 093a 03       		.byte	0x3
 2923 093b 00000000 		.4byte	Volume_ADC_initVar
 2924 093f 20       		.uleb128 0x20
 2925 0940 A6000000 		.4byte	.LASF84
 2926 0944 01       		.byte	0x1
 2927 0945 24       		.byte	0x24
 2928 0946 E0000000 		.4byte	0xe0
 2929 094a 05       		.uleb128 0x5
 2930 094b 03       		.byte	0x3
 2931 094c 00000000 		.4byte	Volume_ADC_convDone
 2932 0950 20       		.uleb128 0x20
 2933 0951 A5040000 		.4byte	.LASF85
 2934 0955 01       		.byte	0x1
 2935 0956 29       		.byte	0x29
 2936 0957 E0000000 		.4byte	0xe0
 2937 095b 05       		.uleb128 0x5
 2938 095c 03       		.byte	0x3
 2939 095d 00000000 		.4byte	Volume_ADC_stopConversion
 2940 0961 20       		.uleb128 0x20
 2941 0962 73030000 		.4byte	.LASF86
 2942 0966 01       		.byte	0x1
 2943 0967 2F       		.byte	0x2f
 2944 0968 E0000000 		.4byte	0xe0
 2945 096c 05       		.uleb128 0x5
 2946 096d 03       		.byte	0x3
 2947 096e 00000000 		.4byte	Volume_ADC_started
 2948 0972 20       		.uleb128 0x20
 2949 0973 FF030000 		.4byte	.LASF87
 2950 0977 01       		.byte	0x1
 2951 0978 32       		.byte	0x32
 2952 0979 E0000000 		.4byte	0xe0
 2953 097d 05       		.uleb128 0x5
 2954 097e 03       		.byte	0x3
 2955 097f 00000000 		.4byte	Volume_ADC_Config
 2956 0983 20       		.uleb128 0x20
 2957 0984 69040000 		.4byte	.LASF88
 2958 0988 01       		.byte	0x1
 2959 0989 34       		.byte	0x34
 2960 098a 94090000 		.4byte	0x994
 2961 098e 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 89


 2962 098f 03       		.byte	0x3
 2963 0990 00000000 		.4byte	Volume_ADC_Offset
 2964 0994 05       		.uleb128 0x5
 2965 0995 AE000000 		.4byte	0xae
 2966 0999 20       		.uleb128 0x20
 2967 099a 91050000 		.4byte	.LASF89
 2968 099e 01       		.byte	0x1
 2969 099f 35       		.byte	0x35
 2970 09a0 94090000 		.4byte	0x994
 2971 09a4 05       		.uleb128 0x5
 2972 09a5 03       		.byte	0x3
 2973 09a6 00000000 		.4byte	Volume_ADC_CountsPerVolt
 2974 09aa 21       		.uleb128 0x21
 2975 09ab 2E040000 		.4byte	.LASF90
 2976 09af 04       		.byte	0x4
 2977 09b0 7F       		.byte	0x7f
 2978 09b1 BB090000 		.4byte	0x9bb
 2979 09b5 22       		.uleb128 0x22
 2980 09b6 72000000 		.4byte	0x72
 2981 09ba 00       		.byte	0
 2982 09bb 23       		.uleb128 0x23
 2983 09bc 4F020000 		.4byte	.LASF101
 2984 09c0 04       		.byte	0x4
 2985 09c1 7D       		.byte	0x7d
 2986 09c2 72000000 		.4byte	0x72
 2987 09c6 21       		.uleb128 0x21
 2988 09c7 B3010000 		.4byte	.LASF91
 2989 09cb 04       		.byte	0x4
 2990 09cc 77       		.byte	0x77
 2991 09cd D7090000 		.4byte	0x9d7
 2992 09d1 22       		.uleb128 0x22
 2993 09d2 7E000000 		.4byte	0x7e
 2994 09d6 00       		.byte	0
 2995 09d7 21       		.uleb128 0x21
 2996 09d8 E9030000 		.4byte	.LASF92
 2997 09dc 04       		.byte	0x4
 2998 09dd 7E       		.byte	0x7e
 2999 09de E8090000 		.4byte	0x9e8
 3000 09e2 22       		.uleb128 0x22
 3001 09e3 72000000 		.4byte	0x72
 3002 09e7 00       		.byte	0
 3003 09e8 21       		.uleb128 0x21
 3004 09e9 85060000 		.4byte	.LASF93
 3005 09ed 05       		.byte	0x5
 3006 09ee 50       		.byte	0x50
 3007 09ef F9090000 		.4byte	0x9f9
 3008 09f3 22       		.uleb128 0x22
 3009 09f4 72000000 		.4byte	0x72
 3010 09f8 00       		.byte	0
 3011 09f9 21       		.uleb128 0x21
 3012 09fa E1040000 		.4byte	.LASF94
 3013 09fe 06       		.byte	0x6
 3014 09ff 2F       		.byte	0x2f
 3015 0a00 0F0A0000 		.4byte	0xa0f
 3016 0a04 22       		.uleb128 0x22
 3017 0a05 7E000000 		.4byte	0x7e
 3018 0a09 22       		.uleb128 0x22
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 90


 3019 0a0a 72000000 		.4byte	0x72
 3020 0a0e 00       		.byte	0
 3021 0a0f 21       		.uleb128 0x21
 3022 0a10 A6030000 		.4byte	.LASF95
 3023 0a14 07       		.byte	0x7
 3024 0a15 2F       		.byte	0x2f
 3025 0a16 250A0000 		.4byte	0xa25
 3026 0a1a 22       		.uleb128 0x22
 3027 0a1b 7E000000 		.4byte	0x7e
 3028 0a1f 22       		.uleb128 0x22
 3029 0a20 72000000 		.4byte	0x72
 3030 0a24 00       		.byte	0
 3031 0a25 24       		.uleb128 0x24
 3032 0a26 FC010000 		.4byte	.LASF102
 3033 0a2a 04       		.byte	0x4
 3034 0a2b 88       		.byte	0x88
 3035 0a2c 07010000 		.4byte	0x107
 3036 0a30 3F0A0000 		.4byte	0xa3f
 3037 0a34 22       		.uleb128 0x22
 3038 0a35 72000000 		.4byte	0x72
 3039 0a39 22       		.uleb128 0x22
 3040 0a3a 07010000 		.4byte	0x107
 3041 0a3e 00       		.byte	0
 3042 0a3f 21       		.uleb128 0x21
 3043 0a40 35040000 		.4byte	.LASF96
 3044 0a44 06       		.byte	0x6
 3045 0a45 32       		.byte	0x32
 3046 0a46 500A0000 		.4byte	0xa50
 3047 0a4a 22       		.uleb128 0x22
 3048 0a4b 72000000 		.4byte	0x72
 3049 0a4f 00       		.byte	0
 3050 0a50 21       		.uleb128 0x21
 3051 0a51 C3020000 		.4byte	.LASF97
 3052 0a55 07       		.byte	0x7
 3053 0a56 32       		.byte	0x32
 3054 0a57 610A0000 		.4byte	0xa61
 3055 0a5b 22       		.uleb128 0x22
 3056 0a5c 72000000 		.4byte	0x72
 3057 0a60 00       		.byte	0
 3058 0a61 25       		.uleb128 0x25
 3059 0a62 90030000 		.4byte	.LASF103
 3060 0a66 04       		.byte	0x4
 3061 0a67 8B       		.byte	0x8b
 3062 0a68 22       		.uleb128 0x22
 3063 0a69 72000000 		.4byte	0x72
 3064 0a6d 22       		.uleb128 0x22
 3065 0a6e 72000000 		.4byte	0x72
 3066 0a72 00       		.byte	0
 3067 0a73 00       		.byte	0
 3068              		.section	.debug_abbrev,"",%progbits
 3069              	.Ldebug_abbrev0:
 3070 0000 01       		.uleb128 0x1
 3071 0001 11       		.uleb128 0x11
 3072 0002 01       		.byte	0x1
 3073 0003 25       		.uleb128 0x25
 3074 0004 0E       		.uleb128 0xe
 3075 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 91


 3076 0006 0B       		.uleb128 0xb
 3077 0007 03       		.uleb128 0x3
 3078 0008 0E       		.uleb128 0xe
 3079 0009 1B       		.uleb128 0x1b
 3080 000a 0E       		.uleb128 0xe
 3081 000b 55       		.uleb128 0x55
 3082 000c 17       		.uleb128 0x17
 3083 000d 11       		.uleb128 0x11
 3084 000e 01       		.uleb128 0x1
 3085 000f 10       		.uleb128 0x10
 3086 0010 17       		.uleb128 0x17
 3087 0011 00       		.byte	0
 3088 0012 00       		.byte	0
 3089 0013 02       		.uleb128 0x2
 3090 0014 24       		.uleb128 0x24
 3091 0015 00       		.byte	0
 3092 0016 0B       		.uleb128 0xb
 3093 0017 0B       		.uleb128 0xb
 3094 0018 3E       		.uleb128 0x3e
 3095 0019 0B       		.uleb128 0xb
 3096 001a 03       		.uleb128 0x3
 3097 001b 0E       		.uleb128 0xe
 3098 001c 00       		.byte	0
 3099 001d 00       		.byte	0
 3100 001e 03       		.uleb128 0x3
 3101 001f 24       		.uleb128 0x24
 3102 0020 00       		.byte	0
 3103 0021 0B       		.uleb128 0xb
 3104 0022 0B       		.uleb128 0xb
 3105 0023 3E       		.uleb128 0x3e
 3106 0024 0B       		.uleb128 0xb
 3107 0025 03       		.uleb128 0x3
 3108 0026 08       		.uleb128 0x8
 3109 0027 00       		.byte	0
 3110 0028 00       		.byte	0
 3111 0029 04       		.uleb128 0x4
 3112 002a 16       		.uleb128 0x16
 3113 002b 00       		.byte	0
 3114 002c 03       		.uleb128 0x3
 3115 002d 0E       		.uleb128 0xe
 3116 002e 3A       		.uleb128 0x3a
 3117 002f 0B       		.uleb128 0xb
 3118 0030 3B       		.uleb128 0x3b
 3119 0031 05       		.uleb128 0x5
 3120 0032 49       		.uleb128 0x49
 3121 0033 13       		.uleb128 0x13
 3122 0034 00       		.byte	0
 3123 0035 00       		.byte	0
 3124 0036 05       		.uleb128 0x5
 3125 0037 35       		.uleb128 0x35
 3126 0038 00       		.byte	0
 3127 0039 49       		.uleb128 0x49
 3128 003a 13       		.uleb128 0x13
 3129 003b 00       		.byte	0
 3130 003c 00       		.byte	0
 3131 003d 06       		.uleb128 0x6
 3132 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 92


 3133 003f 00       		.byte	0
 3134 0040 0B       		.uleb128 0xb
 3135 0041 0B       		.uleb128 0xb
 3136 0042 49       		.uleb128 0x49
 3137 0043 13       		.uleb128 0x13
 3138 0044 00       		.byte	0
 3139 0045 00       		.byte	0
 3140 0046 07       		.uleb128 0x7
 3141 0047 15       		.uleb128 0x15
 3142 0048 00       		.byte	0
 3143 0049 27       		.uleb128 0x27
 3144 004a 19       		.uleb128 0x19
 3145 004b 00       		.byte	0
 3146 004c 00       		.byte	0
 3147 004d 08       		.uleb128 0x8
 3148 004e 13       		.uleb128 0x13
 3149 004f 01       		.byte	0x1
 3150 0050 0B       		.uleb128 0xb
 3151 0051 0B       		.uleb128 0xb
 3152 0052 3A       		.uleb128 0x3a
 3153 0053 0B       		.uleb128 0xb
 3154 0054 3B       		.uleb128 0x3b
 3155 0055 0B       		.uleb128 0xb
 3156 0056 01       		.uleb128 0x1
 3157 0057 13       		.uleb128 0x13
 3158 0058 00       		.byte	0
 3159 0059 00       		.byte	0
 3160 005a 09       		.uleb128 0x9
 3161 005b 0D       		.uleb128 0xd
 3162 005c 00       		.byte	0
 3163 005d 03       		.uleb128 0x3
 3164 005e 0E       		.uleb128 0xe
 3165 005f 3A       		.uleb128 0x3a
 3166 0060 0B       		.uleb128 0xb
 3167 0061 3B       		.uleb128 0x3b
 3168 0062 0B       		.uleb128 0xb
 3169 0063 49       		.uleb128 0x49
 3170 0064 13       		.uleb128 0x13
 3171 0065 38       		.uleb128 0x38
 3172 0066 0B       		.uleb128 0xb
 3173 0067 00       		.byte	0
 3174 0068 00       		.byte	0
 3175 0069 0A       		.uleb128 0xa
 3176 006a 16       		.uleb128 0x16
 3177 006b 00       		.byte	0
 3178 006c 03       		.uleb128 0x3
 3179 006d 0E       		.uleb128 0xe
 3180 006e 3A       		.uleb128 0x3a
 3181 006f 0B       		.uleb128 0xb
 3182 0070 3B       		.uleb128 0x3b
 3183 0071 0B       		.uleb128 0xb
 3184 0072 49       		.uleb128 0x49
 3185 0073 13       		.uleb128 0x13
 3186 0074 00       		.byte	0
 3187 0075 00       		.byte	0
 3188 0076 0B       		.uleb128 0xb
 3189 0077 2E       		.uleb128 0x2e
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 93


 3190 0078 01       		.byte	0x1
 3191 0079 03       		.uleb128 0x3
 3192 007a 0E       		.uleb128 0xe
 3193 007b 3A       		.uleb128 0x3a
 3194 007c 0B       		.uleb128 0xb
 3195 007d 3B       		.uleb128 0x3b
 3196 007e 05       		.uleb128 0x5
 3197 007f 27       		.uleb128 0x27
 3198 0080 19       		.uleb128 0x19
 3199 0081 11       		.uleb128 0x11
 3200 0082 01       		.uleb128 0x1
 3201 0083 12       		.uleb128 0x12
 3202 0084 06       		.uleb128 0x6
 3203 0085 40       		.uleb128 0x40
 3204 0086 18       		.uleb128 0x18
 3205 0087 9742     		.uleb128 0x2117
 3206 0089 19       		.uleb128 0x19
 3207 008a 01       		.uleb128 0x1
 3208 008b 13       		.uleb128 0x13
 3209 008c 00       		.byte	0
 3210 008d 00       		.byte	0
 3211 008e 0C       		.uleb128 0xc
 3212 008f 05       		.uleb128 0x5
 3213 0090 00       		.byte	0
 3214 0091 03       		.uleb128 0x3
 3215 0092 0E       		.uleb128 0xe
 3216 0093 3A       		.uleb128 0x3a
 3217 0094 0B       		.uleb128 0xb
 3218 0095 3B       		.uleb128 0x3b
 3219 0096 05       		.uleb128 0x5
 3220 0097 49       		.uleb128 0x49
 3221 0098 13       		.uleb128 0x13
 3222 0099 02       		.uleb128 0x2
 3223 009a 17       		.uleb128 0x17
 3224 009b 00       		.byte	0
 3225 009c 00       		.byte	0
 3226 009d 0D       		.uleb128 0xd
 3227 009e 34       		.uleb128 0x34
 3228 009f 00       		.byte	0
 3229 00a0 03       		.uleb128 0x3
 3230 00a1 0E       		.uleb128 0xe
 3231 00a2 3A       		.uleb128 0x3a
 3232 00a3 0B       		.uleb128 0xb
 3233 00a4 3B       		.uleb128 0x3b
 3234 00a5 05       		.uleb128 0x5
 3235 00a6 49       		.uleb128 0x49
 3236 00a7 13       		.uleb128 0x13
 3237 00a8 02       		.uleb128 0x2
 3238 00a9 17       		.uleb128 0x17
 3239 00aa 00       		.byte	0
 3240 00ab 00       		.byte	0
 3241 00ac 0E       		.uleb128 0xe
 3242 00ad 898201   		.uleb128 0x4109
 3243 00b0 01       		.byte	0x1
 3244 00b1 11       		.uleb128 0x11
 3245 00b2 01       		.uleb128 0x1
 3246 00b3 31       		.uleb128 0x31
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 94


 3247 00b4 13       		.uleb128 0x13
 3248 00b5 00       		.byte	0
 3249 00b6 00       		.byte	0
 3250 00b7 0F       		.uleb128 0xf
 3251 00b8 8A8201   		.uleb128 0x410a
 3252 00bb 00       		.byte	0
 3253 00bc 02       		.uleb128 0x2
 3254 00bd 18       		.uleb128 0x18
 3255 00be 9142     		.uleb128 0x2111
 3256 00c0 18       		.uleb128 0x18
 3257 00c1 00       		.byte	0
 3258 00c2 00       		.byte	0
 3259 00c3 10       		.uleb128 0x10
 3260 00c4 898201   		.uleb128 0x4109
 3261 00c7 00       		.byte	0
 3262 00c8 11       		.uleb128 0x11
 3263 00c9 01       		.uleb128 0x1
 3264 00ca 31       		.uleb128 0x31
 3265 00cb 13       		.uleb128 0x13
 3266 00cc 00       		.byte	0
 3267 00cd 00       		.byte	0
 3268 00ce 11       		.uleb128 0x11
 3269 00cf 898201   		.uleb128 0x4109
 3270 00d2 01       		.byte	0x1
 3271 00d3 11       		.uleb128 0x11
 3272 00d4 01       		.uleb128 0x1
 3273 00d5 31       		.uleb128 0x31
 3274 00d6 13       		.uleb128 0x13
 3275 00d7 01       		.uleb128 0x1
 3276 00d8 13       		.uleb128 0x13
 3277 00d9 00       		.byte	0
 3278 00da 00       		.byte	0
 3279 00db 12       		.uleb128 0x12
 3280 00dc 2E       		.uleb128 0x2e
 3281 00dd 01       		.byte	0x1
 3282 00de 3F       		.uleb128 0x3f
 3283 00df 19       		.uleb128 0x19
 3284 00e0 03       		.uleb128 0x3
 3285 00e1 0E       		.uleb128 0xe
 3286 00e2 3A       		.uleb128 0x3a
 3287 00e3 0B       		.uleb128 0xb
 3288 00e4 3B       		.uleb128 0x3b
 3289 00e5 0B       		.uleb128 0xb
 3290 00e6 27       		.uleb128 0x27
 3291 00e7 19       		.uleb128 0x19
 3292 00e8 11       		.uleb128 0x11
 3293 00e9 01       		.uleb128 0x1
 3294 00ea 12       		.uleb128 0x12
 3295 00eb 06       		.uleb128 0x6
 3296 00ec 40       		.uleb128 0x40
 3297 00ed 18       		.uleb128 0x18
 3298 00ee 9742     		.uleb128 0x2117
 3299 00f0 19       		.uleb128 0x19
 3300 00f1 01       		.uleb128 0x1
 3301 00f2 13       		.uleb128 0x13
 3302 00f3 00       		.byte	0
 3303 00f4 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 95


 3304 00f5 13       		.uleb128 0x13
 3305 00f6 34       		.uleb128 0x34
 3306 00f7 00       		.byte	0
 3307 00f8 03       		.uleb128 0x3
 3308 00f9 0E       		.uleb128 0xe
 3309 00fa 3A       		.uleb128 0x3a
 3310 00fb 0B       		.uleb128 0xb
 3311 00fc 3B       		.uleb128 0x3b
 3312 00fd 0B       		.uleb128 0xb
 3313 00fe 49       		.uleb128 0x49
 3314 00ff 13       		.uleb128 0x13
 3315 0100 00       		.byte	0
 3316 0101 00       		.byte	0
 3317 0102 14       		.uleb128 0x14
 3318 0103 34       		.uleb128 0x34
 3319 0104 00       		.byte	0
 3320 0105 03       		.uleb128 0x3
 3321 0106 0E       		.uleb128 0xe
 3322 0107 3A       		.uleb128 0x3a
 3323 0108 0B       		.uleb128 0xb
 3324 0109 3B       		.uleb128 0x3b
 3325 010a 0B       		.uleb128 0xb
 3326 010b 49       		.uleb128 0x49
 3327 010c 13       		.uleb128 0x13
 3328 010d 02       		.uleb128 0x2
 3329 010e 17       		.uleb128 0x17
 3330 010f 00       		.byte	0
 3331 0110 00       		.byte	0
 3332 0111 15       		.uleb128 0x15
 3333 0112 2E       		.uleb128 0x2e
 3334 0113 01       		.byte	0x1
 3335 0114 3F       		.uleb128 0x3f
 3336 0115 19       		.uleb128 0x19
 3337 0116 03       		.uleb128 0x3
 3338 0117 0E       		.uleb128 0xe
 3339 0118 3A       		.uleb128 0x3a
 3340 0119 0B       		.uleb128 0xb
 3341 011a 3B       		.uleb128 0x3b
 3342 011b 05       		.uleb128 0x5
 3343 011c 27       		.uleb128 0x27
 3344 011d 19       		.uleb128 0x19
 3345 011e 11       		.uleb128 0x11
 3346 011f 01       		.uleb128 0x1
 3347 0120 12       		.uleb128 0x12
 3348 0121 06       		.uleb128 0x6
 3349 0122 40       		.uleb128 0x40
 3350 0123 18       		.uleb128 0x18
 3351 0124 9742     		.uleb128 0x2117
 3352 0126 19       		.uleb128 0x19
 3353 0127 01       		.uleb128 0x1
 3354 0128 13       		.uleb128 0x13
 3355 0129 00       		.byte	0
 3356 012a 00       		.byte	0
 3357 012b 16       		.uleb128 0x16
 3358 012c 2E       		.uleb128 0x2e
 3359 012d 01       		.byte	0x1
 3360 012e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 96


 3361 012f 19       		.uleb128 0x19
 3362 0130 03       		.uleb128 0x3
 3363 0131 0E       		.uleb128 0xe
 3364 0132 3A       		.uleb128 0x3a
 3365 0133 0B       		.uleb128 0xb
 3366 0134 3B       		.uleb128 0x3b
 3367 0135 05       		.uleb128 0x5
 3368 0136 27       		.uleb128 0x27
 3369 0137 19       		.uleb128 0x19
 3370 0138 49       		.uleb128 0x49
 3371 0139 13       		.uleb128 0x13
 3372 013a 11       		.uleb128 0x11
 3373 013b 01       		.uleb128 0x1
 3374 013c 12       		.uleb128 0x12
 3375 013d 06       		.uleb128 0x6
 3376 013e 40       		.uleb128 0x40
 3377 013f 18       		.uleb128 0x18
 3378 0140 9642     		.uleb128 0x2116
 3379 0142 19       		.uleb128 0x19
 3380 0143 01       		.uleb128 0x1
 3381 0144 13       		.uleb128 0x13
 3382 0145 00       		.byte	0
 3383 0146 00       		.byte	0
 3384 0147 17       		.uleb128 0x17
 3385 0148 2E       		.uleb128 0x2e
 3386 0149 01       		.byte	0x1
 3387 014a 3F       		.uleb128 0x3f
 3388 014b 19       		.uleb128 0x19
 3389 014c 03       		.uleb128 0x3
 3390 014d 0E       		.uleb128 0xe
 3391 014e 3A       		.uleb128 0x3a
 3392 014f 0B       		.uleb128 0xb
 3393 0150 3B       		.uleb128 0x3b
 3394 0151 05       		.uleb128 0x5
 3395 0152 27       		.uleb128 0x27
 3396 0153 19       		.uleb128 0x19
 3397 0154 49       		.uleb128 0x49
 3398 0155 13       		.uleb128 0x13
 3399 0156 11       		.uleb128 0x11
 3400 0157 01       		.uleb128 0x1
 3401 0158 12       		.uleb128 0x12
 3402 0159 06       		.uleb128 0x6
 3403 015a 40       		.uleb128 0x40
 3404 015b 18       		.uleb128 0x18
 3405 015c 9742     		.uleb128 0x2117
 3406 015e 19       		.uleb128 0x19
 3407 015f 01       		.uleb128 0x1
 3408 0160 13       		.uleb128 0x13
 3409 0161 00       		.byte	0
 3410 0162 00       		.byte	0
 3411 0163 18       		.uleb128 0x18
 3412 0164 2E       		.uleb128 0x2e
 3413 0165 00       		.byte	0
 3414 0166 3F       		.uleb128 0x3f
 3415 0167 19       		.uleb128 0x19
 3416 0168 03       		.uleb128 0x3
 3417 0169 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 97


 3418 016a 3A       		.uleb128 0x3a
 3419 016b 0B       		.uleb128 0xb
 3420 016c 3B       		.uleb128 0x3b
 3421 016d 05       		.uleb128 0x5
 3422 016e 27       		.uleb128 0x27
 3423 016f 19       		.uleb128 0x19
 3424 0170 11       		.uleb128 0x11
 3425 0171 01       		.uleb128 0x1
 3426 0172 12       		.uleb128 0x12
 3427 0173 06       		.uleb128 0x6
 3428 0174 40       		.uleb128 0x40
 3429 0175 18       		.uleb128 0x18
 3430 0176 9742     		.uleb128 0x2117
 3431 0178 19       		.uleb128 0x19
 3432 0179 00       		.byte	0
 3433 017a 00       		.byte	0
 3434 017b 19       		.uleb128 0x19
 3435 017c 34       		.uleb128 0x34
 3436 017d 00       		.byte	0
 3437 017e 03       		.uleb128 0x3
 3438 017f 0E       		.uleb128 0xe
 3439 0180 3A       		.uleb128 0x3a
 3440 0181 0B       		.uleb128 0xb
 3441 0182 3B       		.uleb128 0x3b
 3442 0183 05       		.uleb128 0x5
 3443 0184 49       		.uleb128 0x49
 3444 0185 13       		.uleb128 0x13
 3445 0186 02       		.uleb128 0x2
 3446 0187 18       		.uleb128 0x18
 3447 0188 00       		.byte	0
 3448 0189 00       		.byte	0
 3449 018a 1A       		.uleb128 0x1a
 3450 018b 05       		.uleb128 0x5
 3451 018c 00       		.byte	0
 3452 018d 03       		.uleb128 0x3
 3453 018e 0E       		.uleb128 0xe
 3454 018f 3A       		.uleb128 0x3a
 3455 0190 0B       		.uleb128 0xb
 3456 0191 3B       		.uleb128 0x3b
 3457 0192 05       		.uleb128 0x5
 3458 0193 49       		.uleb128 0x49
 3459 0194 13       		.uleb128 0x13
 3460 0195 02       		.uleb128 0x2
 3461 0196 18       		.uleb128 0x18
 3462 0197 00       		.byte	0
 3463 0198 00       		.byte	0
 3464 0199 1B       		.uleb128 0x1b
 3465 019a 34       		.uleb128 0x34
 3466 019b 00       		.byte	0
 3467 019c 03       		.uleb128 0x3
 3468 019d 0E       		.uleb128 0xe
 3469 019e 3A       		.uleb128 0x3a
 3470 019f 0B       		.uleb128 0xb
 3471 01a0 3B       		.uleb128 0x3b
 3472 01a1 05       		.uleb128 0x5
 3473 01a2 49       		.uleb128 0x49
 3474 01a3 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 98


 3475 01a4 1C       		.uleb128 0x1c
 3476 01a5 05       		.uleb128 0x5
 3477 01a6 00       		.byte	0
 3478 01a7 00       		.byte	0
 3479 01a8 1C       		.uleb128 0x1c
 3480 01a9 34       		.uleb128 0x34
 3481 01aa 00       		.byte	0
 3482 01ab 03       		.uleb128 0x3
 3483 01ac 0E       		.uleb128 0xe
 3484 01ad 3A       		.uleb128 0x3a
 3485 01ae 0B       		.uleb128 0xb
 3486 01af 3B       		.uleb128 0x3b
 3487 01b0 05       		.uleb128 0x5
 3488 01b1 49       		.uleb128 0x49
 3489 01b2 13       		.uleb128 0x13
 3490 01b3 1C       		.uleb128 0x1c
 3491 01b4 0B       		.uleb128 0xb
 3492 01b5 00       		.byte	0
 3493 01b6 00       		.byte	0
 3494 01b7 1D       		.uleb128 0x1d
 3495 01b8 01       		.uleb128 0x1
 3496 01b9 01       		.byte	0x1
 3497 01ba 49       		.uleb128 0x49
 3498 01bb 13       		.uleb128 0x13
 3499 01bc 01       		.uleb128 0x1
 3500 01bd 13       		.uleb128 0x13
 3501 01be 00       		.byte	0
 3502 01bf 00       		.byte	0
 3503 01c0 1E       		.uleb128 0x1e
 3504 01c1 21       		.uleb128 0x21
 3505 01c2 00       		.byte	0
 3506 01c3 49       		.uleb128 0x49
 3507 01c4 13       		.uleb128 0x13
 3508 01c5 2F       		.uleb128 0x2f
 3509 01c6 0B       		.uleb128 0xb
 3510 01c7 00       		.byte	0
 3511 01c8 00       		.byte	0
 3512 01c9 1F       		.uleb128 0x1f
 3513 01ca 34       		.uleb128 0x34
 3514 01cb 00       		.byte	0
 3515 01cc 03       		.uleb128 0x3
 3516 01cd 0E       		.uleb128 0xe
 3517 01ce 3A       		.uleb128 0x3a
 3518 01cf 0B       		.uleb128 0xb
 3519 01d0 3B       		.uleb128 0x3b
 3520 01d1 0B       		.uleb128 0xb
 3521 01d2 49       		.uleb128 0x49
 3522 01d3 13       		.uleb128 0x13
 3523 01d4 02       		.uleb128 0x2
 3524 01d5 18       		.uleb128 0x18
 3525 01d6 00       		.byte	0
 3526 01d7 00       		.byte	0
 3527 01d8 20       		.uleb128 0x20
 3528 01d9 34       		.uleb128 0x34
 3529 01da 00       		.byte	0
 3530 01db 03       		.uleb128 0x3
 3531 01dc 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 99


 3532 01dd 3A       		.uleb128 0x3a
 3533 01de 0B       		.uleb128 0xb
 3534 01df 3B       		.uleb128 0x3b
 3535 01e0 0B       		.uleb128 0xb
 3536 01e1 49       		.uleb128 0x49
 3537 01e2 13       		.uleb128 0x13
 3538 01e3 3F       		.uleb128 0x3f
 3539 01e4 19       		.uleb128 0x19
 3540 01e5 02       		.uleb128 0x2
 3541 01e6 18       		.uleb128 0x18
 3542 01e7 00       		.byte	0
 3543 01e8 00       		.byte	0
 3544 01e9 21       		.uleb128 0x21
 3545 01ea 2E       		.uleb128 0x2e
 3546 01eb 01       		.byte	0x1
 3547 01ec 3F       		.uleb128 0x3f
 3548 01ed 19       		.uleb128 0x19
 3549 01ee 03       		.uleb128 0x3
 3550 01ef 0E       		.uleb128 0xe
 3551 01f0 3A       		.uleb128 0x3a
 3552 01f1 0B       		.uleb128 0xb
 3553 01f2 3B       		.uleb128 0x3b
 3554 01f3 0B       		.uleb128 0xb
 3555 01f4 27       		.uleb128 0x27
 3556 01f5 19       		.uleb128 0x19
 3557 01f6 3C       		.uleb128 0x3c
 3558 01f7 19       		.uleb128 0x19
 3559 01f8 01       		.uleb128 0x1
 3560 01f9 13       		.uleb128 0x13
 3561 01fa 00       		.byte	0
 3562 01fb 00       		.byte	0
 3563 01fc 22       		.uleb128 0x22
 3564 01fd 05       		.uleb128 0x5
 3565 01fe 00       		.byte	0
 3566 01ff 49       		.uleb128 0x49
 3567 0200 13       		.uleb128 0x13
 3568 0201 00       		.byte	0
 3569 0202 00       		.byte	0
 3570 0203 23       		.uleb128 0x23
 3571 0204 2E       		.uleb128 0x2e
 3572 0205 00       		.byte	0
 3573 0206 3F       		.uleb128 0x3f
 3574 0207 19       		.uleb128 0x19
 3575 0208 03       		.uleb128 0x3
 3576 0209 0E       		.uleb128 0xe
 3577 020a 3A       		.uleb128 0x3a
 3578 020b 0B       		.uleb128 0xb
 3579 020c 3B       		.uleb128 0x3b
 3580 020d 0B       		.uleb128 0xb
 3581 020e 27       		.uleb128 0x27
 3582 020f 19       		.uleb128 0x19
 3583 0210 49       		.uleb128 0x49
 3584 0211 13       		.uleb128 0x13
 3585 0212 3C       		.uleb128 0x3c
 3586 0213 19       		.uleb128 0x19
 3587 0214 00       		.byte	0
 3588 0215 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 100


 3589 0216 24       		.uleb128 0x24
 3590 0217 2E       		.uleb128 0x2e
 3591 0218 01       		.byte	0x1
 3592 0219 3F       		.uleb128 0x3f
 3593 021a 19       		.uleb128 0x19
 3594 021b 03       		.uleb128 0x3
 3595 021c 0E       		.uleb128 0xe
 3596 021d 3A       		.uleb128 0x3a
 3597 021e 0B       		.uleb128 0xb
 3598 021f 3B       		.uleb128 0x3b
 3599 0220 0B       		.uleb128 0xb
 3600 0221 27       		.uleb128 0x27
 3601 0222 19       		.uleb128 0x19
 3602 0223 49       		.uleb128 0x49
 3603 0224 13       		.uleb128 0x13
 3604 0225 3C       		.uleb128 0x3c
 3605 0226 19       		.uleb128 0x19
 3606 0227 01       		.uleb128 0x1
 3607 0228 13       		.uleb128 0x13
 3608 0229 00       		.byte	0
 3609 022a 00       		.byte	0
 3610 022b 25       		.uleb128 0x25
 3611 022c 2E       		.uleb128 0x2e
 3612 022d 01       		.byte	0x1
 3613 022e 3F       		.uleb128 0x3f
 3614 022f 19       		.uleb128 0x19
 3615 0230 03       		.uleb128 0x3
 3616 0231 0E       		.uleb128 0xe
 3617 0232 3A       		.uleb128 0x3a
 3618 0233 0B       		.uleb128 0xb
 3619 0234 3B       		.uleb128 0x3b
 3620 0235 0B       		.uleb128 0xb
 3621 0236 27       		.uleb128 0x27
 3622 0237 19       		.uleb128 0x19
 3623 0238 3C       		.uleb128 0x3c
 3624 0239 19       		.uleb128 0x19
 3625 023a 00       		.byte	0
 3626 023b 00       		.byte	0
 3627 023c 00       		.byte	0
 3628              		.section	.debug_loc,"",%progbits
 3629              	.Ldebug_loc0:
 3630              	.LLST0:
 3631 0000 00000000 		.4byte	.LVL0
 3632 0004 0C000000 		.4byte	.LVL1
 3633 0008 0100     		.2byte	0x1
 3634 000a 50       		.byte	0x50
 3635 000b 0C000000 		.4byte	.LVL1
 3636 000f A0000000 		.4byte	.LVL29
 3637 0013 0400     		.2byte	0x4
 3638 0015 F3       		.byte	0xf3
 3639 0016 01       		.uleb128 0x1
 3640 0017 50       		.byte	0x50
 3641 0018 9F       		.byte	0x9f
 3642 0019 A0000000 		.4byte	.LVL29
 3643 001d A2000000 		.4byte	.LVL30
 3644 0021 0100     		.2byte	0x1
 3645 0023 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 101


 3646 0024 A2000000 		.4byte	.LVL30
 3647 0028 CC000000 		.4byte	.LFE21
 3648 002c 0400     		.2byte	0x4
 3649 002e F3       		.byte	0xf3
 3650 002f 01       		.uleb128 0x1
 3651 0030 50       		.byte	0x50
 3652 0031 9F       		.byte	0x9f
 3653 0032 00000000 		.4byte	0
 3654 0036 00000000 		.4byte	0
 3655              	.LLST1:
 3656 003a 00000000 		.4byte	.LVL0
 3657 003e 66000000 		.4byte	.LVL19
 3658 0042 0100     		.2byte	0x1
 3659 0044 51       		.byte	0x51
 3660 0045 66000000 		.4byte	.LVL19
 3661 0049 A0000000 		.4byte	.LVL29
 3662 004d 0400     		.2byte	0x4
 3663 004f F3       		.byte	0xf3
 3664 0050 01       		.uleb128 0x1
 3665 0051 51       		.byte	0x51
 3666 0052 9F       		.byte	0x9f
 3667 0053 A0000000 		.4byte	.LVL29
 3668 0057 A5000000 		.4byte	.LVL31-1
 3669 005b 0100     		.2byte	0x1
 3670 005d 51       		.byte	0x51
 3671 005e A5000000 		.4byte	.LVL31-1
 3672 0062 CC000000 		.4byte	.LFE21
 3673 0066 0400     		.2byte	0x4
 3674 0068 F3       		.byte	0xf3
 3675 0069 01       		.uleb128 0x1
 3676 006a 51       		.byte	0x51
 3677 006b 9F       		.byte	0x9f
 3678 006c 00000000 		.4byte	0
 3679 0070 00000000 		.4byte	0
 3680              	.LLST2:
 3681 0074 00000000 		.4byte	.LVL0
 3682 0078 6E000000 		.4byte	.LVL22
 3683 007c 0100     		.2byte	0x1
 3684 007e 52       		.byte	0x52
 3685 007f 6E000000 		.4byte	.LVL22
 3686 0083 A0000000 		.4byte	.LVL29
 3687 0087 0400     		.2byte	0x4
 3688 0089 F3       		.byte	0xf3
 3689 008a 01       		.uleb128 0x1
 3690 008b 52       		.byte	0x52
 3691 008c 9F       		.byte	0x9f
 3692 008d A0000000 		.4byte	.LVL29
 3693 0091 A5000000 		.4byte	.LVL31-1
 3694 0095 0100     		.2byte	0x1
 3695 0097 52       		.byte	0x52
 3696 0098 A5000000 		.4byte	.LVL31-1
 3697 009c CC000000 		.4byte	.LFE21
 3698 00a0 0400     		.2byte	0x4
 3699 00a2 F3       		.byte	0xf3
 3700 00a3 01       		.uleb128 0x1
 3701 00a4 52       		.byte	0x52
 3702 00a5 9F       		.byte	0x9f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 102


 3703 00a6 00000000 		.4byte	0
 3704 00aa 00000000 		.4byte	0
 3705              	.LLST3:
 3706 00ae 00000000 		.4byte	.LVL0
 3707 00b2 84000000 		.4byte	.LVL26
 3708 00b6 0100     		.2byte	0x1
 3709 00b8 53       		.byte	0x53
 3710 00b9 84000000 		.4byte	.LVL26
 3711 00bd 8A000000 		.4byte	.LVL27
 3712 00c1 0400     		.2byte	0x4
 3713 00c3 F3       		.byte	0xf3
 3714 00c4 01       		.uleb128 0x1
 3715 00c5 53       		.byte	0x53
 3716 00c6 9F       		.byte	0x9f
 3717 00c7 8A000000 		.4byte	.LVL27
 3718 00cb 8C000000 		.4byte	.LVL28
 3719 00cf 0100     		.2byte	0x1
 3720 00d1 53       		.byte	0x53
 3721 00d2 8C000000 		.4byte	.LVL28
 3722 00d6 A0000000 		.4byte	.LVL29
 3723 00da 0400     		.2byte	0x4
 3724 00dc F3       		.byte	0xf3
 3725 00dd 01       		.uleb128 0x1
 3726 00de 53       		.byte	0x53
 3727 00df 9F       		.byte	0x9f
 3728 00e0 A0000000 		.4byte	.LVL29
 3729 00e4 A5000000 		.4byte	.LVL31-1
 3730 00e8 0100     		.2byte	0x1
 3731 00ea 53       		.byte	0x53
 3732 00eb A5000000 		.4byte	.LVL31-1
 3733 00ef CC000000 		.4byte	.LFE21
 3734 00f3 0400     		.2byte	0x4
 3735 00f5 F3       		.byte	0xf3
 3736 00f6 01       		.uleb128 0x1
 3737 00f7 53       		.byte	0x53
 3738 00f8 9F       		.byte	0x9f
 3739 00f9 00000000 		.4byte	0
 3740 00fd 00000000 		.4byte	0
 3741              	.LLST4:
 3742 0101 00000000 		.4byte	.LVL0
 3743 0105 A0000000 		.4byte	.LVL29
 3744 0109 0200     		.2byte	0x2
 3745 010b 91       		.byte	0x91
 3746 010c 00       		.sleb128 0
 3747 010d A0000000 		.4byte	.LVL29
 3748 0111 A8000000 		.4byte	.LVL32
 3749 0115 0200     		.2byte	0x2
 3750 0117 91       		.byte	0x91
 3751 0118 00       		.sleb128 0
 3752 0119 A8000000 		.4byte	.LVL32
 3753 011d CC000000 		.4byte	.LFE21
 3754 0121 0200     		.2byte	0x2
 3755 0123 7D       		.byte	0x7d
 3756 0124 00       		.sleb128 0
 3757 0125 00000000 		.4byte	0
 3758 0129 00000000 		.4byte	0
 3759              	.LLST5:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 103


 3760 012d 26000000 		.4byte	.LVL2
 3761 0131 28000000 		.4byte	.LVL3
 3762 0135 0100     		.2byte	0x1
 3763 0137 50       		.byte	0x50
 3764 0138 2C000000 		.4byte	.LVL4
 3765 013c 2E000000 		.4byte	.LVL5
 3766 0140 0100     		.2byte	0x1
 3767 0142 50       		.byte	0x50
 3768 0143 36000000 		.4byte	.LVL6
 3769 0147 38000000 		.4byte	.LVL7
 3770 014b 0100     		.2byte	0x1
 3771 014d 50       		.byte	0x50
 3772 014e 3C000000 		.4byte	.LVL8
 3773 0152 3E000000 		.4byte	.LVL9
 3774 0156 0100     		.2byte	0x1
 3775 0158 50       		.byte	0x50
 3776 0159 46000000 		.4byte	.LVL10
 3777 015d 48000000 		.4byte	.LVL11
 3778 0161 0100     		.2byte	0x1
 3779 0163 50       		.byte	0x50
 3780 0164 4C000000 		.4byte	.LVL12
 3781 0168 4E000000 		.4byte	.LVL13
 3782 016c 0100     		.2byte	0x1
 3783 016e 50       		.byte	0x50
 3784 016f 56000000 		.4byte	.LVL14
 3785 0173 58000000 		.4byte	.LVL15
 3786 0177 0100     		.2byte	0x1
 3787 0179 50       		.byte	0x50
 3788 017a 5C000000 		.4byte	.LVL16
 3789 017e 5E000000 		.4byte	.LVL17
 3790 0182 0100     		.2byte	0x1
 3791 0184 50       		.byte	0x50
 3792 0185 60000000 		.4byte	.LVL18
 3793 0189 A0000000 		.4byte	.LVL29
 3794 018d 0100     		.2byte	0x1
 3795 018f 50       		.byte	0x50
 3796 0190 00000000 		.4byte	0
 3797 0194 00000000 		.4byte	0
 3798              	.LLST6:
 3799 0198 66000000 		.4byte	.LVL19
 3800 019c 6A000000 		.4byte	.LVL20
 3801 01a0 0100     		.2byte	0x1
 3802 01a2 51       		.byte	0x51
 3803 01a3 00000000 		.4byte	0
 3804 01a7 00000000 		.4byte	0
 3805              	.LLST7:
 3806 01ab 6E000000 		.4byte	.LVL22
 3807 01af 76000000 		.4byte	.LVL23
 3808 01b3 0100     		.2byte	0x1
 3809 01b5 52       		.byte	0x52
 3810 01b6 76000000 		.4byte	.LVL23
 3811 01ba 7A000000 		.4byte	.LVL24
 3812 01be 0100     		.2byte	0x1
 3813 01c0 51       		.byte	0x51
 3814 01c1 7C000000 		.4byte	.LVL25
 3815 01c5 A0000000 		.4byte	.LVL29
 3816 01c9 0100     		.2byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 104


 3817 01cb 52       		.byte	0x52
 3818 01cc 00000000 		.4byte	0
 3819 01d0 00000000 		.4byte	0
 3820              	.LLST8:
 3821 01d4 6A000000 		.4byte	.LVL20
 3822 01d8 6C000000 		.4byte	.LVL21
 3823 01dc 0100     		.2byte	0x1
 3824 01de 51       		.byte	0x51
 3825 01df 00000000 		.4byte	0
 3826 01e3 00000000 		.4byte	0
 3827              	.LLST9:
 3828 01e7 00000000 		.4byte	.LVL33
 3829 01eb 07000000 		.4byte	.LVL34-1
 3830 01ef 0100     		.2byte	0x1
 3831 01f1 50       		.byte	0x50
 3832 01f2 07000000 		.4byte	.LVL34-1
 3833 01f6 4C000000 		.4byte	.LFE22
 3834 01fa 0400     		.2byte	0x4
 3835 01fc F3       		.byte	0xf3
 3836 01fd 01       		.uleb128 0x1
 3837 01fe 50       		.byte	0x50
 3838 01ff 9F       		.byte	0x9f
 3839 0200 00000000 		.4byte	0
 3840 0204 00000000 		.4byte	0
 3841              	.LLST10:
 3842 0208 0A000000 		.4byte	.LVL35
 3843 020c 40000000 		.4byte	.LVL38
 3844 0210 0100     		.2byte	0x1
 3845 0212 56       		.byte	0x56
 3846 0213 00000000 		.4byte	0
 3847 0217 00000000 		.4byte	0
 3848              	.LLST11:
 3849 021b 00000000 		.4byte	.LVL39
 3850 021f 80000000 		.4byte	.LVL40
 3851 0223 0100     		.2byte	0x1
 3852 0225 50       		.byte	0x50
 3853 0226 80000000 		.4byte	.LVL40
 3854 022a E0000000 		.4byte	.LFE19
 3855 022e 0400     		.2byte	0x4
 3856 0230 F3       		.byte	0xf3
 3857 0231 01       		.uleb128 0x1
 3858 0232 50       		.byte	0x50
 3859 0233 9F       		.byte	0x9f
 3860 0234 00000000 		.4byte	0
 3861 0238 00000000 		.4byte	0
 3862              	.LLST12:
 3863 023c 08000000 		.4byte	.LVL52
 3864 0240 B2000000 		.4byte	.LVL56
 3865 0244 0100     		.2byte	0x1
 3866 0246 56       		.byte	0x56
 3867 0247 00000000 		.4byte	0
 3868 024b 00000000 		.4byte	0
 3869              	.LLST13:
 3870 024f 08000000 		.4byte	.LVL60
 3871 0253 CE000000 		.4byte	.LVL63
 3872 0257 0100     		.2byte	0x1
 3873 0259 56       		.byte	0x56
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 105


 3874 025a 00000000 		.4byte	0
 3875 025e 00000000 		.4byte	0
 3876              	.LLST14:
 3877 0262 00000000 		.4byte	.LVL64
 3878 0266 0A000000 		.4byte	.LVL66
 3879 026a 0100     		.2byte	0x1
 3880 026c 50       		.byte	0x50
 3881 026d 0A000000 		.4byte	.LVL66
 3882 0271 18000000 		.4byte	.LFE4
 3883 0275 0400     		.2byte	0x4
 3884 0277 F3       		.byte	0xf3
 3885 0278 01       		.uleb128 0x1
 3886 0279 50       		.byte	0x50
 3887 027a 9F       		.byte	0x9f
 3888 027b 00000000 		.4byte	0
 3889 027f 00000000 		.4byte	0
 3890              	.LLST15:
 3891 0283 08000000 		.4byte	.LVL65
 3892 0287 10000000 		.4byte	.LVL67
 3893 028b 0100     		.2byte	0x1
 3894 028d 53       		.byte	0x53
 3895 028e 10000000 		.4byte	.LVL67
 3896 0292 18000000 		.4byte	.LFE4
 3897 0296 0100     		.2byte	0x1
 3898 0298 50       		.byte	0x50
 3899 0299 00000000 		.4byte	0
 3900 029d 00000000 		.4byte	0
 3901              	.LLST16:
 3902 02a1 00000000 		.4byte	.LVL68
 3903 02a5 0C000000 		.4byte	.LVL70
 3904 02a9 0100     		.2byte	0x1
 3905 02ab 50       		.byte	0x50
 3906 02ac 0C000000 		.4byte	.LVL70
 3907 02b0 18000000 		.4byte	.LFE5
 3908 02b4 0400     		.2byte	0x4
 3909 02b6 F3       		.byte	0xf3
 3910 02b7 01       		.uleb128 0x1
 3911 02b8 50       		.byte	0x50
 3912 02b9 9F       		.byte	0x9f
 3913 02ba 00000000 		.4byte	0
 3914 02be 00000000 		.4byte	0
 3915              	.LLST17:
 3916 02c2 08000000 		.4byte	.LVL69
 3917 02c6 0E000000 		.4byte	.LVL71
 3918 02ca 0100     		.2byte	0x1
 3919 02cc 53       		.byte	0x53
 3920 02cd 0E000000 		.4byte	.LVL71
 3921 02d1 18000000 		.4byte	.LFE5
 3922 02d5 0100     		.2byte	0x1
 3923 02d7 50       		.byte	0x50
 3924 02d8 00000000 		.4byte	0
 3925 02dc 00000000 		.4byte	0
 3926              	.LLST18:
 3927 02e0 00000000 		.4byte	.LVL72
 3928 02e4 10000000 		.4byte	.LVL74
 3929 02e8 0100     		.2byte	0x1
 3930 02ea 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 106


 3931 02eb 10000000 		.4byte	.LVL74
 3932 02ef 24000000 		.4byte	.LVL78
 3933 02f3 0100     		.2byte	0x1
 3934 02f5 54       		.byte	0x54
 3935 02f6 24000000 		.4byte	.LVL78
 3936 02fa 74000000 		.4byte	.LFE6
 3937 02fe 0600     		.2byte	0x6
 3938 0300 F3       		.byte	0xf3
 3939 0301 03       		.uleb128 0x3
 3940 0302 F5       		.byte	0xf5
 3941 0303 00       		.uleb128 0
 3942 0304 25       		.uleb128 0x25
 3943 0305 9F       		.byte	0x9f
 3944 0306 00000000 		.4byte	0
 3945 030a 00000000 		.4byte	0
 3946              	.LLST19:
 3947 030e 0A000000 		.4byte	.LVL73
 3948 0312 13000000 		.4byte	.LVL75-1
 3949 0316 0A00     		.2byte	0xa
 3950 0318 73       		.byte	0x73
 3951 0319 00       		.sleb128 0
 3952 031a 32       		.byte	0x32
 3953 031b 24       		.byte	0x24
 3954 031c 03       		.byte	0x3
 3955 031d 00000000 		.4byte	.LANCHOR0
 3956 0321 22       		.byte	0x22
 3957 0322 44000000 		.4byte	.LVL83
 3958 0326 56000000 		.4byte	.LVL85
 3959 032a 0100     		.2byte	0x1
 3960 032c 50       		.byte	0x50
 3961 032d 56000000 		.4byte	.LVL85
 3962 0331 58000000 		.4byte	.LVL86
 3963 0335 0700     		.2byte	0x7
 3964 0337 73       		.byte	0x73
 3965 0338 00       		.sleb128 0
 3966 0339 32       		.byte	0x32
 3967 033a 24       		.byte	0x24
 3968 033b 72       		.byte	0x72
 3969 033c 00       		.sleb128 0
 3970 033d 22       		.byte	0x22
 3971 033e 00000000 		.4byte	0
 3972 0342 00000000 		.4byte	0
 3973              	.LLST20:
 3974 0346 54000000 		.4byte	.LVL84
 3975 034a 58000000 		.4byte	.LVL86
 3976 034e 0200     		.2byte	0x2
 3977 0350 30       		.byte	0x30
 3978 0351 9F       		.byte	0x9f
 3979 0352 5A000000 		.4byte	.LVL87
 3980 0356 74000000 		.4byte	.LFE6
 3981 035a 0100     		.2byte	0x1
 3982 035c 50       		.byte	0x50
 3983 035d 00000000 		.4byte	0
 3984 0361 00000000 		.4byte	0
 3985              	.LLST21:
 3986 0365 1C000000 		.4byte	.LVL76
 3987 0369 21000000 		.4byte	.LVL77-1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 107


 3988 036d 0100     		.2byte	0x1
 3989 036f 50       		.byte	0x50
 3990 0370 24000000 		.4byte	.LVL78
 3991 0374 27000000 		.4byte	.LVL79-1
 3992 0378 0100     		.2byte	0x1
 3993 037a 50       		.byte	0x50
 3994 037b 27000000 		.4byte	.LVL79-1
 3995 037f 3E000000 		.4byte	.LVL81
 3996 0383 0100     		.2byte	0x1
 3997 0385 54       		.byte	0x54
 3998 0386 3E000000 		.4byte	.LVL81
 3999 038a 41000000 		.4byte	.LVL82-1
 4000 038e 0100     		.2byte	0x1
 4001 0390 50       		.byte	0x50
 4002 0391 58000000 		.4byte	.LVL86
 4003 0395 5C000000 		.4byte	.LVL88
 4004 0399 0100     		.2byte	0x1
 4005 039b 54       		.byte	0x54
 4006 039c 00000000 		.4byte	0
 4007 03a0 00000000 		.4byte	0
 4008              	.LLST22:
 4009 03a4 06000000 		.4byte	.LVL89
 4010 03a8 14000000 		.4byte	.LVL91
 4011 03ac 0100     		.2byte	0x1
 4012 03ae 53       		.byte	0x53
 4013 03af 00000000 		.4byte	0
 4014 03b3 00000000 		.4byte	0
 4015              	.LLST23:
 4016 03b7 0C000000 		.4byte	.LVL90
 4017 03bb 16000000 		.4byte	.LVL92
 4018 03bf 0100     		.2byte	0x1
 4019 03c1 50       		.byte	0x50
 4020 03c2 18000000 		.4byte	.LVL93
 4021 03c6 24000000 		.4byte	.LFE7
 4022 03ca 0100     		.2byte	0x1
 4023 03cc 50       		.byte	0x50
 4024 03cd 00000000 		.4byte	0
 4025 03d1 00000000 		.4byte	0
 4026              	.LLST24:
 4027 03d5 00000000 		.4byte	.LVL94
 4028 03d9 24000000 		.4byte	.LVL98
 4029 03dd 0100     		.2byte	0x1
 4030 03df 50       		.byte	0x50
 4031 03e0 24000000 		.4byte	.LVL98
 4032 03e4 30000000 		.4byte	.LFE10
 4033 03e8 0400     		.2byte	0x4
 4034 03ea F3       		.byte	0xf3
 4035 03eb 01       		.uleb128 0x1
 4036 03ec 50       		.byte	0x50
 4037 03ed 9F       		.byte	0x9f
 4038 03ee 00000000 		.4byte	0
 4039 03f2 00000000 		.4byte	0
 4040              	.LLST25:
 4041 03f6 10000000 		.4byte	.LVL95
 4042 03fa 12000000 		.4byte	.LVL96
 4043 03fe 0100     		.2byte	0x1
 4044 0400 53       		.byte	0x53
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 108


 4045 0401 1A000000 		.4byte	.LVL97
 4046 0405 30000000 		.4byte	.LFE10
 4047 0409 0100     		.2byte	0x1
 4048 040b 53       		.byte	0x53
 4049 040c 00000000 		.4byte	0
 4050 0410 00000000 		.4byte	0
 4051              	.LLST26:
 4052 0414 08000000 		.4byte	.LVL99
 4053 0418 12000000 		.4byte	.LVL101
 4054 041c 0100     		.2byte	0x1
 4055 041e 53       		.byte	0x53
 4056 041f 16000000 		.4byte	.LVL102
 4057 0423 1C000000 		.4byte	.LVL103
 4058 0427 0100     		.2byte	0x1
 4059 0429 53       		.byte	0x53
 4060 042a 00000000 		.4byte	0
 4061 042e 00000000 		.4byte	0
 4062              	.LLST27:
 4063 0432 12000000 		.4byte	.LVL106
 4064 0436 14000000 		.4byte	.LVL107
 4065 043a 0100     		.2byte	0x1
 4066 043c 50       		.byte	0x50
 4067 043d 18000000 		.4byte	.LVL108
 4068 0441 20000000 		.4byte	.LVL109
 4069 0445 0100     		.2byte	0x1
 4070 0447 52       		.byte	0x52
 4071 0448 20000000 		.4byte	.LVL109
 4072 044c 50000000 		.4byte	.LFE12
 4073 0450 0100     		.2byte	0x1
 4074 0452 50       		.byte	0x50
 4075 0453 00000000 		.4byte	0
 4076 0457 00000000 		.4byte	0
 4077              	.LLST28:
 4078 045b 08000000 		.4byte	.LVL104
 4079 045f 0E000000 		.4byte	.LVL105
 4080 0463 0100     		.2byte	0x1
 4081 0465 53       		.byte	0x53
 4082 0466 14000000 		.4byte	.LVL107
 4083 046a 26000000 		.4byte	.LVL110
 4084 046e 0100     		.2byte	0x1
 4085 0470 53       		.byte	0x53
 4086 0471 00000000 		.4byte	0
 4087 0475 00000000 		.4byte	0
 4088              	.LLST29:
 4089 0479 10000000 		.4byte	.LVL113
 4090 047d 1A000000 		.4byte	.LVL114
 4091 0481 0700     		.2byte	0x7
 4092 0483 70       		.byte	0x70
 4093 0484 00       		.sleb128 0
 4094 0485 0A       		.byte	0xa
 4095 0486 FFFF     		.2byte	0xffff
 4096 0488 1A       		.byte	0x1a
 4097 0489 9F       		.byte	0x9f
 4098 048a 1A000000 		.4byte	.LVL114
 4099 048e 1C000000 		.4byte	.LVL115
 4100 0492 0100     		.2byte	0x1
 4101 0494 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 109


 4102 0495 24000000 		.4byte	.LVL117
 4103 0499 2C000000 		.4byte	.LVL118
 4104 049d 0700     		.2byte	0x7
 4105 049f 70       		.byte	0x70
 4106 04a0 00       		.sleb128 0
 4107 04a1 0A       		.byte	0xa
 4108 04a2 FFFF     		.2byte	0xffff
 4109 04a4 1A       		.byte	0x1a
 4110 04a5 9F       		.byte	0x9f
 4111 04a6 2C000000 		.4byte	.LVL118
 4112 04aa 34000000 		.4byte	.LVL119
 4113 04ae 0100     		.2byte	0x1
 4114 04b0 53       		.byte	0x53
 4115 04b1 34000000 		.4byte	.LVL119
 4116 04b5 36000000 		.4byte	.LVL120
 4117 04b9 0100     		.2byte	0x1
 4118 04bb 50       		.byte	0x50
 4119 04bc 3C000000 		.4byte	.LVL122
 4120 04c0 44000000 		.4byte	.LVL123
 4121 04c4 0100     		.2byte	0x1
 4122 04c6 53       		.byte	0x53
 4123 04c7 44000000 		.4byte	.LVL123
 4124 04cb 6C000000 		.4byte	.LFE13
 4125 04cf 0100     		.2byte	0x1
 4126 04d1 50       		.byte	0x50
 4127 04d2 00000000 		.4byte	0
 4128 04d6 00000000 		.4byte	0
 4129              	.LLST30:
 4130 04da 08000000 		.4byte	.LVL111
 4131 04de 0E000000 		.4byte	.LVL112
 4132 04e2 0100     		.2byte	0x1
 4133 04e4 53       		.byte	0x53
 4134 04e5 1C000000 		.4byte	.LVL115
 4135 04e9 22000000 		.4byte	.LVL116
 4136 04ed 0100     		.2byte	0x1
 4137 04ef 53       		.byte	0x53
 4138 04f0 36000000 		.4byte	.LVL120
 4139 04f4 38000000 		.4byte	.LVL121
 4140 04f8 0100     		.2byte	0x1
 4141 04fa 53       		.byte	0x53
 4142 04fb 00000000 		.4byte	0
 4143 04ff 00000000 		.4byte	0
 4144              	.LLST31:
 4145 0503 00000000 		.4byte	.LVL126
 4146 0507 06000000 		.4byte	.LVL127
 4147 050b 0100     		.2byte	0x1
 4148 050d 50       		.byte	0x50
 4149 050e 06000000 		.4byte	.LVL127
 4150 0512 0E000000 		.4byte	.LVL128
 4151 0516 0100     		.2byte	0x1
 4152 0518 50       		.byte	0x50
 4153 0519 00000000 		.4byte	0
 4154 051d 00000000 		.4byte	0
 4155              	.LLST32:
 4156 0521 00000000 		.4byte	.LVL130
 4157 0525 06000000 		.4byte	.LVL131
 4158 0529 0100     		.2byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 110


 4159 052b 50       		.byte	0x50
 4160 052c 06000000 		.4byte	.LVL131
 4161 0530 08000000 		.4byte	.LVL132
 4162 0534 0600     		.2byte	0x6
 4163 0536 70       		.byte	0x70
 4164 0537 00       		.sleb128 0
 4165 0538 73       		.byte	0x73
 4166 0539 00       		.sleb128 0
 4167 053a 1C       		.byte	0x1c
 4168 053b 9F       		.byte	0x9f
 4169 053c 08000000 		.4byte	.LVL132
 4170 0540 0B000000 		.4byte	.LVL133-1
 4171 0544 0100     		.2byte	0x1
 4172 0546 50       		.byte	0x50
 4173 0547 00000000 		.4byte	0
 4174 054b 00000000 		.4byte	0
 4175              	.LLST33:
 4176 054f 00000000 		.4byte	.LVL136
 4177 0553 2C000000 		.4byte	.LVL139
 4178 0557 0100     		.2byte	0x1
 4179 0559 50       		.byte	0x50
 4180 055a 2C000000 		.4byte	.LVL139
 4181 055e 4C000000 		.4byte	.LFE18
 4182 0562 0400     		.2byte	0x4
 4183 0564 F3       		.byte	0xf3
 4184 0565 01       		.uleb128 0x1
 4185 0566 50       		.byte	0x50
 4186 0567 9F       		.byte	0x9f
 4187 0568 00000000 		.4byte	0
 4188 056c 00000000 		.4byte	0
 4189              	.LLST34:
 4190 0570 3C000000 		.4byte	.LVL140
 4191 0574 3E000000 		.4byte	.LVL141
 4192 0578 0600     		.2byte	0x6
 4193 057a 70       		.byte	0x70
 4194 057b 00       		.sleb128 0
 4195 057c 73       		.byte	0x73
 4196 057d 00       		.sleb128 0
 4197 057e 1C       		.byte	0x1c
 4198 057f 9F       		.byte	0x9f
 4199 0580 3E000000 		.4byte	.LVL141
 4200 0584 4C000000 		.4byte	.LFE18
 4201 0588 0100     		.2byte	0x1
 4202 058a 50       		.byte	0x50
 4203 058b 00000000 		.4byte	0
 4204 058f 00000000 		.4byte	0
 4205              	.LLST35:
 4206 0593 18000000 		.4byte	.LVL137
 4207 0597 24000000 		.4byte	.LVL138
 4208 059b 0300     		.2byte	0x3
 4209 059d 08       		.byte	0x8
 4210 059e 20       		.byte	0x20
 4211 059f 9F       		.byte	0x9f
 4212 05a0 24000000 		.4byte	.LVL138
 4213 05a4 4C000000 		.4byte	.LFE18
 4214 05a8 0100     		.2byte	0x1
 4215 05aa 52       		.byte	0x52
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 111


 4216 05ab 00000000 		.4byte	0
 4217 05af 00000000 		.4byte	0
 4218              	.LLST36:
 4219 05b3 00000000 		.4byte	.LVL142
 4220 05b7 1D000000 		.4byte	.LVL143-1
 4221 05bb 0100     		.2byte	0x1
 4222 05bd 50       		.byte	0x50
 4223 05be 1D000000 		.4byte	.LVL143-1
 4224 05c2 48000000 		.4byte	.LVL147
 4225 05c6 0400     		.2byte	0x4
 4226 05c8 F3       		.byte	0xf3
 4227 05c9 01       		.uleb128 0x1
 4228 05ca 50       		.byte	0x50
 4229 05cb 9F       		.byte	0x9f
 4230 05cc 48000000 		.4byte	.LVL147
 4231 05d0 4A000000 		.4byte	.LVL148
 4232 05d4 0100     		.2byte	0x1
 4233 05d6 50       		.byte	0x50
 4234 05d7 4A000000 		.4byte	.LVL148
 4235 05db 60000000 		.4byte	.LFE20
 4236 05df 0400     		.2byte	0x4
 4237 05e1 F3       		.byte	0xf3
 4238 05e2 01       		.uleb128 0x1
 4239 05e3 50       		.byte	0x50
 4240 05e4 9F       		.byte	0x9f
 4241 05e5 00000000 		.4byte	0
 4242 05e9 00000000 		.4byte	0
 4243              	.LLST37:
 4244 05ed 00000000 		.4byte	.LVL142
 4245 05f1 1D000000 		.4byte	.LVL143-1
 4246 05f5 0100     		.2byte	0x1
 4247 05f7 51       		.byte	0x51
 4248 05f8 1D000000 		.4byte	.LVL143-1
 4249 05fc 48000000 		.4byte	.LVL147
 4250 0600 0400     		.2byte	0x4
 4251 0602 F3       		.byte	0xf3
 4252 0603 01       		.uleb128 0x1
 4253 0604 51       		.byte	0x51
 4254 0605 9F       		.byte	0x9f
 4255 0606 48000000 		.4byte	.LVL147
 4256 060a 4D000000 		.4byte	.LVL149-1
 4257 060e 0100     		.2byte	0x1
 4258 0610 51       		.byte	0x51
 4259 0611 4D000000 		.4byte	.LVL149-1
 4260 0615 60000000 		.4byte	.LFE20
 4261 0619 0400     		.2byte	0x4
 4262 061b F3       		.byte	0xf3
 4263 061c 01       		.uleb128 0x1
 4264 061d 51       		.byte	0x51
 4265 061e 9F       		.byte	0x9f
 4266 061f 00000000 		.4byte	0
 4267 0623 00000000 		.4byte	0
 4268              	.LLST38:
 4269 0627 1C000000 		.4byte	.LVL153
 4270 062b 24000000 		.4byte	.LVL155
 4271 062f 0100     		.2byte	0x1
 4272 0631 54       		.byte	0x54
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 112


 4273 0632 00000000 		.4byte	0
 4274 0636 00000000 		.4byte	0
 4275              	.LLST39:
 4276 063a 1C000000 		.4byte	.LVL159
 4277 063e 24000000 		.4byte	.LVL161
 4278 0642 0100     		.2byte	0x1
 4279 0644 54       		.byte	0x54
 4280 0645 00000000 		.4byte	0
 4281 0649 00000000 		.4byte	0
 4282              	.LLST40:
 4283 064d 1C000000 		.4byte	.LVL165
 4284 0651 1F000000 		.4byte	.LVL166-1
 4285 0655 0100     		.2byte	0x1
 4286 0657 50       		.byte	0x50
 4287 0658 1F000000 		.4byte	.LVL166-1
 4288 065c 24000000 		.4byte	.LVL167
 4289 0660 0100     		.2byte	0x1
 4290 0662 54       		.byte	0x54
 4291 0663 24000000 		.4byte	.LVL167
 4292 0667 28000000 		.4byte	.LFE25
 4293 066b 0100     		.2byte	0x1
 4294 066d 50       		.byte	0x50
 4295 066e 00000000 		.4byte	0
 4296 0672 00000000 		.4byte	0
 4297              		.section	.debug_aranges,"",%progbits
 4298 0000 E4000000 		.4byte	0xe4
 4299 0004 0200     		.2byte	0x2
 4300 0006 00000000 		.4byte	.Ldebug_info0
 4301 000a 04       		.byte	0x4
 4302 000b 00       		.byte	0
 4303 000c 0000     		.2byte	0
 4304 000e 0000     		.2byte	0
 4305 0010 00000000 		.4byte	.LFB21
 4306 0014 CC000000 		.4byte	.LFE21-.LFB21
 4307 0018 00000000 		.4byte	.LFB22
 4308 001c 4C000000 		.4byte	.LFE22-.LFB22
 4309 0020 00000000 		.4byte	.LFB19
 4310 0024 E0000000 		.4byte	.LFE19-.LFB19
 4311 0028 00000000 		.4byte	.LFB0
 4312 002c C4000000 		.4byte	.LFE0-.LFB0
 4313 0030 00000000 		.4byte	.LFB1
 4314 0034 D8000000 		.4byte	.LFE1-.LFB1
 4315 0038 00000000 		.4byte	.LFB2
 4316 003c 28000000 		.4byte	.LFE2-.LFB2
 4317 0040 00000000 		.4byte	.LFB3
 4318 0044 E4000000 		.4byte	.LFE3-.LFB3
 4319 0048 00000000 		.4byte	.LFB4
 4320 004c 18000000 		.4byte	.LFE4-.LFB4
 4321 0050 00000000 		.4byte	.LFB5
 4322 0054 18000000 		.4byte	.LFE5-.LFB5
 4323 0058 00000000 		.4byte	.LFB6
 4324 005c 74000000 		.4byte	.LFE6-.LFB6
 4325 0060 00000000 		.4byte	.LFB7
 4326 0064 24000000 		.4byte	.LFE7-.LFB7
 4327 0068 00000000 		.4byte	.LFB8
 4328 006c 10000000 		.4byte	.LFE8-.LFB8
 4329 0070 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 113


 4330 0074 10000000 		.4byte	.LFE9-.LFB9
 4331 0078 00000000 		.4byte	.LFB10
 4332 007c 30000000 		.4byte	.LFE10-.LFB10
 4333 0080 00000000 		.4byte	.LFB11
 4334 0084 48000000 		.4byte	.LFE11-.LFB11
 4335 0088 00000000 		.4byte	.LFB12
 4336 008c 50000000 		.4byte	.LFE12-.LFB12
 4337 0090 00000000 		.4byte	.LFB13
 4338 0094 6C000000 		.4byte	.LFE13-.LFB13
 4339 0098 00000000 		.4byte	.LFB14
 4340 009c 0C000000 		.4byte	.LFE14-.LFB14
 4341 00a0 00000000 		.4byte	.LFB15
 4342 00a4 0C000000 		.4byte	.LFE15-.LFB15
 4343 00a8 00000000 		.4byte	.LFB16
 4344 00ac 24000000 		.4byte	.LFE16-.LFB16
 4345 00b0 00000000 		.4byte	.LFB17
 4346 00b4 28000000 		.4byte	.LFE17-.LFB17
 4347 00b8 00000000 		.4byte	.LFB18
 4348 00bc 4C000000 		.4byte	.LFE18-.LFB18
 4349 00c0 00000000 		.4byte	.LFB20
 4350 00c4 60000000 		.4byte	.LFE20-.LFB20
 4351 00c8 00000000 		.4byte	.LFB23
 4352 00cc 28000000 		.4byte	.LFE23-.LFB23
 4353 00d0 00000000 		.4byte	.LFB24
 4354 00d4 28000000 		.4byte	.LFE24-.LFB24
 4355 00d8 00000000 		.4byte	.LFB25
 4356 00dc 28000000 		.4byte	.LFE25-.LFB25
 4357 00e0 00000000 		.4byte	0
 4358 00e4 00000000 		.4byte	0
 4359              		.section	.debug_ranges,"",%progbits
 4360              	.Ldebug_ranges0:
 4361 0000 00000000 		.4byte	.LFB21
 4362 0004 CC000000 		.4byte	.LFE21
 4363 0008 00000000 		.4byte	.LFB22
 4364 000c 4C000000 		.4byte	.LFE22
 4365 0010 00000000 		.4byte	.LFB19
 4366 0014 E0000000 		.4byte	.LFE19
 4367 0018 00000000 		.4byte	.LFB0
 4368 001c C4000000 		.4byte	.LFE0
 4369 0020 00000000 		.4byte	.LFB1
 4370 0024 D8000000 		.4byte	.LFE1
 4371 0028 00000000 		.4byte	.LFB2
 4372 002c 28000000 		.4byte	.LFE2
 4373 0030 00000000 		.4byte	.LFB3
 4374 0034 E4000000 		.4byte	.LFE3
 4375 0038 00000000 		.4byte	.LFB4
 4376 003c 18000000 		.4byte	.LFE4
 4377 0040 00000000 		.4byte	.LFB5
 4378 0044 18000000 		.4byte	.LFE5
 4379 0048 00000000 		.4byte	.LFB6
 4380 004c 74000000 		.4byte	.LFE6
 4381 0050 00000000 		.4byte	.LFB7
 4382 0054 24000000 		.4byte	.LFE7
 4383 0058 00000000 		.4byte	.LFB8
 4384 005c 10000000 		.4byte	.LFE8
 4385 0060 00000000 		.4byte	.LFB9
 4386 0064 10000000 		.4byte	.LFE9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 114


 4387 0068 00000000 		.4byte	.LFB10
 4388 006c 30000000 		.4byte	.LFE10
 4389 0070 00000000 		.4byte	.LFB11
 4390 0074 48000000 		.4byte	.LFE11
 4391 0078 00000000 		.4byte	.LFB12
 4392 007c 50000000 		.4byte	.LFE12
 4393 0080 00000000 		.4byte	.LFB13
 4394 0084 6C000000 		.4byte	.LFE13
 4395 0088 00000000 		.4byte	.LFB14
 4396 008c 0C000000 		.4byte	.LFE14
 4397 0090 00000000 		.4byte	.LFB15
 4398 0094 0C000000 		.4byte	.LFE15
 4399 0098 00000000 		.4byte	.LFB16
 4400 009c 24000000 		.4byte	.LFE16
 4401 00a0 00000000 		.4byte	.LFB17
 4402 00a4 28000000 		.4byte	.LFE17
 4403 00a8 00000000 		.4byte	.LFB18
 4404 00ac 4C000000 		.4byte	.LFE18
 4405 00b0 00000000 		.4byte	.LFB20
 4406 00b4 60000000 		.4byte	.LFE20
 4407 00b8 00000000 		.4byte	.LFB23
 4408 00bc 28000000 		.4byte	.LFE23
 4409 00c0 00000000 		.4byte	.LFB24
 4410 00c4 28000000 		.4byte	.LFE24
 4411 00c8 00000000 		.4byte	.LFB25
 4412 00cc 28000000 		.4byte	.LFE25
 4413 00d0 00000000 		.4byte	0
 4414 00d4 00000000 		.4byte	0
 4415              		.section	.debug_line,"",%progbits
 4416              	.Ldebug_line0:
 4417 0000 6E030000 		.section	.debug_str,"MS",%progbits,1
 4417      0200AA00 
 4417      00000201 
 4417      FB0E0D00 
 4417      01010101 
 4418              	.LASF99:
 4419 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\Volume_ADC.c\000"
 4419      72617465 
 4419      645F536F 
 4419      75726365 
 4419      5C50536F 
 4420              	.LASF11:
 4421 0024 75696E74 		.ascii	"uint16\000"
 4421      313600
 4422              	.LASF40:
 4423 002b 566F6C75 		.ascii	"Volume_ADC_InitConfig\000"
 4423      6D655F41 
 4423      44435F49 
 4423      6E697443 
 4423      6F6E6669 
 4424              	.LASF60:
 4425 0041 566F6C75 		.ascii	"Volume_ADC_GetResult8\000"
 4425      6D655F41 
 4425      44435F47 
 4425      65745265 
 4425      73756C74 
 4426              	.LASF67:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 115


 4427 0057 61646347 		.ascii	"adcGain\000"
 4427      61696E00 
 4428              	.LASF68:
 4429 005f 566F6C75 		.ascii	"Volume_ADC_CountsTo_mVolts\000"
 4429      6D655F41 
 4429      44435F43 
 4429      6F756E74 
 4429      73546F5F 
 4430              	.LASF27:
 4431 007a 696E7075 		.ascii	"inputRange\000"
 4431      7452616E 
 4431      676500
 4432              	.LASF36:
 4433 0085 566F6C75 		.ascii	"Volume_ADC_GainCompensation\000"
 4433      6D655F41 
 4433      44435F47 
 4433      61696E43 
 4433      6F6D7065 
 4434              	.LASF24:
 4435 00a1 67636F72 		.ascii	"gcor\000"
 4435      00
 4436              	.LASF84:
 4437 00a6 566F6C75 		.ascii	"Volume_ADC_convDone\000"
 4437      6D655F41 
 4437      44435F63 
 4437      6F6E7644 
 4437      6F6E6500 
 4438              	.LASF8:
 4439 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 4439      206C6F6E 
 4439      6720756E 
 4439      7369676E 
 4439      65642069 
 4440              	.LASF29:
 4441 00d1 69646561 		.ascii	"idealOddDecGain\000"
 4441      6C4F6464 
 4441      44656347 
 4441      61696E00 
 4442              	.LASF7:
 4443 00e1 6C6F6E67 		.ascii	"long long int\000"
 4443      206C6F6E 
 4443      6720696E 
 4443      7400
 4444              	.LASF1:
 4445 00ef 7369676E 		.ascii	"signed char\000"
 4445      65642063 
 4445      68617200 
 4446              	.LASF100:
 4447 00fb 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 4447      73657273 
 4447      5C4C756B 
 4447      61732043 
 4447      72657574 
 4448 0129 65445350 		.ascii	"eDSP_6CHamp\\PSoC Workspace\\Controls.cydsn\000"
 4448      5F364348 
 4448      616D705C 
 4448      50536F43 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 116


 4448      20576F72 
 4449              	.LASF15:
 4450 0153 696E7433 		.ascii	"int32\000"
 4450      3200
 4451              	.LASF73:
 4452 0159 566F6C75 		.ascii	"Volume_ADC_CountsTo_uVolts\000"
 4452      6D655F41 
 4452      44435F43 
 4452      6F756E74 
 4452      73546F5F 
 4453              	.LASF5:
 4454 0174 6C6F6E67 		.ascii	"long int\000"
 4454      20696E74 
 4454      00
 4455              	.LASF82:
 4456 017d 566F6C75 		.ascii	"Volume_ADC_gcor\000"
 4456      6D655F41 
 4456      44435F67 
 4456      636F7200 
 4457              	.LASF71:
 4458 018d 566F6C75 		.ascii	"Volume_ADC_CountsTo_Volts\000"
 4458      6D655F41 
 4458      44435F43 
 4458      6F756E74 
 4458      73546F5F 
 4459              	.LASF20:
 4460 01a7 72656731 		.ascii	"reg16\000"
 4460      3600
 4461              	.LASF10:
 4462 01ad 75696E74 		.ascii	"uint8\000"
 4462      3800
 4463              	.LASF91:
 4464 01b3 43794465 		.ascii	"CyDelayUs\000"
 4464      6C617955 
 4464      7300
 4465              	.LASF17:
 4466 01bd 646F7562 		.ascii	"double\000"
 4466      6C6500
 4467              	.LASF81:
 4468 01c4 566F6C75 		.ascii	"Volume_ADC_Read32\000"
 4468      6D655F41 
 4468      44435F52 
 4468      65616433 
 4468      3200
 4469              	.LASF45:
 4470 01d6 566F6C75 		.ascii	"Volume_ADC_SetBufferGain\000"
 4470      6D655F41 
 4470      44435F53 
 4470      65744275 
 4470      66666572 
 4471              	.LASF72:
 4472 01ef 566F6C74 		.ascii	"Volts\000"
 4472      7300
 4473              	.LASF12:
 4474 01f5 75696E74 		.ascii	"uint32\000"
 4474      333200
 4475              	.LASF102:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 117


 4476 01fc 4379496E 		.ascii	"CyIntSetVector\000"
 4476      74536574 
 4476      56656374 
 4476      6F7200
 4477              	.LASF38:
 4478 020b 76616C75 		.ascii	"value\000"
 4478      6500
 4479              	.LASF59:
 4480 0211 7265744D 		.ascii	"retMode\000"
 4480      6F646500 
 4481              	.LASF44:
 4482 0219 566F6C75 		.ascii	"Volume_ADC_Stop\000"
 4482      6D655F41 
 4482      44435F53 
 4482      746F7000 
 4483              	.LASF9:
 4484 0229 756E7369 		.ascii	"unsigned int\000"
 4484      676E6564 
 4484      20696E74 
 4484      00
 4485              	.LASF74:
 4486 0236 75566F6C 		.ascii	"uVolts\000"
 4486      747300
 4487              	.LASF6:
 4488 023d 6C6F6E67 		.ascii	"long unsigned int\000"
 4488      20756E73 
 4488      69676E65 
 4488      6420696E 
 4488      7400
 4489              	.LASF101:
 4490 024f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4490      74657243 
 4490      72697469 
 4490      63616C53 
 4490      65637469 
 4491              	.LASF43:
 4492 0266 566F6C75 		.ascii	"Volume_ADC_Start\000"
 4492      6D655F41 
 4492      44435F53 
 4492      74617274 
 4492      00
 4493              	.LASF42:
 4494 0277 566F6C75 		.ascii	"Volume_ADC_Enable\000"
 4494      6D655F41 
 4494      44435F45 
 4494      6E61626C 
 4494      6500
 4495              	.LASF4:
 4496 0289 73686F72 		.ascii	"short unsigned int\000"
 4496      7420756E 
 4496      7369676E 
 4496      65642069 
 4496      6E7400
 4497              	.LASF13:
 4498 029c 696E7438 		.ascii	"int8\000"
 4498      00
 4499              	.LASF34:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 118


 4500 02a1 67636F72 		.ascii	"gcorValue\000"
 4500      56616C75 
 4500      6500
 4501              	.LASF79:
 4502 02ab 566F6C75 		.ascii	"Volume_ADC_Read8\000"
 4502      6D655F41 
 4502      44435F52 
 4502      65616438 
 4502      00
 4503              	.LASF70:
 4504 02bc 6D566F6C 		.ascii	"mVolts\000"
 4504      747300
 4505              	.LASF97:
 4506 02c3 566F6C75 		.ascii	"Volume_ADC_theACLK_SetModeRegister\000"
 4506      6D655F41 
 4506      44435F74 
 4506      68654143 
 4506      4C4B5F53 
 4507              	.LASF32:
 4508 02e6 666C6173 		.ascii	"flash\000"
 4508      6800
 4509              	.LASF21:
 4510 02ec 72656733 		.ascii	"reg32\000"
 4510      3200
 4511              	.LASF62:
 4512 02f2 566F6C75 		.ascii	"Volume_ADC_GetResult16\000"
 4512      6D655F41 
 4512      44435F47 
 4512      65745265 
 4512      73756C74 
 4513              	.LASF77:
 4514 0309 566F6C75 		.ascii	"Volume_ADC_SelectConfiguration\000"
 4514      6D655F41 
 4514      44435F53 
 4514      656C6563 
 4514      74436F6E 
 4515              	.LASF16:
 4516 0328 666C6F61 		.ascii	"float32\000"
 4516      74333200 
 4517              	.LASF23:
 4518 0330 73697A65 		.ascii	"sizetype\000"
 4518      74797065 
 4518      00
 4519              	.LASF83:
 4520 0339 566F6C75 		.ascii	"Volume_ADC_initVar\000"
 4520      6D655F41 
 4520      44435F69 
 4520      6E697456 
 4520      617200
 4521              	.LASF41:
 4522 034c 566F6C75 		.ascii	"Volume_ADC_Init\000"
 4522      6D655F41 
 4522      44435F49 
 4522      6E697400 
 4523              	.LASF26:
 4524 035c 566F6C75 		.ascii	"Volume_ADC_GCOR_STRUCT\000"
 4524      6D655F41 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 119


 4524      44435F47 
 4524      434F525F 
 4524      53545255 
 4525              	.LASF86:
 4526 0373 566F6C75 		.ascii	"Volume_ADC_started\000"
 4526      6D655F41 
 4526      44435F73 
 4526      74617274 
 4526      656400
 4527              	.LASF49:
 4528 0386 636F6865 		.ascii	"coherency\000"
 4528      72656E63 
 4528      7900
 4529              	.LASF103:
 4530 0390 4379496E 		.ascii	"CyIntSetPriority\000"
 4530      74536574 
 4530      5072696F 
 4530      72697479 
 4530      00
 4531              	.LASF46:
 4532 03a1 6761696E 		.ascii	"gain\000"
 4532      00
 4533              	.LASF95:
 4534 03a6 566F6C75 		.ascii	"Volume_ADC_theACLK_SetDividerRegister\000"
 4534      6D655F41 
 4534      44435F74 
 4534      68654143 
 4534      4C4B5F53 
 4535              	.LASF57:
 4536 03cc 566F6C75 		.ascii	"Volume_ADC_StopConvert\000"
 4536      6D655F41 
 4536      44435F53 
 4536      746F7043 
 4536      6F6E7665 
 4537              	.LASF0:
 4538 03e3 666C6F61 		.ascii	"float\000"
 4538      7400
 4539              	.LASF92:
 4540 03e9 43794578 		.ascii	"CyExitCriticalSection\000"
 4540      69744372 
 4540      69746963 
 4540      616C5365 
 4540      6374696F 
 4541              	.LASF87:
 4542 03ff 566F6C75 		.ascii	"Volume_ADC_Config\000"
 4542      6D655F41 
 4542      44435F43 
 4542      6F6E6669 
 4542      6700
 4543              	.LASF19:
 4544 0411 72656738 		.ascii	"reg8\000"
 4544      00
 4545              	.LASF28:
 4546 0416 69646561 		.ascii	"idealDecGain\000"
 4546      6C446563 
 4546      4761696E 
 4546      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 120


 4547              	.LASF33:
 4548 0423 6E6F726D 		.ascii	"normalised\000"
 4548      616C6973 
 4548      656400
 4549              	.LASF90:
 4550 042e 43794861 		.ascii	"CyHalt\000"
 4550      6C7400
 4551              	.LASF96:
 4552 0435 566F6C75 		.ascii	"Volume_ADC_Ext_CP_Clk_SetModeRegister\000"
 4552      6D655F41 
 4552      44435F45 
 4552      78745F43 
 4552      505F436C 
 4553              	.LASF2:
 4554 045b 756E7369 		.ascii	"unsigned char\000"
 4554      676E6564 
 4554      20636861 
 4554      7200
 4555              	.LASF88:
 4556 0469 566F6C75 		.ascii	"Volume_ADC_Offset\000"
 4556      6D655F41 
 4556      44435F4F 
 4556      66667365 
 4556      7400
 4557              	.LASF3:
 4558 047b 73686F72 		.ascii	"short int\000"
 4558      7420696E 
 4558      7400
 4559              	.LASF35:
 4560 0485 67636F72 		.ascii	"gcorTmp\000"
 4560      546D7000 
 4561              	.LASF56:
 4562 048d 566F6C75 		.ascii	"Volume_ADC_StartConvert\000"
 4562      6D655F41 
 4562      44435F53 
 4562      74617274 
 4562      436F6E76 
 4563              	.LASF85:
 4564 04a5 566F6C75 		.ascii	"Volume_ADC_stopConversion\000"
 4564      6D655F41 
 4564      44435F73 
 4564      746F7043 
 4564      6F6E7665 
 4565              	.LASF30:
 4566 04bf 7265736F 		.ascii	"resolution\000"
 4566      6C757469 
 4566      6F6E00
 4567              	.LASF63:
 4568 04ca 566F6C75 		.ascii	"Volume_ADC_GetResult32\000"
 4568      6D655F41 
 4568      44435F47 
 4568      65745265 
 4568      73756C74 
 4569              	.LASF94:
 4570 04e1 566F6C75 		.ascii	"Volume_ADC_Ext_CP_Clk_SetDividerRegister\000"
 4570      6D655F41 
 4570      44435F45 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 121


 4570      78745F43 
 4570      505F436C 
 4571              	.LASF75:
 4572 050a 636F6566 		.ascii	"coefA\000"
 4572      4100
 4573              	.LASF76:
 4574 0510 636F6566 		.ascii	"coefB\000"
 4574      4200
 4575              	.LASF48:
 4576 0516 566F6C75 		.ascii	"Volume_ADC_SetCoherency\000"
 4576      6D655F41 
 4576      44435F53 
 4576      6574436F 
 4576      68657265 
 4577              	.LASF18:
 4578 052e 63686172 		.ascii	"char\000"
 4578      00
 4579              	.LASF55:
 4580 0533 6756616C 		.ascii	"gValue\000"
 4580      756500
 4581              	.LASF22:
 4582 053a 63796973 		.ascii	"cyisraddress\000"
 4582      72616464 
 4582      72657373 
 4582      00
 4583              	.LASF31:
 4584 0547 636F6E66 		.ascii	"config\000"
 4584      696700
 4585              	.LASF25:
 4586 054e 6776616C 		.ascii	"gval\000"
 4586      00
 4587              	.LASF53:
 4588 0553 566F6C75 		.ascii	"Volume_ADC_SetGCOR\000"
 4588      6D655F41 
 4588      44435F53 
 4588      65744743 
 4588      4F5200
 4589              	.LASF78:
 4590 0566 72657374 		.ascii	"restart\000"
 4590      61727400 
 4591              	.LASF52:
 4592 056e 746D7056 		.ascii	"tmpValue\000"
 4592      616C7565 
 4592      00
 4593              	.LASF66:
 4594 0577 566F6C75 		.ascii	"Volume_ADC_SetGain\000"
 4594      6D655F41 
 4594      44435F53 
 4594      65744761 
 4594      696E00
 4595              	.LASF65:
 4596 058a 6F666673 		.ascii	"offset\000"
 4596      657400
 4597              	.LASF89:
 4598 0591 566F6C75 		.ascii	"Volume_ADC_CountsPerVolt\000"
 4598      6D655F41 
 4598      44435F43 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 122


 4598      6F756E74 
 4598      73506572 
 4599              	.LASF80:
 4600 05aa 566F6C75 		.ascii	"Volume_ADC_Read16\000"
 4600      6D655F41 
 4600      44435F52 
 4600      65616431 
 4600      3600
 4601              	.LASF69:
 4602 05bc 61646343 		.ascii	"adcCounts\000"
 4602      6F756E74 
 4602      7300
 4603              	.LASF37:
 4604 05c6 566F6C75 		.ascii	"Volume_ADC_SetDSMRef0Reg\000"
 4604      6D655F41 
 4604      44435F53 
 4604      65744453 
 4604      4D526566 
 4605              	.LASF39:
 4606 05df 656E6162 		.ascii	"enableInterrupts\000"
 4606      6C65496E 
 4606      74657272 
 4606      75707473 
 4606      00
 4607              	.LASF51:
 4608 05f0 73746174 		.ascii	"status\000"
 4608      757300
 4609              	.LASF98:
 4610 05f7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4610      4320342E 
 4610      392E3320 
 4610      32303135 
 4610      30333033 
 4611 062a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4611      20726576 
 4611      6973696F 
 4611      6E203232 
 4611      31323230 
 4612 065d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4612      66756E63 
 4612      74696F6E 
 4612      2D736563 
 4612      74696F6E 
 4613              	.LASF93:
 4614 0685 566F6C75 		.ascii	"Volume_ADC_AMux_Select\000"
 4614      6D655F41 
 4614      44435F41 
 4614      4D75785F 
 4614      53656C65 
 4615              	.LASF50:
 4616 069c 6761696E 		.ascii	"gainAdjust\000"
 4616      41646A75 
 4616      737400
 4617              	.LASF54:
 4618 06a7 566F6C75 		.ascii	"Volume_ADC_ReadGCOR\000"
 4618      6D655F41 
 4618      44435F52 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd2IYv4.s 			page 123


 4618      65616447 
 4618      434F5200 
 4619              	.LASF14:
 4620 06bb 696E7431 		.ascii	"int16\000"
 4620      3600
 4621              	.LASF64:
 4622 06c1 566F6C75 		.ascii	"Volume_ADC_SetOffset\000"
 4622      6D655F41 
 4622      44435F53 
 4622      65744F66 
 4622      66736574 
 4623              	.LASF58:
 4624 06d6 566F6C75 		.ascii	"Volume_ADC_IsEndConversion\000"
 4624      6D655F41 
 4624      44435F49 
 4624      73456E64 
 4624      436F6E76 
 4625              	.LASF47:
 4626 06f1 746D7052 		.ascii	"tmpReg\000"
 4626      656700
 4627              	.LASF61:
 4628 06f8 72657375 		.ascii	"result\000"
 4628      6C7400
 4629              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
