ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"COM_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.COM_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	COM_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	COM_EP_1_ISR, %function
  24              	COM_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\COM_episr.c"
   1:Generated_Source\PSoC5/COM_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/COM_episr.c **** * \file COM_episr.c
   3:Generated_Source\PSoC5/COM_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/COM_episr.c **** *
   5:Generated_Source\PSoC5/COM_episr.c **** * \brief
   6:Generated_Source\PSoC5/COM_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/COM_episr.c **** *
   8:Generated_Source\PSoC5/COM_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/COM_episr.c **** * \copyright
  10:Generated_Source\PSoC5/COM_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/COM_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/COM_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/COM_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/COM_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/COM_episr.c **** 
  16:Generated_Source\PSoC5/COM_episr.c **** #include "COM_pvt.h"
  17:Generated_Source\PSoC5/COM_episr.c **** #include "COM_cydmac.h"
  18:Generated_Source\PSoC5/COM_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/COM_episr.c **** 
  20:Generated_Source\PSoC5/COM_episr.c **** 
  21:Generated_Source\PSoC5/COM_episr.c **** /***************************************
  22:Generated_Source\PSoC5/COM_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/COM_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/COM_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/COM_episr.c **** 
  26:Generated_Source\PSoC5/COM_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/COM_episr.c **** 
  28:Generated_Source\PSoC5/COM_episr.c **** 
  29:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/COM_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 2


  32:Generated_Source\PSoC5/COM_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/COM_episr.c ****     *
  34:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/COM_episr.c ****     *
  36:Generated_Source\PSoC5/COM_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_1_ISR)
  38:Generated_Source\PSoC5/COM_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:Generated_Source\PSoC5/COM_episr.c **** 
  40:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/COM_episr.c **** 
  44:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/COM_episr.c **** 
  46:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/COM_episr.c **** 
  48:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/COM_episr.c ****         {
  51:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/COM_episr.c ****     
  55:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0122     		movs	r2, #1
  34 0002 094B     		ldr	r3, .L3
  35 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/COM_episr.c ****             
  57:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/COM_episr.c ****         */
  61:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP1].addr & COM_DIR_IN))
  63:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/COM_episr.c ****         {
  65:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP1].epCr0;
  36              		.loc 1 66 0
  37 0006 0F3B     		subs	r3, r3, #15
  38 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/COM_episr.c ****             
  68:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP1) != COM_EP_TYPE_ISOC)
  39              		.loc 1 69 0
  40 000a 084B     		ldr	r3, .L3+4
  41 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  42 000e 03F00303 		and	r3, r3, #3
  43 0012 9342     		cmp	r3, r2
  44 0014 04D0     		beq	.L2
  70:Generated_Source\PSoC5/COM_episr.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 3


  71:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP1].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0016 054A     		ldr	r2, .L3+4
  47 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  48 001a 83F08003 		eor	r3, r3, #128
  49 001e D373     		strb	r3, [r2, #15]
  50              	.L2:
  72:Generated_Source\PSoC5/COM_episr.c ****             }
  73:Generated_Source\PSoC5/COM_episr.c **** 
  74:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/COM_episr.c ****             */
  80:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP1].apiEpState = COM_EVENT_PENDING;
  51              		.loc 1 80 0
  52 0020 0122     		movs	r2, #1
  53 0022 024B     		ldr	r3, .L3+4
  54 0024 5A73     		strb	r2, [r3, #13]
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 0B600040 		.word	1073766411
  60 002c 00000000 		.word	COM_EP
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	COM_EP_1_ISR, .-COM_EP_1_ISR
  64              		.section	.text.COM_EP_2_ISR,"ax",%progbits
  65              		.align	2
  66              		.global	COM_EP_2_ISR
  67              		.thumb
  68              		.thumb_func
  69              		.type	COM_EP_2_ISR, %function
  70              	COM_EP_2_ISR:
  71              	.LFB1:
  81:Generated_Source\PSoC5/COM_episr.c ****         }
  82:Generated_Source\PSoC5/COM_episr.c **** 
  83:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/COM_episr.c ****             if (COM_midi_out_ep == COM_EP1)
  87:Generated_Source\PSoC5/COM_episr.c ****             {
  88:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/COM_episr.c ****             }
  90:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/COM_episr.c ****     
  93:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/COM_episr.c **** 
  95:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/COM_episr.c **** 
  97:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/COM_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 4


 101:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/COM_episr.c ****         
 104:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/COM_episr.c ****         }
 106:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/COM_episr.c ****     }
 108:Generated_Source\PSoC5/COM_episr.c **** 
 109:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/COM_episr.c **** 
 111:Generated_Source\PSoC5/COM_episr.c **** 
 112:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_2_ISR
 115:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/COM_episr.c ****     *
 117:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/COM_episr.c ****     *
 119:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_2_ISR)
 121:Generated_Source\PSoC5/COM_episr.c ****     {
  72              		.loc 1 121 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 122:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/COM_episr.c **** 
 126:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/COM_episr.c **** 
 128:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/COM_episr.c **** 
 130:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/COM_episr.c ****         {
 133:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/COM_episr.c **** 
 137:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP2_INTR);
  77              		.loc 1 137 0
  78 0000 0222     		movs	r2, #2
  79 0002 0A4B     		ldr	r3, .L7
  80 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/COM_episr.c **** 
 139:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/COM_episr.c ****         */
 143:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP2].addr & COM_DIR_IN))
 145:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/COM_episr.c ****         {            
 147:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP2].epCr0;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 5


  81              		.loc 1 148 0
  82 0006 0F3B     		subs	r3, r3, #15
  83 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/COM_episr.c ****             
 150:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP2) != COM_EP_TYPE_ISOC)
  84              		.loc 1 151 0
  85 000c 084B     		ldr	r3, .L7+4
  86 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  87 0010 03F00303 		and	r3, r3, #3
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/COM_episr.c ****             {
 153:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP2].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 054A     		ldr	r2, .L7+4
  92 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  93 001c 83F08003 		eor	r3, r3, #128
  94 0020 D376     		strb	r3, [r2, #27]
  95              	.L6:
 154:Generated_Source\PSoC5/COM_episr.c ****             }
 155:Generated_Source\PSoC5/COM_episr.c **** 
 156:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/COM_episr.c ****             */
 162:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP2].apiEpState = COM_EVENT_PENDING;
  96              		.loc 1 162 0
  97 0022 0122     		movs	r2, #1
  98 0024 024B     		ldr	r3, .L7+4
  99 0026 5A76     		strb	r2, [r3, #25]
 100 0028 7047     		bx	lr
 101              	.L8:
 102 002a 00BF     		.align	2
 103              	.L7:
 104 002c 0B600040 		.word	1073766411
 105 0030 00000000 		.word	COM_EP
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	COM_EP_2_ISR, .-COM_EP_2_ISR
 109              		.section	.text.COM_EP_3_ISR,"ax",%progbits
 110              		.align	2
 111              		.global	COM_EP_3_ISR
 112              		.thumb
 113              		.thumb_func
 114              		.type	COM_EP_3_ISR, %function
 115              	COM_EP_3_ISR:
 116              	.LFB2:
 163:Generated_Source\PSoC5/COM_episr.c ****         }
 164:Generated_Source\PSoC5/COM_episr.c **** 
 165:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/COM_episr.c ****             if (COM_midi_out_ep == COM_EP2)
 169:Generated_Source\PSoC5/COM_episr.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 6


 170:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/COM_episr.c ****             }
 172:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/COM_episr.c ****     
 175:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/COM_episr.c **** 
 177:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/COM_episr.c **** 
 179:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/COM_episr.c **** 
 183:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/COM_episr.c ****         
 186:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/COM_episr.c ****         }
 188:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/COM_episr.c ****     }
 190:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/COM_episr.c **** 
 192:Generated_Source\PSoC5/COM_episr.c **** 
 193:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_3_ISR
 196:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/COM_episr.c ****     *
 198:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/COM_episr.c ****     *
 200:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_3_ISR)
 202:Generated_Source\PSoC5/COM_episr.c ****     {
 117              		.loc 1 202 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 203:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/COM_episr.c **** 
 207:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/COM_episr.c **** 
 209:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/COM_episr.c **** 
 211:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/COM_episr.c ****         {
 214:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/COM_episr.c **** 
 218:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP3_INTR);    
 122              		.loc 1 218 0
 123 0000 0422     		movs	r2, #4
 124 0002 0C4B     		ldr	r3, .L11
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 7


 125 0004 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/COM_episr.c **** 
 220:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/COM_episr.c ****         */
 224:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP3].addr & COM_DIR_IN))
 226:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/COM_episr.c ****         {            
 228:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP3].epCr0;
 126              		.loc 1 229 0
 127 0006 0F3B     		subs	r3, r3, #15
 128 0008 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/COM_episr.c **** 
 231:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP3) != COM_EP_TYPE_ISOC)
 129              		.loc 1 232 0
 130 000c 0A4B     		ldr	r3, .L11+4
 131 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 132 0012 03F00303 		and	r3, r3, #3
 133 0016 012B     		cmp	r3, #1
 134 0018 06D0     		beq	.L10
 233:Generated_Source\PSoC5/COM_episr.c ****             {
 234:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP3].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
 135              		.loc 1 234 0
 136 001a 074A     		ldr	r2, .L11+4
 137 001c 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 138 0020 83F08003 		eor	r3, r3, #128
 139 0024 82F82730 		strb	r3, [r2, #39]
 140              	.L10:
 235:Generated_Source\PSoC5/COM_episr.c ****             }
 236:Generated_Source\PSoC5/COM_episr.c **** 
 237:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/COM_episr.c ****             */
 243:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP3].apiEpState = COM_EVENT_PENDING;
 141              		.loc 1 243 0
 142 0028 0122     		movs	r2, #1
 143 002a 034B     		ldr	r3, .L11+4
 144 002c 83F82520 		strb	r2, [r3, #37]
 145 0030 7047     		bx	lr
 146              	.L12:
 147 0032 00BF     		.align	2
 148              	.L11:
 149 0034 0B600040 		.word	1073766411
 150 0038 00000000 		.word	COM_EP
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	COM_EP_3_ISR, .-COM_EP_3_ISR
 154              		.section	.text.COM_EP_4_ISR,"ax",%progbits
 155              		.align	2
 156              		.global	COM_EP_4_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 8


 157              		.thumb
 158              		.thumb_func
 159              		.type	COM_EP_4_ISR, %function
 160              	COM_EP_4_ISR:
 161              	.LFB3:
 244:Generated_Source\PSoC5/COM_episr.c ****         }
 245:Generated_Source\PSoC5/COM_episr.c **** 
 246:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/COM_episr.c ****             if (COM_midi_out_ep == COM_EP3)
 250:Generated_Source\PSoC5/COM_episr.c ****             {
 251:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/COM_episr.c ****             }
 253:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/COM_episr.c **** 
 256:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/COM_episr.c **** 
 258:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/COM_episr.c **** 
 260:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/COM_episr.c **** 
 264:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/COM_episr.c ****         
 267:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/COM_episr.c ****         }
 269:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/COM_episr.c ****     }
 271:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/COM_episr.c **** 
 273:Generated_Source\PSoC5/COM_episr.c **** 
 274:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_4_ISR
 277:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/COM_episr.c ****     *
 279:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/COM_episr.c ****     *
 281:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_4_ISR)
 283:Generated_Source\PSoC5/COM_episr.c ****     {
 162              		.loc 1 283 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 284:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/COM_episr.c **** 
 288:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/COM_episr.c **** 
 290:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 9


 291:Generated_Source\PSoC5/COM_episr.c **** 
 292:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/COM_episr.c ****         {
 295:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/COM_episr.c **** 
 299:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP4_INTR);
 167              		.loc 1 299 0
 168 0000 0822     		movs	r2, #8
 169 0002 0C4B     		ldr	r3, .L15
 170 0004 1A70     		strb	r2, [r3]
 300:Generated_Source\PSoC5/COM_episr.c ****         
 301:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/COM_episr.c ****         */
 305:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP4].addr & COM_DIR_IN))
 307:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/COM_episr.c ****         {
 309:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP4].epCr0;
 171              		.loc 1 310 0
 172 0006 0F3B     		subs	r3, r3, #15
 173 0008 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 311:Generated_Source\PSoC5/COM_episr.c **** 
 312:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP4) != COM_EP_TYPE_ISOC)
 174              		.loc 1 313 0
 175 000c 0A4B     		ldr	r3, .L15+4
 176 000e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 177 0012 03F00303 		and	r3, r3, #3
 178 0016 012B     		cmp	r3, #1
 179 0018 06D0     		beq	.L14
 314:Generated_Source\PSoC5/COM_episr.c ****             {
 315:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP4].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
 180              		.loc 1 315 0
 181 001a 074A     		ldr	r2, .L15+4
 182 001c 92F83330 		ldrb	r3, [r2, #51]	@ zero_extendqisi2
 183 0020 83F08003 		eor	r3, r3, #128
 184 0024 82F83330 		strb	r3, [r2, #51]
 185              	.L14:
 316:Generated_Source\PSoC5/COM_episr.c ****             }
 317:Generated_Source\PSoC5/COM_episr.c **** 
 318:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/COM_episr.c ****             */
 324:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP4].apiEpState = COM_EVENT_PENDING;
 186              		.loc 1 324 0
 187 0028 0122     		movs	r2, #1
 188 002a 034B     		ldr	r3, .L15+4
 189 002c 83F83120 		strb	r2, [r3, #49]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 10


 190 0030 7047     		bx	lr
 191              	.L16:
 192 0032 00BF     		.align	2
 193              	.L15:
 194 0034 0B600040 		.word	1073766411
 195 0038 00000000 		.word	COM_EP
 196              		.cfi_endproc
 197              	.LFE3:
 198              		.size	COM_EP_4_ISR, .-COM_EP_4_ISR
 199              		.section	.text.COM_EP_5_ISR,"ax",%progbits
 200              		.align	2
 201              		.global	COM_EP_5_ISR
 202              		.thumb
 203              		.thumb_func
 204              		.type	COM_EP_5_ISR, %function
 205              	COM_EP_5_ISR:
 206              	.LFB4:
 325:Generated_Source\PSoC5/COM_episr.c ****         }
 326:Generated_Source\PSoC5/COM_episr.c **** 
 327:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/COM_episr.c ****             if(COM_midi_out_ep == COM_EP4)
 331:Generated_Source\PSoC5/COM_episr.c ****             {
 332:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/COM_episr.c ****             }
 334:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/COM_episr.c **** 
 337:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/COM_episr.c **** 
 339:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/COM_episr.c **** 
 341:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/COM_episr.c **** 
 345:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/COM_episr.c ****         
 348:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/COM_episr.c ****         }
 350:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/COM_episr.c ****     }
 352:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/COM_episr.c **** 
 354:Generated_Source\PSoC5/COM_episr.c **** 
 355:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_5_ISR
 358:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/COM_episr.c ****     *
 360:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/COM_episr.c ****     *
 362:Generated_Source\PSoC5/COM_episr.c ****     *
 363:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_5_ISR)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 11


 365:Generated_Source\PSoC5/COM_episr.c ****     {
 207              		.loc 1 365 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 366:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/COM_episr.c **** 
 370:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/COM_episr.c **** 
 372:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/COM_episr.c **** 
 374:Generated_Source\PSoC5/COM_episr.c ****     #if (defined(COM_ENABLE_MIDI_STREAMING) && !defined(COM_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/COM_episr.c ****                  COM_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/COM_episr.c ****         {
 377:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/COM_episr.c **** 
 381:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP5_INTR);
 212              		.loc 1 381 0
 213 0000 1022     		movs	r2, #16
 214 0002 0C4B     		ldr	r3, .L19
 215 0004 1A70     		strb	r2, [r3]
 382:Generated_Source\PSoC5/COM_episr.c ****     
 383:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/COM_episr.c ****         */
 387:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP5].addr & COM_DIR_IN))
 389:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/COM_episr.c ****         {            
 391:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP5].epCr0;
 216              		.loc 1 392 0
 217 0006 0F3B     		subs	r3, r3, #15
 218 0008 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 393:Generated_Source\PSoC5/COM_episr.c **** 
 394:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP5) != COM_EP_TYPE_ISOC)
 219              		.loc 1 395 0
 220 000c 0A4B     		ldr	r3, .L19+4
 221 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 222 0012 03F00303 		and	r3, r3, #3
 223 0016 012B     		cmp	r3, #1
 224 0018 06D0     		beq	.L18
 396:Generated_Source\PSoC5/COM_episr.c ****             {
 397:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP5].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
 225              		.loc 1 397 0
 226 001a 074A     		ldr	r2, .L19+4
 227 001c 92F83F30 		ldrb	r3, [r2, #63]	@ zero_extendqisi2
 228 0020 83F08003 		eor	r3, r3, #128
 229 0024 82F83F30 		strb	r3, [r2, #63]
 230              	.L18:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 12


 398:Generated_Source\PSoC5/COM_episr.c ****             }
 399:Generated_Source\PSoC5/COM_episr.c **** 
 400:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/COM_episr.c ****             */
 406:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP5].apiEpState = COM_EVENT_PENDING;
 231              		.loc 1 406 0
 232 0028 0122     		movs	r2, #1
 233 002a 034B     		ldr	r3, .L19+4
 234 002c 83F83D20 		strb	r2, [r3, #61]
 235 0030 7047     		bx	lr
 236              	.L20:
 237 0032 00BF     		.align	2
 238              	.L19:
 239 0034 0B600040 		.word	1073766411
 240 0038 00000000 		.word	COM_EP
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	COM_EP_5_ISR, .-COM_EP_5_ISR
 244              		.section	.text.COM_EP_6_ISR,"ax",%progbits
 245              		.align	2
 246              		.global	COM_EP_6_ISR
 247              		.thumb
 248              		.thumb_func
 249              		.type	COM_EP_6_ISR, %function
 250              	COM_EP_6_ISR:
 251              	.LFB5:
 407:Generated_Source\PSoC5/COM_episr.c ****         }
 408:Generated_Source\PSoC5/COM_episr.c **** 
 409:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/COM_episr.c ****             if (COM_midi_out_ep == COM_EP5)
 413:Generated_Source\PSoC5/COM_episr.c ****             {
 414:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/COM_episr.c ****             }
 416:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/COM_episr.c **** 
 419:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/COM_episr.c **** 
 421:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/COM_episr.c **** 
 423:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/COM_episr.c **** 
 427:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/COM_episr.c ****         
 430:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/COM_episr.c ****         }
 432:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/COM_episr.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 13


 434:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/COM_episr.c **** 
 436:Generated_Source\PSoC5/COM_episr.c **** 
 437:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_6_ISR
 440:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/COM_episr.c ****     *
 442:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/COM_episr.c ****     *
 444:Generated_Source\PSoC5/COM_episr.c ****     *
 445:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_6_ISR)
 447:Generated_Source\PSoC5/COM_episr.c ****     {
 252              		.loc 1 447 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 448:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/COM_episr.c **** 
 452:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/COM_episr.c **** 
 454:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/COM_episr.c **** 
 456:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/COM_episr.c ****         {
 459:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/COM_episr.c **** 
 463:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP6_INTR);
 257              		.loc 1 463 0
 258 0000 2022     		movs	r2, #32
 259 0002 0C4B     		ldr	r3, .L23
 260 0004 1A70     		strb	r2, [r3]
 464:Generated_Source\PSoC5/COM_episr.c ****         
 465:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/COM_episr.c ****         */
 469:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP6].addr & COM_DIR_IN))
 471:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/COM_episr.c ****         {
 473:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP6].epCr0;
 261              		.loc 1 474 0
 262 0006 0F3B     		subs	r3, r3, #15
 263 0008 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 475:Generated_Source\PSoC5/COM_episr.c **** 
 476:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP6) != COM_EP_TYPE_ISOC)
 264              		.loc 1 477 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 14


 265 000c 0A4B     		ldr	r3, .L23+4
 266 000e 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 267 0012 03F00303 		and	r3, r3, #3
 268 0016 012B     		cmp	r3, #1
 269 0018 06D0     		beq	.L22
 478:Generated_Source\PSoC5/COM_episr.c ****             {
 479:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP6].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
 270              		.loc 1 479 0
 271 001a 074A     		ldr	r2, .L23+4
 272 001c 92F84B30 		ldrb	r3, [r2, #75]	@ zero_extendqisi2
 273 0020 83F08003 		eor	r3, r3, #128
 274 0024 82F84B30 		strb	r3, [r2, #75]
 275              	.L22:
 480:Generated_Source\PSoC5/COM_episr.c ****             }
 481:Generated_Source\PSoC5/COM_episr.c ****             
 482:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/COM_episr.c ****             */
 488:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP6].apiEpState = COM_EVENT_PENDING;
 276              		.loc 1 488 0
 277 0028 0122     		movs	r2, #1
 278 002a 034B     		ldr	r3, .L23+4
 279 002c 83F84920 		strb	r2, [r3, #73]
 280 0030 7047     		bx	lr
 281              	.L24:
 282 0032 00BF     		.align	2
 283              	.L23:
 284 0034 0B600040 		.word	1073766411
 285 0038 00000000 		.word	COM_EP
 286              		.cfi_endproc
 287              	.LFE5:
 288              		.size	COM_EP_6_ISR, .-COM_EP_6_ISR
 289              		.section	.text.COM_BUS_RESET_ISR,"ax",%progbits
 290              		.align	2
 291              		.global	COM_BUS_RESET_ISR
 292              		.thumb
 293              		.thumb_func
 294              		.type	COM_BUS_RESET_ISR, %function
 295              	COM_BUS_RESET_ISR:
 296              	.LFB6:
 489:Generated_Source\PSoC5/COM_episr.c ****         }
 490:Generated_Source\PSoC5/COM_episr.c **** 
 491:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/COM_episr.c ****             if (COM_midi_out_ep == COM_EP6)
 495:Generated_Source\PSoC5/COM_episr.c ****             {
 496:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/COM_episr.c ****             }
 498:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/COM_episr.c **** 
 501:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/COM_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 15


 503:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/COM_episr.c **** 
 505:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/COM_episr.c **** 
 509:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/COM_episr.c ****         
 512:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/COM_episr.c ****         }
 514:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/COM_episr.c ****     }
 516:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/COM_episr.c **** 
 518:Generated_Source\PSoC5/COM_episr.c **** 
 519:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_7_ISR
 522:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/COM_episr.c ****     *
 524:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/COM_episr.c ****     *
 526:Generated_Source\PSoC5/COM_episr.c ****     *
 527:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_7_ISR)
 529:Generated_Source\PSoC5/COM_episr.c ****     {
 530:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/COM_episr.c **** 
 534:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/COM_episr.c **** 
 536:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/COM_episr.c **** 
 538:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/COM_episr.c ****         {
 541:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/COM_episr.c ****     
 545:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/COM_episr.c ****         
 547:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/COM_episr.c ****         */
 551:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP7].addr & COM_DIR_IN))
 553:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/COM_episr.c ****         {           
 555:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP7].epCr0;
 557:Generated_Source\PSoC5/COM_episr.c **** 
 558:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP7) != COM_EP_TYPE_ISOC)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 16


 560:Generated_Source\PSoC5/COM_episr.c ****             {
 561:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP7].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/COM_episr.c ****             }
 563:Generated_Source\PSoC5/COM_episr.c ****             
 564:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/COM_episr.c ****             */
 570:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP7].apiEpState = COM_EVENT_PENDING;
 571:Generated_Source\PSoC5/COM_episr.c ****         }
 572:Generated_Source\PSoC5/COM_episr.c **** 
 573:Generated_Source\PSoC5/COM_episr.c **** 
 574:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/COM_episr.c ****             if(COM_midi_out_ep == COM_EP7)
 578:Generated_Source\PSoC5/COM_episr.c ****             {
 579:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/COM_episr.c ****             }
 581:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/COM_episr.c **** 
 584:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/COM_episr.c **** 
 586:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/COM_episr.c **** 
 588:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/COM_episr.c **** 
 592:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/COM_episr.c ****         
 595:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/COM_episr.c ****         }
 597:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/COM_episr.c ****     }
 599:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/COM_episr.c **** 
 601:Generated_Source\PSoC5/COM_episr.c **** 
 602:Generated_Source\PSoC5/COM_episr.c **** #if (COM_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_EP_8_ISR
 605:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/COM_episr.c ****     *
 607:Generated_Source\PSoC5/COM_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/COM_episr.c ****     *
 609:Generated_Source\PSoC5/COM_episr.c ****     *
 610:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_EP_8_ISR)
 612:Generated_Source\PSoC5/COM_episr.c ****     {
 613:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/COM_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 17


 617:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/COM_episr.c **** 
 619:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/COM_episr.c **** 
 621:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/COM_episr.c ****         {
 624:Generated_Source\PSoC5/COM_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/COM_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/COM_episr.c **** 
 628:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieEpInterruptSource(COM_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/COM_episr.c ****         
 630:Generated_Source\PSoC5/COM_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/COM_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/COM_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/COM_episr.c ****         */
 634:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/COM_episr.c ****         if (0u != (COM_EP[COM_EP8].addr & COM_DIR_IN))
 636:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/COM_episr.c ****         {
 638:Generated_Source\PSoC5/COM_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/COM_episr.c ****             (void) COM_SIE_EP_BASE.sieEp[COM_EP8].epCr0;
 640:Generated_Source\PSoC5/COM_episr.c **** 
 641:Generated_Source\PSoC5/COM_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/COM_episr.c ****             if (COM_GET_EP_TYPE(COM_EP8) != COM_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/COM_episr.c ****             {
 644:Generated_Source\PSoC5/COM_episr.c ****                 COM_EP[COM_EP8].epToggle ^= COM_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/COM_episr.c ****             }
 646:Generated_Source\PSoC5/COM_episr.c **** 
 647:Generated_Source\PSoC5/COM_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/COM_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/COM_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/COM_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/COM_episr.c ****             */
 653:Generated_Source\PSoC5/COM_episr.c ****             COM_EP[COM_EP8].apiEpState = COM_EVENT_PENDING;
 654:Generated_Source\PSoC5/COM_episr.c ****         }
 655:Generated_Source\PSoC5/COM_episr.c **** 
 656:Generated_Source\PSoC5/COM_episr.c ****     #if (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/COM_episr.c ****         #if (defined(COM_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/COM_episr.c ****             !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/COM_episr.c ****             if (COM_midi_out_ep == COM_EP8)
 660:Generated_Source\PSoC5/COM_episr.c ****             {
 661:Generated_Source\PSoC5/COM_episr.c ****                 COM_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/COM_episr.c ****             }
 663:Generated_Source\PSoC5/COM_episr.c ****         #endif /* (COM_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (!(CY_PSOC4 && COM_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/COM_episr.c **** 
 666:Generated_Source\PSoC5/COM_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/COM_episr.c **** 
 668:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/COM_episr.c **** 
 670:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/COM_episr.c ****         COM_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/COM_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 18


 674:Generated_Source\PSoC5/COM_episr.c ****     #if (CY_PSOC3 && defined(COM_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/COM_episr.c ****         !defined(COM_MAIN_SERVICE_MIDI_OUT) && COM_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/COM_episr.c ****         
 677:Generated_Source\PSoC5/COM_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/COM_episr.c ****         }
 679:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (CY_PSOC3 && COM_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/COM_episr.c ****     }
 681:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/COM_episr.c **** 
 683:Generated_Source\PSoC5/COM_episr.c **** 
 684:Generated_Source\PSoC5/COM_episr.c **** #if (COM_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/COM_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/COM_episr.c ****     * Function Name: COM_SOF_ISR
 687:Generated_Source\PSoC5/COM_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/COM_episr.c ****     *
 689:Generated_Source\PSoC5/COM_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/COM_episr.c ****     *
 691:Generated_Source\PSoC5/COM_episr.c ****     *
 692:Generated_Source\PSoC5/COM_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/COM_episr.c ****     CY_ISR(COM_SOF_ISR)
 694:Generated_Source\PSoC5/COM_episr.c ****     {
 695:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/COM_episr.c ****         COM_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/COM_episr.c **** 
 699:Generated_Source\PSoC5/COM_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/COM_episr.c **** 
 701:Generated_Source\PSoC5/COM_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/COM_episr.c **** 
 703:Generated_Source\PSoC5/COM_episr.c ****         COM_ClearSieInterruptSource(COM_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/COM_episr.c **** 
 705:Generated_Source\PSoC5/COM_episr.c ****     #ifdef COM_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/COM_episr.c ****         COM_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/COM_episr.c ****     #endif /* (COM_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/COM_episr.c ****     }
 709:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/COM_episr.c **** 
 711:Generated_Source\PSoC5/COM_episr.c **** 
 712:Generated_Source\PSoC5/COM_episr.c **** #if (COM_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/COM_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/COM_episr.c **** * Function Name: COM_BUS_RESET_ISR
 715:Generated_Source\PSoC5/COM_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/COM_episr.c **** *
 717:Generated_Source\PSoC5/COM_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/COM_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/COM_episr.c **** *
 720:Generated_Source\PSoC5/COM_episr.c **** *
 721:Generated_Source\PSoC5/COM_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/COM_episr.c **** CY_ISR(COM_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/COM_episr.c **** {
 297              		.loc 1 723 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 19


 304              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/COM_episr.c **** #ifdef COM_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/COM_episr.c ****     COM_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/COM_episr.c **** #endif /* (COM_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/COM_episr.c **** 
 728:Generated_Source\PSoC5/COM_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/COM_episr.c **** 
 730:Generated_Source\PSoC5/COM_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/COM_episr.c **** 
 732:Generated_Source\PSoC5/COM_episr.c ****     COM_ClearSieInterruptSource(COM_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/COM_episr.c **** 
 734:Generated_Source\PSoC5/COM_episr.c ****     COM_ReInitComponent();
 305              		.loc 1 734 0
 306 0002 FFF7FEFF 		bl	COM_ReInitComponent
 307              	.LVL0:
 308 0006 08BD     		pop	{r3, pc}
 309              		.cfi_endproc
 310              	.LFE6:
 311              		.size	COM_BUS_RESET_ISR, .-COM_BUS_RESET_ISR
 312              		.text
 313              	.Letext0:
 314              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 315              		.file 3 "Generated_Source\\PSoC5\\COM.h"
 316              		.file 4 "Generated_Source\\PSoC5\\COM_pvt.h"
 317              		.section	.debug_info,"",%progbits
 318              	.Ldebug_info0:
 319 0000 64020000 		.4byte	0x264
 320 0004 0400     		.2byte	0x4
 321 0006 00000000 		.4byte	.Ldebug_abbrev0
 322 000a 04       		.byte	0x4
 323 000b 01       		.uleb128 0x1
 324 000c 5B010000 		.4byte	.LASF38
 325 0010 01       		.byte	0x1
 326 0011 0D010000 		.4byte	.LASF39
 327 0015 35000000 		.4byte	.LASF40
 328 0019 00000000 		.4byte	.Ldebug_ranges0+0
 329 001d 00000000 		.4byte	0
 330 0021 00000000 		.4byte	.Ldebug_line0
 331 0025 02       		.uleb128 0x2
 332 0026 01       		.byte	0x1
 333 0027 06       		.byte	0x6
 334 0028 B9020000 		.4byte	.LASF0
 335 002c 02       		.uleb128 0x2
 336 002d 01       		.byte	0x1
 337 002e 08       		.byte	0x8
 338 002f AB000000 		.4byte	.LASF1
 339 0033 02       		.uleb128 0x2
 340 0034 02       		.byte	0x2
 341 0035 05       		.byte	0x5
 342 0036 7F020000 		.4byte	.LASF2
 343 003a 02       		.uleb128 0x2
 344 003b 02       		.byte	0x2
 345 003c 07       		.byte	0x7
 346 003d C5020000 		.4byte	.LASF3
 347 0041 02       		.uleb128 0x2
 348 0042 04       		.byte	0x4
 349 0043 05       		.byte	0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 20


 350 0044 B0020000 		.4byte	.LASF4
 351 0048 02       		.uleb128 0x2
 352 0049 04       		.byte	0x4
 353 004a 07       		.byte	0x7
 354 004b DE000000 		.4byte	.LASF5
 355 004f 02       		.uleb128 0x2
 356 0050 08       		.byte	0x8
 357 0051 05       		.byte	0x5
 358 0052 61020000 		.4byte	.LASF6
 359 0056 02       		.uleb128 0x2
 360 0057 08       		.byte	0x8
 361 0058 07       		.byte	0x7
 362 0059 23020000 		.4byte	.LASF7
 363 005d 03       		.uleb128 0x3
 364 005e 04       		.byte	0x4
 365 005f 05       		.byte	0x5
 366 0060 696E7400 		.ascii	"int\000"
 367 0064 02       		.uleb128 0x2
 368 0065 04       		.byte	0x4
 369 0066 07       		.byte	0x7
 370 0067 09020000 		.4byte	.LASF8
 371 006b 04       		.uleb128 0x4
 372 006c 89020000 		.4byte	.LASF9
 373 0070 02       		.byte	0x2
 374 0071 9201     		.2byte	0x192
 375 0073 2C000000 		.4byte	0x2c
 376 0077 04       		.uleb128 0x4
 377 0078 49010000 		.4byte	.LASF10
 378 007c 02       		.byte	0x2
 379 007d 9301     		.2byte	0x193
 380 007f 3A000000 		.4byte	0x3a
 381 0083 02       		.uleb128 0x2
 382 0084 04       		.byte	0x4
 383 0085 04       		.byte	0x4
 384 0086 10000000 		.4byte	.LASF11
 385 008a 02       		.uleb128 0x2
 386 008b 08       		.byte	0x8
 387 008c 04       		.byte	0x4
 388 008d 30010000 		.4byte	.LASF12
 389 0091 02       		.uleb128 0x2
 390 0092 01       		.byte	0x1
 391 0093 08       		.byte	0x8
 392 0094 6F020000 		.4byte	.LASF13
 393 0098 04       		.uleb128 0x4
 394 0099 CC000000 		.4byte	.LASF14
 395 009d 02       		.byte	0x2
 396 009e 3C02     		.2byte	0x23c
 397 00a0 A4000000 		.4byte	0xa4
 398 00a4 05       		.uleb128 0x5
 399 00a5 6B000000 		.4byte	0x6b
 400 00a9 02       		.uleb128 0x2
 401 00aa 04       		.byte	0x4
 402 00ab 07       		.byte	0x7
 403 00ac 51020000 		.4byte	.LASF15
 404 00b0 06       		.uleb128 0x6
 405 00b1 0C       		.byte	0xc
 406 00b2 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 21


 407 00b3 8D       		.byte	0x8d
 408 00b4 25010000 		.4byte	0x125
 409 00b8 07       		.uleb128 0x7
 410 00b9 37010000 		.4byte	.LASF16
 411 00bd 03       		.byte	0x3
 412 00be 8F       		.byte	0x8f
 413 00bf 6B000000 		.4byte	0x6b
 414 00c3 00       		.byte	0
 415 00c4 07       		.uleb128 0x7
 416 00c5 50010000 		.4byte	.LASF17
 417 00c9 03       		.byte	0x3
 418 00ca 90       		.byte	0x90
 419 00cb 6B000000 		.4byte	0x6b
 420 00cf 01       		.byte	0x1
 421 00d0 07       		.uleb128 0x7
 422 00d1 47020000 		.4byte	.LASF18
 423 00d5 03       		.byte	0x3
 424 00d6 91       		.byte	0x91
 425 00d7 6B000000 		.4byte	0x6b
 426 00db 02       		.byte	0x2
 427 00dc 07       		.uleb128 0x7
 428 00dd A2000000 		.4byte	.LASF19
 429 00e1 03       		.byte	0x3
 430 00e2 92       		.byte	0x92
 431 00e3 6B000000 		.4byte	0x6b
 432 00e7 03       		.byte	0x3
 433 00e8 07       		.uleb128 0x7
 434 00e9 F0000000 		.4byte	.LASF20
 435 00ed 03       		.byte	0x3
 436 00ee 93       		.byte	0x93
 437 00ef 6B000000 		.4byte	0x6b
 438 00f3 04       		.byte	0x4
 439 00f4 07       		.uleb128 0x7
 440 00f5 5A020000 		.4byte	.LASF21
 441 00f9 03       		.byte	0x3
 442 00fa 94       		.byte	0x94
 443 00fb 6B000000 		.4byte	0x6b
 444 00ff 05       		.byte	0x5
 445 0100 07       		.uleb128 0x7
 446 0101 3E010000 		.4byte	.LASF22
 447 0105 03       		.byte	0x3
 448 0106 95       		.byte	0x95
 449 0107 77000000 		.4byte	0x77
 450 010b 06       		.byte	0x6
 451 010c 07       		.uleb128 0x7
 452 010d 74020000 		.4byte	.LASF23
 453 0111 03       		.byte	0x3
 454 0112 96       		.byte	0x96
 455 0113 77000000 		.4byte	0x77
 456 0117 08       		.byte	0x8
 457 0118 07       		.uleb128 0x7
 458 0119 00000000 		.4byte	.LASF24
 459 011d 03       		.byte	0x3
 460 011e 97       		.byte	0x97
 461 011f 6B000000 		.4byte	0x6b
 462 0123 0A       		.byte	0xa
 463 0124 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 22


 464 0125 08       		.uleb128 0x8
 465 0126 F6010000 		.4byte	.LASF25
 466 012a 03       		.byte	0x3
 467 012b 98       		.byte	0x98
 468 012c B0000000 		.4byte	0xb0
 469 0130 06       		.uleb128 0x6
 470 0131 10       		.byte	0x10
 471 0132 03       		.byte	0x3
 472 0133 D4       		.byte	0xd4
 473 0134 69010000 		.4byte	0x169
 474 0138 07       		.uleb128 0x7
 475 0139 94000000 		.4byte	.LASF26
 476 013d 03       		.byte	0x3
 477 013e D6       		.byte	0xd6
 478 013f 6B000000 		.4byte	0x6b
 479 0143 00       		.byte	0
 480 0144 07       		.uleb128 0x7
 481 0145 9B000000 		.4byte	.LASF27
 482 0149 03       		.byte	0x3
 483 014a D7       		.byte	0xd7
 484 014b 6B000000 		.4byte	0x6b
 485 014f 01       		.byte	0x1
 486 0150 07       		.uleb128 0x7
 487 0151 0A000000 		.4byte	.LASF28
 488 0155 03       		.byte	0x3
 489 0156 D8       		.byte	0xd8
 490 0157 6B000000 		.4byte	0x6b
 491 015b 02       		.byte	0x2
 492 015c 09       		.uleb128 0x9
 493 015d 67617000 		.ascii	"gap\000"
 494 0161 03       		.byte	0x3
 495 0162 D9       		.byte	0xd9
 496 0163 69010000 		.4byte	0x169
 497 0167 03       		.byte	0x3
 498 0168 00       		.byte	0
 499 0169 0A       		.uleb128 0xa
 500 016a 6B000000 		.4byte	0x6b
 501 016e 79010000 		.4byte	0x179
 502 0172 0B       		.uleb128 0xb
 503 0173 A9000000 		.4byte	0xa9
 504 0177 0C       		.byte	0xc
 505 0178 00       		.byte	0
 506 0179 08       		.uleb128 0x8
 507 017a FB000000 		.4byte	.LASF29
 508 017e 03       		.byte	0x3
 509 017f DA       		.byte	0xda
 510 0180 30010000 		.4byte	0x130
 511 0184 0C       		.uleb128 0xc
 512 0185 90       		.byte	0x90
 513 0186 03       		.byte	0x3
 514 0187 0E01     		.2byte	0x10e
 515 0189 9B010000 		.4byte	0x19b
 516 018d 0D       		.uleb128 0xd
 517 018e F5000000 		.4byte	.LASF30
 518 0192 03       		.byte	0x3
 519 0193 1001     		.2byte	0x110
 520 0195 9B010000 		.4byte	0x19b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 23


 521 0199 00       		.byte	0
 522 019a 00       		.byte	0
 523 019b 0A       		.uleb128 0xa
 524 019c 79010000 		.4byte	0x179
 525 01a0 AB010000 		.4byte	0x1ab
 526 01a4 0B       		.uleb128 0xb
 527 01a5 A9000000 		.4byte	0xa9
 528 01a9 08       		.byte	0x8
 529 01aa 00       		.byte	0
 530 01ab 04       		.uleb128 0x4
 531 01ac B9000000 		.4byte	.LASF31
 532 01b0 03       		.byte	0x3
 533 01b1 1101     		.2byte	0x111
 534 01b3 84010000 		.4byte	0x184
 535 01b7 0E       		.uleb128 0xe
 536 01b8 3A020000 		.4byte	.LASF32
 537 01bc 01       		.byte	0x1
 538 01bd 25       		.byte	0x25
 539 01be 00000000 		.4byte	.LFB0
 540 01c2 30000000 		.4byte	.LFE0-.LFB0
 541 01c6 01       		.uleb128 0x1
 542 01c7 9C       		.byte	0x9c
 543 01c8 0E       		.uleb128 0xe
 544 01c9 8F020000 		.4byte	.LASF33
 545 01cd 01       		.byte	0x1
 546 01ce 78       		.byte	0x78
 547 01cf 00000000 		.4byte	.LFB1
 548 01d3 34000000 		.4byte	.LFE1-.LFB1
 549 01d7 01       		.uleb128 0x1
 550 01d8 9C       		.byte	0x9c
 551 01d9 0E       		.uleb128 0xe
 552 01da 16000000 		.4byte	.LASF34
 553 01de 01       		.byte	0x1
 554 01df C9       		.byte	0xc9
 555 01e0 00000000 		.4byte	.LFB2
 556 01e4 3C000000 		.4byte	.LFE2-.LFB2
 557 01e8 01       		.uleb128 0x1
 558 01e9 9C       		.byte	0x9c
 559 01ea 0F       		.uleb128 0xf
 560 01eb D1000000 		.4byte	.LASF35
 561 01ef 01       		.byte	0x1
 562 01f0 1A01     		.2byte	0x11a
 563 01f2 00000000 		.4byte	.LFB3
 564 01f6 3C000000 		.4byte	.LFE3-.LFB3
 565 01fa 01       		.uleb128 0x1
 566 01fb 9C       		.byte	0x9c
 567 01fc 0F       		.uleb128 0xf
 568 01fd 16020000 		.4byte	.LASF36
 569 0201 01       		.byte	0x1
 570 0202 6C01     		.2byte	0x16c
 571 0204 00000000 		.4byte	.LFB4
 572 0208 3C000000 		.4byte	.LFE4-.LFB4
 573 020c 01       		.uleb128 0x1
 574 020d 9C       		.byte	0x9c
 575 020e 0F       		.uleb128 0xf
 576 020f E9010000 		.4byte	.LASF37
 577 0213 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 24


 578 0214 BE01     		.2byte	0x1be
 579 0216 00000000 		.4byte	.LFB5
 580 021a 3C000000 		.4byte	.LFE5-.LFB5
 581 021e 01       		.uleb128 0x1
 582 021f 9C       		.byte	0x9c
 583 0220 10       		.uleb128 0x10
 584 0221 23000000 		.4byte	.LASF41
 585 0225 01       		.byte	0x1
 586 0226 D202     		.2byte	0x2d2
 587 0228 00000000 		.4byte	.LFB6
 588 022c 08000000 		.4byte	.LFE6-.LFB6
 589 0230 01       		.uleb128 0x1
 590 0231 9C       		.byte	0x9c
 591 0232 40020000 		.4byte	0x240
 592 0236 11       		.uleb128 0x11
 593 0237 06000000 		.4byte	.LVL0
 594 023b 60020000 		.4byte	0x260
 595 023f 00       		.byte	0
 596 0240 0A       		.uleb128 0xa
 597 0241 25010000 		.4byte	0x125
 598 0245 50020000 		.4byte	0x250
 599 0249 0B       		.uleb128 0xb
 600 024a A9000000 		.4byte	0xa9
 601 024e 08       		.byte	0x8
 602 024f 00       		.byte	0
 603 0250 12       		.uleb128 0x12
 604 0251 8D000000 		.4byte	.LASF42
 605 0255 04       		.byte	0x4
 606 0256 79       		.byte	0x79
 607 0257 5B020000 		.4byte	0x25b
 608 025b 05       		.uleb128 0x5
 609 025c 40020000 		.4byte	0x240
 610 0260 13       		.uleb128 0x13
 611 0261 9C020000 		.4byte	.LASF43
 612 0265 04       		.byte	0x4
 613 0266 A4       		.byte	0xa4
 614 0267 00       		.byte	0
 615              		.section	.debug_abbrev,"",%progbits
 616              	.Ldebug_abbrev0:
 617 0000 01       		.uleb128 0x1
 618 0001 11       		.uleb128 0x11
 619 0002 01       		.byte	0x1
 620 0003 25       		.uleb128 0x25
 621 0004 0E       		.uleb128 0xe
 622 0005 13       		.uleb128 0x13
 623 0006 0B       		.uleb128 0xb
 624 0007 03       		.uleb128 0x3
 625 0008 0E       		.uleb128 0xe
 626 0009 1B       		.uleb128 0x1b
 627 000a 0E       		.uleb128 0xe
 628 000b 55       		.uleb128 0x55
 629 000c 17       		.uleb128 0x17
 630 000d 11       		.uleb128 0x11
 631 000e 01       		.uleb128 0x1
 632 000f 10       		.uleb128 0x10
 633 0010 17       		.uleb128 0x17
 634 0011 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 25


 635 0012 00       		.byte	0
 636 0013 02       		.uleb128 0x2
 637 0014 24       		.uleb128 0x24
 638 0015 00       		.byte	0
 639 0016 0B       		.uleb128 0xb
 640 0017 0B       		.uleb128 0xb
 641 0018 3E       		.uleb128 0x3e
 642 0019 0B       		.uleb128 0xb
 643 001a 03       		.uleb128 0x3
 644 001b 0E       		.uleb128 0xe
 645 001c 00       		.byte	0
 646 001d 00       		.byte	0
 647 001e 03       		.uleb128 0x3
 648 001f 24       		.uleb128 0x24
 649 0020 00       		.byte	0
 650 0021 0B       		.uleb128 0xb
 651 0022 0B       		.uleb128 0xb
 652 0023 3E       		.uleb128 0x3e
 653 0024 0B       		.uleb128 0xb
 654 0025 03       		.uleb128 0x3
 655 0026 08       		.uleb128 0x8
 656 0027 00       		.byte	0
 657 0028 00       		.byte	0
 658 0029 04       		.uleb128 0x4
 659 002a 16       		.uleb128 0x16
 660 002b 00       		.byte	0
 661 002c 03       		.uleb128 0x3
 662 002d 0E       		.uleb128 0xe
 663 002e 3A       		.uleb128 0x3a
 664 002f 0B       		.uleb128 0xb
 665 0030 3B       		.uleb128 0x3b
 666 0031 05       		.uleb128 0x5
 667 0032 49       		.uleb128 0x49
 668 0033 13       		.uleb128 0x13
 669 0034 00       		.byte	0
 670 0035 00       		.byte	0
 671 0036 05       		.uleb128 0x5
 672 0037 35       		.uleb128 0x35
 673 0038 00       		.byte	0
 674 0039 49       		.uleb128 0x49
 675 003a 13       		.uleb128 0x13
 676 003b 00       		.byte	0
 677 003c 00       		.byte	0
 678 003d 06       		.uleb128 0x6
 679 003e 13       		.uleb128 0x13
 680 003f 01       		.byte	0x1
 681 0040 0B       		.uleb128 0xb
 682 0041 0B       		.uleb128 0xb
 683 0042 3A       		.uleb128 0x3a
 684 0043 0B       		.uleb128 0xb
 685 0044 3B       		.uleb128 0x3b
 686 0045 0B       		.uleb128 0xb
 687 0046 01       		.uleb128 0x1
 688 0047 13       		.uleb128 0x13
 689 0048 00       		.byte	0
 690 0049 00       		.byte	0
 691 004a 07       		.uleb128 0x7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 26


 692 004b 0D       		.uleb128 0xd
 693 004c 00       		.byte	0
 694 004d 03       		.uleb128 0x3
 695 004e 0E       		.uleb128 0xe
 696 004f 3A       		.uleb128 0x3a
 697 0050 0B       		.uleb128 0xb
 698 0051 3B       		.uleb128 0x3b
 699 0052 0B       		.uleb128 0xb
 700 0053 49       		.uleb128 0x49
 701 0054 13       		.uleb128 0x13
 702 0055 38       		.uleb128 0x38
 703 0056 0B       		.uleb128 0xb
 704 0057 00       		.byte	0
 705 0058 00       		.byte	0
 706 0059 08       		.uleb128 0x8
 707 005a 16       		.uleb128 0x16
 708 005b 00       		.byte	0
 709 005c 03       		.uleb128 0x3
 710 005d 0E       		.uleb128 0xe
 711 005e 3A       		.uleb128 0x3a
 712 005f 0B       		.uleb128 0xb
 713 0060 3B       		.uleb128 0x3b
 714 0061 0B       		.uleb128 0xb
 715 0062 49       		.uleb128 0x49
 716 0063 13       		.uleb128 0x13
 717 0064 00       		.byte	0
 718 0065 00       		.byte	0
 719 0066 09       		.uleb128 0x9
 720 0067 0D       		.uleb128 0xd
 721 0068 00       		.byte	0
 722 0069 03       		.uleb128 0x3
 723 006a 08       		.uleb128 0x8
 724 006b 3A       		.uleb128 0x3a
 725 006c 0B       		.uleb128 0xb
 726 006d 3B       		.uleb128 0x3b
 727 006e 0B       		.uleb128 0xb
 728 006f 49       		.uleb128 0x49
 729 0070 13       		.uleb128 0x13
 730 0071 38       		.uleb128 0x38
 731 0072 0B       		.uleb128 0xb
 732 0073 00       		.byte	0
 733 0074 00       		.byte	0
 734 0075 0A       		.uleb128 0xa
 735 0076 01       		.uleb128 0x1
 736 0077 01       		.byte	0x1
 737 0078 49       		.uleb128 0x49
 738 0079 13       		.uleb128 0x13
 739 007a 01       		.uleb128 0x1
 740 007b 13       		.uleb128 0x13
 741 007c 00       		.byte	0
 742 007d 00       		.byte	0
 743 007e 0B       		.uleb128 0xb
 744 007f 21       		.uleb128 0x21
 745 0080 00       		.byte	0
 746 0081 49       		.uleb128 0x49
 747 0082 13       		.uleb128 0x13
 748 0083 2F       		.uleb128 0x2f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 27


 749 0084 0B       		.uleb128 0xb
 750 0085 00       		.byte	0
 751 0086 00       		.byte	0
 752 0087 0C       		.uleb128 0xc
 753 0088 13       		.uleb128 0x13
 754 0089 01       		.byte	0x1
 755 008a 0B       		.uleb128 0xb
 756 008b 0B       		.uleb128 0xb
 757 008c 3A       		.uleb128 0x3a
 758 008d 0B       		.uleb128 0xb
 759 008e 3B       		.uleb128 0x3b
 760 008f 05       		.uleb128 0x5
 761 0090 01       		.uleb128 0x1
 762 0091 13       		.uleb128 0x13
 763 0092 00       		.byte	0
 764 0093 00       		.byte	0
 765 0094 0D       		.uleb128 0xd
 766 0095 0D       		.uleb128 0xd
 767 0096 00       		.byte	0
 768 0097 03       		.uleb128 0x3
 769 0098 0E       		.uleb128 0xe
 770 0099 3A       		.uleb128 0x3a
 771 009a 0B       		.uleb128 0xb
 772 009b 3B       		.uleb128 0x3b
 773 009c 05       		.uleb128 0x5
 774 009d 49       		.uleb128 0x49
 775 009e 13       		.uleb128 0x13
 776 009f 38       		.uleb128 0x38
 777 00a0 0B       		.uleb128 0xb
 778 00a1 00       		.byte	0
 779 00a2 00       		.byte	0
 780 00a3 0E       		.uleb128 0xe
 781 00a4 2E       		.uleb128 0x2e
 782 00a5 00       		.byte	0
 783 00a6 3F       		.uleb128 0x3f
 784 00a7 19       		.uleb128 0x19
 785 00a8 03       		.uleb128 0x3
 786 00a9 0E       		.uleb128 0xe
 787 00aa 3A       		.uleb128 0x3a
 788 00ab 0B       		.uleb128 0xb
 789 00ac 3B       		.uleb128 0x3b
 790 00ad 0B       		.uleb128 0xb
 791 00ae 27       		.uleb128 0x27
 792 00af 19       		.uleb128 0x19
 793 00b0 11       		.uleb128 0x11
 794 00b1 01       		.uleb128 0x1
 795 00b2 12       		.uleb128 0x12
 796 00b3 06       		.uleb128 0x6
 797 00b4 40       		.uleb128 0x40
 798 00b5 18       		.uleb128 0x18
 799 00b6 9742     		.uleb128 0x2117
 800 00b8 19       		.uleb128 0x19
 801 00b9 00       		.byte	0
 802 00ba 00       		.byte	0
 803 00bb 0F       		.uleb128 0xf
 804 00bc 2E       		.uleb128 0x2e
 805 00bd 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 28


 806 00be 3F       		.uleb128 0x3f
 807 00bf 19       		.uleb128 0x19
 808 00c0 03       		.uleb128 0x3
 809 00c1 0E       		.uleb128 0xe
 810 00c2 3A       		.uleb128 0x3a
 811 00c3 0B       		.uleb128 0xb
 812 00c4 3B       		.uleb128 0x3b
 813 00c5 05       		.uleb128 0x5
 814 00c6 27       		.uleb128 0x27
 815 00c7 19       		.uleb128 0x19
 816 00c8 11       		.uleb128 0x11
 817 00c9 01       		.uleb128 0x1
 818 00ca 12       		.uleb128 0x12
 819 00cb 06       		.uleb128 0x6
 820 00cc 40       		.uleb128 0x40
 821 00cd 18       		.uleb128 0x18
 822 00ce 9742     		.uleb128 0x2117
 823 00d0 19       		.uleb128 0x19
 824 00d1 00       		.byte	0
 825 00d2 00       		.byte	0
 826 00d3 10       		.uleb128 0x10
 827 00d4 2E       		.uleb128 0x2e
 828 00d5 01       		.byte	0x1
 829 00d6 3F       		.uleb128 0x3f
 830 00d7 19       		.uleb128 0x19
 831 00d8 03       		.uleb128 0x3
 832 00d9 0E       		.uleb128 0xe
 833 00da 3A       		.uleb128 0x3a
 834 00db 0B       		.uleb128 0xb
 835 00dc 3B       		.uleb128 0x3b
 836 00dd 05       		.uleb128 0x5
 837 00de 27       		.uleb128 0x27
 838 00df 19       		.uleb128 0x19
 839 00e0 11       		.uleb128 0x11
 840 00e1 01       		.uleb128 0x1
 841 00e2 12       		.uleb128 0x12
 842 00e3 06       		.uleb128 0x6
 843 00e4 40       		.uleb128 0x40
 844 00e5 18       		.uleb128 0x18
 845 00e6 9742     		.uleb128 0x2117
 846 00e8 19       		.uleb128 0x19
 847 00e9 01       		.uleb128 0x1
 848 00ea 13       		.uleb128 0x13
 849 00eb 00       		.byte	0
 850 00ec 00       		.byte	0
 851 00ed 11       		.uleb128 0x11
 852 00ee 898201   		.uleb128 0x4109
 853 00f1 00       		.byte	0
 854 00f2 11       		.uleb128 0x11
 855 00f3 01       		.uleb128 0x1
 856 00f4 31       		.uleb128 0x31
 857 00f5 13       		.uleb128 0x13
 858 00f6 00       		.byte	0
 859 00f7 00       		.byte	0
 860 00f8 12       		.uleb128 0x12
 861 00f9 34       		.uleb128 0x34
 862 00fa 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 29


 863 00fb 03       		.uleb128 0x3
 864 00fc 0E       		.uleb128 0xe
 865 00fd 3A       		.uleb128 0x3a
 866 00fe 0B       		.uleb128 0xb
 867 00ff 3B       		.uleb128 0x3b
 868 0100 0B       		.uleb128 0xb
 869 0101 49       		.uleb128 0x49
 870 0102 13       		.uleb128 0x13
 871 0103 3F       		.uleb128 0x3f
 872 0104 19       		.uleb128 0x19
 873 0105 3C       		.uleb128 0x3c
 874 0106 19       		.uleb128 0x19
 875 0107 00       		.byte	0
 876 0108 00       		.byte	0
 877 0109 13       		.uleb128 0x13
 878 010a 2E       		.uleb128 0x2e
 879 010b 00       		.byte	0
 880 010c 3F       		.uleb128 0x3f
 881 010d 19       		.uleb128 0x19
 882 010e 03       		.uleb128 0x3
 883 010f 0E       		.uleb128 0xe
 884 0110 3A       		.uleb128 0x3a
 885 0111 0B       		.uleb128 0xb
 886 0112 3B       		.uleb128 0x3b
 887 0113 0B       		.uleb128 0xb
 888 0114 27       		.uleb128 0x27
 889 0115 19       		.uleb128 0x19
 890 0116 3C       		.uleb128 0x3c
 891 0117 19       		.uleb128 0x19
 892 0118 00       		.byte	0
 893 0119 00       		.byte	0
 894 011a 00       		.byte	0
 895              		.section	.debug_aranges,"",%progbits
 896 0000 4C000000 		.4byte	0x4c
 897 0004 0200     		.2byte	0x2
 898 0006 00000000 		.4byte	.Ldebug_info0
 899 000a 04       		.byte	0x4
 900 000b 00       		.byte	0
 901 000c 0000     		.2byte	0
 902 000e 0000     		.2byte	0
 903 0010 00000000 		.4byte	.LFB0
 904 0014 30000000 		.4byte	.LFE0-.LFB0
 905 0018 00000000 		.4byte	.LFB1
 906 001c 34000000 		.4byte	.LFE1-.LFB1
 907 0020 00000000 		.4byte	.LFB2
 908 0024 3C000000 		.4byte	.LFE2-.LFB2
 909 0028 00000000 		.4byte	.LFB3
 910 002c 3C000000 		.4byte	.LFE3-.LFB3
 911 0030 00000000 		.4byte	.LFB4
 912 0034 3C000000 		.4byte	.LFE4-.LFB4
 913 0038 00000000 		.4byte	.LFB5
 914 003c 3C000000 		.4byte	.LFE5-.LFB5
 915 0040 00000000 		.4byte	.LFB6
 916 0044 08000000 		.4byte	.LFE6-.LFB6
 917 0048 00000000 		.4byte	0
 918 004c 00000000 		.4byte	0
 919              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 30


 920              	.Ldebug_ranges0:
 921 0000 00000000 		.4byte	.LFB0
 922 0004 30000000 		.4byte	.LFE0
 923 0008 00000000 		.4byte	.LFB1
 924 000c 34000000 		.4byte	.LFE1
 925 0010 00000000 		.4byte	.LFB2
 926 0014 3C000000 		.4byte	.LFE2
 927 0018 00000000 		.4byte	.LFB3
 928 001c 3C000000 		.4byte	.LFE3
 929 0020 00000000 		.4byte	.LFB4
 930 0024 3C000000 		.4byte	.LFE4
 931 0028 00000000 		.4byte	.LFB5
 932 002c 3C000000 		.4byte	.LFE5
 933 0030 00000000 		.4byte	.LFB6
 934 0034 08000000 		.4byte	.LFE6
 935 0038 00000000 		.4byte	0
 936 003c 00000000 		.4byte	0
 937              		.section	.debug_line,"",%progbits
 938              	.Ldebug_line0:
 939 0000 16010000 		.section	.debug_str,"MS",%progbits,1
 939      02005C00 
 939      00000201 
 939      FB0E0D00 
 939      01010101 
 940              	.LASF24:
 941 0000 696E7465 		.ascii	"interface\000"
 941      72666163 
 941      6500
 942              	.LASF28:
 943 000a 65704372 		.ascii	"epCr0\000"
 943      3000
 944              	.LASF11:
 945 0010 666C6F61 		.ascii	"float\000"
 945      7400
 946              	.LASF34:
 947 0016 434F4D5F 		.ascii	"COM_EP_3_ISR\000"
 947      45505F33 
 947      5F495352 
 947      00
 948              	.LASF41:
 949 0023 434F4D5F 		.ascii	"COM_BUS_RESET_ISR\000"
 949      4255535F 
 949      52455345 
 949      545F4953 
 949      5200
 950              	.LASF40:
 951 0035 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 951      73657273 
 951      5C4C756B 
 951      61732043 
 951      72657574 
 952 0063 65445350 		.ascii	"eDSP_6CHamp\\PSoC Workspace\\Controls.cydsn\000"
 952      5F364348 
 952      616D705C 
 952      50536F43 
 952      20576F72 
 953              	.LASF42:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 31


 954 008d 434F4D5F 		.ascii	"COM_EP\000"
 954      455000
 955              	.LASF26:
 956 0094 6570436E 		.ascii	"epCnt0\000"
 956      743000
 957              	.LASF27:
 958 009b 6570436E 		.ascii	"epCnt1\000"
 958      743100
 959              	.LASF19:
 960 00a2 6570546F 		.ascii	"epToggle\000"
 960      67676C65 
 960      00
 961              	.LASF1:
 962 00ab 756E7369 		.ascii	"unsigned char\000"
 962      676E6564 
 962      20636861 
 962      7200
 963              	.LASF31:
 964 00b9 434F4D5F 		.ascii	"COM_sie_eps_struct\000"
 964      7369655F 
 964      6570735F 
 964      73747275 
 964      637400
 965              	.LASF14:
 966 00cc 72656738 		.ascii	"reg8\000"
 966      00
 967              	.LASF35:
 968 00d1 434F4D5F 		.ascii	"COM_EP_4_ISR\000"
 968      45505F34 
 968      5F495352 
 968      00
 969              	.LASF5:
 970 00de 6C6F6E67 		.ascii	"long unsigned int\000"
 970      20756E73 
 970      69676E65 
 970      6420696E 
 970      7400
 971              	.LASF20:
 972 00f0 61646472 		.ascii	"addr\000"
 972      00
 973              	.LASF30:
 974 00f5 73696545 		.ascii	"sieEp\000"
 974      7000
 975              	.LASF29:
 976 00fb 434F4D5F 		.ascii	"COM_sie_ep_struct\000"
 976      7369655F 
 976      65705F73 
 976      74727563 
 976      7400
 977              	.LASF39:
 978 010d 47656E65 		.ascii	"Generated_Source\\PSoC5\\COM_episr.c\000"
 978      72617465 
 978      645F536F 
 978      75726365 
 978      5C50536F 
 979              	.LASF12:
 980 0130 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 32


 980      6C6500
 981              	.LASF16:
 982 0137 61747472 		.ascii	"attrib\000"
 982      696200
 983              	.LASF22:
 984 013e 62756666 		.ascii	"buffOffset\000"
 984      4F666673 
 984      657400
 985              	.LASF10:
 986 0149 75696E74 		.ascii	"uint16\000"
 986      313600
 987              	.LASF17:
 988 0150 61706945 		.ascii	"apiEpState\000"
 988      70537461 
 988      746500
 989              	.LASF38:
 990 015b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 990      4320342E 
 990      392E3320 
 990      32303135 
 990      30333033 
 991 018e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 991      20726576 
 991      6973696F 
 991      6E203232 
 991      31323230 
 992 01c1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 992      66756E63 
 992      74696F6E 
 992      2D736563 
 992      74696F6E 
 993              	.LASF37:
 994 01e9 434F4D5F 		.ascii	"COM_EP_6_ISR\000"
 994      45505F36 
 994      5F495352 
 994      00
 995              	.LASF25:
 996 01f6 545F434F 		.ascii	"T_COM_EP_CTL_BLOCK\000"
 996      4D5F4550 
 996      5F43544C 
 996      5F424C4F 
 996      434B00
 997              	.LASF8:
 998 0209 756E7369 		.ascii	"unsigned int\000"
 998      676E6564 
 998      20696E74 
 998      00
 999              	.LASF36:
 1000 0216 434F4D5F 		.ascii	"COM_EP_5_ISR\000"
 1000      45505F35 
 1000      5F495352 
 1000      00
 1001              	.LASF7:
 1002 0223 6C6F6E67 		.ascii	"long long unsigned int\000"
 1002      206C6F6E 
 1002      6720756E 
 1002      7369676E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 33


 1002      65642069 
 1003              	.LASF32:
 1004 023a 434F4D5F 		.ascii	"COM_EP_1_ISR\000"
 1004      45505F31 
 1004      5F495352 
 1004      00
 1005              	.LASF18:
 1006 0247 68774570 		.ascii	"hwEpState\000"
 1006      53746174 
 1006      6500
 1007              	.LASF15:
 1008 0251 73697A65 		.ascii	"sizetype\000"
 1008      74797065 
 1008      00
 1009              	.LASF21:
 1010 025a 65704D6F 		.ascii	"epMode\000"
 1010      646500
 1011              	.LASF6:
 1012 0261 6C6F6E67 		.ascii	"long long int\000"
 1012      206C6F6E 
 1012      6720696E 
 1012      7400
 1013              	.LASF13:
 1014 026f 63686172 		.ascii	"char\000"
 1014      00
 1015              	.LASF23:
 1016 0274 62756666 		.ascii	"bufferSize\000"
 1016      65725369 
 1016      7A6500
 1017              	.LASF2:
 1018 027f 73686F72 		.ascii	"short int\000"
 1018      7420696E 
 1018      7400
 1019              	.LASF9:
 1020 0289 75696E74 		.ascii	"uint8\000"
 1020      3800
 1021              	.LASF33:
 1022 028f 434F4D5F 		.ascii	"COM_EP_2_ISR\000"
 1022      45505F32 
 1022      5F495352 
 1022      00
 1023              	.LASF43:
 1024 029c 434F4D5F 		.ascii	"COM_ReInitComponent\000"
 1024      5265496E 
 1024      6974436F 
 1024      6D706F6E 
 1024      656E7400 
 1025              	.LASF4:
 1026 02b0 6C6F6E67 		.ascii	"long int\000"
 1026      20696E74 
 1026      00
 1027              	.LASF0:
 1028 02b9 7369676E 		.ascii	"signed char\000"
 1028      65642063 
 1028      68617200 
 1029              	.LASF3:
 1030 02c5 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc4KLhAf.s 			page 34


 1030      7420756E 
 1030      7369676E 
 1030      65642069 
 1030      6E7400
 1031              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
